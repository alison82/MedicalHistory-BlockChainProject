{
  "contractName": "PatientRecords",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdm",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedAdm",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_stop",
          "type": "bool"
        }
      ],
      "name": "LogSwitchStop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedMed",
          "type": "address"
        }
      ],
      "name": "MedicAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedMed",
          "type": "address"
        }
      ],
      "name": "MedicRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "MedicsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_queryDate",
          "type": "uint256"
        }
      ],
      "name": "MedicsRetrieve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedPat",
          "type": "address"
        }
      ],
      "name": "PatientAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPat",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedPat",
          "type": "address"
        }
      ],
      "name": "PatientRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "RecordAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_descript",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_uploadDate",
          "type": "uint256"
        }
      ],
      "name": "RecordRetrieve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_descript",
          "type": "string"
        }
      ],
      "name": "RecordUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        }
      ],
      "name": "addMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fileToMedic",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hashPicture",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "whenAdded",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMedico",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMedic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "viewMedics",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hashPicture",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "whenAdded",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_stop",
          "type": "bool"
        }
      ],
      "name": "emergencyStop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_descript",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "addRecord",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "viewRecords",
      "outputs": [
        {
          "internalType": "string",
          "name": "_descript",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_uploadDate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_descript",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "updateRecord",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAdm\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"LogSwitchStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedMed\",\"type\":\"address\"}],\"name\":\"MedicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedMed\",\"type\":\"address\"}],\"name\":\"MedicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsRetrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedPat\",\"type\":\"address\"}],\"name\":\"PatientAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedPat\",\"type\":\"address\"}],\"name\":\"PatientRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"RecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_descript\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_uploadDate\",\"type\":\"uint256\"}],\"name\":\"RecordRetrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_descript\",\"type\":\"string\"}],\"name\":\"RecordUpdate\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"}],\"name\":\"addMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_descript\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"addRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"emergencyStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fileToMedic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"whenAdded\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMedico\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMedic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_descript\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"updateRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"viewMedics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"whenAdded\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"viewRecords\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_descript\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_uploadDate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Adri\\u00e1n Constante\",\"details\":\"El contrato hereda las funciones del contrato de roles\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar admin\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como admin\"}},\"addMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como m\\u00e9dico\"}},\"addMedics(address,string,string,string,string,string)\":{\"details\":\"Funci\\u00f3n para agregar un m\\u00e9dico. Esta funci\\u00f3n es realizada por un administrador.\",\"params\":{\"_account\":\"a\",\"_cedula\":\"a\",\"_email\":\"a\",\"_hashPicture\":\"a\",\"_name\":\"a\",\"_specialty\":\"a\"},\"return\":\"_success a\"},\"addPatient(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar paciente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como paciente\"}},\"addRecord(address,string,string)\":{\"details\":\"Funci\\u00f3n de creaci\\u00f3n de Estudio. Esta funci\\u00f3n es realizada por un doctor.\",\"params\":{\"_account\":\"a\",\"_ipfsHash\":\"a\"},\"return\":\"_success a\"},\"emergencyStop(bool)\":{\"params\":{\"_stop\":\"Switch del contrado de encendido/apagado\"}},\"isAdmin(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de admin\"},\"isMedic(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de m\\u00e9dico\"},\"isPatient(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de paciente\"},\"removeMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para remover m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 removida de m\\u00e9dico\"}},\"removePatient(address)\":{\"details\":\"Remover a rol de paciente. Quien invoque al contrato no volver\\u00e1 a ser paciente.\"},\"updateRecord(address,string,string)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"Cuenta del paciente\"},\"return\":\"_ipfsHash The IPFS hash\"},\"viewMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"},\"viewRecords(address,string)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_uploadDate The uploaded timestamp\"}},\"title\":\"Smart Contract de Historial de pacientes - Control de Estudio basado en rol.\"},\"userdoc\":{\"methods\":{\"emergencyStop(bool)\":{\"notice\":\"Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera \\u00fatil cuando nuevos errores sean descubiertos.\"},\"updateRecord(address,string,string)\":{\"notice\":\"Returns el estudio en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"viewMedics(address,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"viewRecords(address,string)\":{\"notice\":\"Returns el estudio en el \\u00edndice del propietario de la direcci\\u00f3n.\"}},\"notice\":\"Este contrato representa el registro de un Estudio asociado a una persona.Debido a las limitaciones de almacenamiento, los Estudio ser\\u00e1l almacenados en IPFS. El hash IPFS generado por el archivo en conjunto con metadatos del paciente ser\\u00e1n almacenados en la blockchain.\"}},\"settings\":{\"compilationTarget\":{\"/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PatientRecords.sol\":\"PatientRecords\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/MedicsRegister.sol\":{\"keccak256\":\"0x0d4fe7899329d518f33f96407c048a8bd921bd2e091ae41f97dfe36cd2791906\",\"urls\":[\"bzz-raw://cffd73141f40df41af304c136d55f5f1448b748ac547e526d2b321402b9d3bae\",\"dweb:/ipfs/QmVYHttYB5UmhGATUuL3q1C9H2xcD541fdehhffkEmeVic\"]},\"/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PatientRecords.sol\":{\"keccak256\":\"0x3fcbfa18898ac4c6b907e98b1d717e4c27236ca5056bcea8c06170845b8d8c50\",\"urls\":[\"bzz-raw://532c9ec4d9cabb3d0997e0eba84e8123ea4a8359fa9bb214688bde17bc244b25\",\"dweb:/ipfs/Qma8swHAmjMUnAzAWyqGZuZndMzW3c8tjZg6FTCNQbm4RE\"]},\"/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/acceso/UserRoles.sol\":{\"keccak256\":\"0x16b814ea97f5b3b1070d71614086dc2edaf2befc31b18ca3e81e873782360c44\",\"urls\":[\"bzz-raw://9fbd1335742147697e9b2d50b83bd348ca19df8fc806869c33758eb130fc2366\",\"dweb:/ipfs/QmSQgquHmCa7rzt1u8iVFN9ds1wuJkehYRwMuUaRPYFEf3\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638f9c79ed11610097578063e765e73511610066578063e765e735146107a5578063ea04f68f14610af4578063ea6d89bd14610d72578063eae3ef8a14610ff1576100f5565b80638f9c79ed146103f1578063a1f23f191461044d578063b0397ff8146105d7578063d47b41d51461061b576100f5565b80636d263ceb116100d35780636d263ceb146102e157806370480275146103255780637d01dbc2146103695780637d0d6257146103ad576100f5565b80630ac62e02146100fa57806324d7806c1461012a5780635995fd0014610186575b600080fd5b6101286004803603602081101561011057600080fd5b8101908080351515906020019092919050505061104d565b005b61016c6004803603602081101561014057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111a565b604051808215151515815260200191505060405180910390f35b61025f6004803603604081101561019c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101d957600080fd5b8201836020820111156101eb57600080fd5b8035906020019184600183028401116401000000008311171561020d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611137565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156102a557808201518184015260208101905061028a565b50505050905090810190601f1680156102d25780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610323600480360360208110156102f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611440565b005b6103676004803603602081101561033b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061144c565b005b6103ab6004803603602081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b6565b005b6103ef600480360360208110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611520565b005b6104336004803603602081101561040757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158a565b604051808215151515815260200191505060405180910390f35b6105bd6004803603606081101561046357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104a057600080fd5b8201836020820111156104b257600080fd5b803590602001918460018302840111640100000000831117156104d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561053757600080fd5b82018360208201111561054957600080fd5b8035906020019184600183028401116401000000008311171561056b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115a7565b604051808215151515815260200191505060405180910390f35b610619600480360360208110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118a0565b005b61078b6004803603606081101561063157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561066e57600080fd5b82018360208201111561068057600080fd5b803590602001918460018302840111640100000000831117156106a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561070557600080fd5b82018360208201111561071757600080fd5b8035906020019184600183028401116401000000008311171561073957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061190a565b604051808215151515815260200191505060405180910390f35b610ada600480360360c08110156107bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156107f857600080fd5b82018360208201111561080a57600080fd5b8035906020019184600183028401116401000000008311171561082c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561088f57600080fd5b8201836020820111156108a157600080fd5b803590602001918460018302840111640100000000831117156108c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561092657600080fd5b82018360208201111561093857600080fd5b8035906020019184600183028401116401000000008311171561095a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109bd57600080fd5b8201836020820111156109cf57600080fd5b803590602001918460018302840111640100000000831117156109f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610a5457600080fd5b820183602082011115610a6657600080fd5b80359060200191846001830284011164010000000083111715610a8857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ba5565b604051808215151515815260200191505060405180910390f35b610b4060048036036040811015610b0a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612081565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b83811015610b96578082015181840152602081019050610b7b565b50505050905090810190601f168015610bc35780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015610bfc578082015181840152602081019050610be1565b50505050905090810190601f168015610c295780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015610c62578082015181840152602081019050610c47565b50505050905090810190601f168015610c8f5780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b83811015610cc8578082015181840152602081019050610cad565b50505050905090810190601f168015610cf55780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610d2e578082015181840152602081019050610d13565b50505050905090810190601f168015610d5b5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b610db460048036036020811015610d8857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612843565b6040518080602001806020018060200180602001806020018881526020018715151515815260200186810386528d818151815260200191508051906020019080838360005b83811015610e14578082015181840152602081019050610df9565b50505050905090810190601f168015610e415780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015610e7a578082015181840152602081019050610e5f565b50505050905090810190601f168015610ea75780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b83811015610ee0578082015181840152602081019050610ec5565b50505050905090810190601f168015610f0d5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015610f46578082015181840152602081019050610f2b565b50505050905090810190601f168015610f735780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015610fac578082015181840152602081019050610f91565b50505050905090810190601f168015610fd95780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b6110336004803603602081101561100757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b8a565b604051808215151515815260200191505060405180910390f35b6110563361111a565b6110ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134e2602b913960400191505060405180910390fd5b80600660006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b6000611130826000612ba790919063ffffffff16565b9050919050565b60606000600660009054906101000a900460ff161561115557600080fd5b61115e3361158a565b8061116e575061116d33612b8a565b5b6111c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061350d6038913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156111fd57600080fd5b602e83511461120b57600080fd5b61121361336a565b6005846040518082805190602001908083835b602083106112495780518252602082019150602081019050602083039250611226565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113205780601f106112f557610100808354040283529160200191611320565b820191906000526020600020905b81548152906001019060200180831161130357829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f4ee0bf4d8ed0ec027f6654b0ba0995ae922f70b4f3bdbc0ff59c0a7dbd5491c6836000015184602001516040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156113ef5780820151818401526020810190506113d4565b50505050905090810190601f16801561141c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a38060000151925080602001519150509250929050565b61144981612c85565b50565b6114553361111a565b6114aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134e2602b913960400191505060405180910390fd5b6114b381612d82565b50565b6114bf3361111a565b611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134e2602b913960400191505060405180910390fd5b61151d81612e96565b50565b61152933612b8a565b61157e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613472602d913960400191505060405180910390fd5b61158781612faa565b50565b60006115a0826002612ba790919063ffffffff16565b9050919050565b6000600660009054906101000a900460ff16156115c357600080fd5b6115cc33612b8a565b611621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613472602d913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561165b57600080fd5b61010083511061166a57600080fd5b602e82511461167857600080fd5b61168061336a565b6005836040518082805190602001908083835b602083106116b65780518252602082019150602081019050602083039250611693565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561178d5780601f106117625761010080835404028352916020019161178d565b820191906000526020600020905b81548152906001019060200180831161177057829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090508381600001819052503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f87a983619f6316fe3e7ce828f67913b1a1048bf0b29304e3722f250644b0498183600001516040518080602001828103825283818151815260200191508051906020019080838360005b8381101561185a57808201518184015260208101905061183f565b50505050905090810190601f1680156118875780820380516001836020036101000a031916815260200191505b509250505060405180910390a360019150509392505050565b6118a93361111a565b6118fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134e2602b913960400191505060405180910390fd5b611907816130be565b50565b6000600660009054906101000a900460ff161561192657600080fd5b61192f33612b8a565b611984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613472602d913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156119be57600080fd5b6119c78461158a565b6119d057600080fd5b6101008351106119df57600080fd5b602e8251146119ed57600080fd5b60004290506119fa61336a565b6040518060600160405280868152602001838152602001600115158152509050806005856040518082805190602001908083835b60208310611a515780518252602082019150602081019050602083039250611a2e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190611aa092919061338d565b506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f977dc7867dd6fb513af3d4bb11f4457a5052487f13412788530b454c0b7dfa2c866040518080602001828103825283818151815260200191508051906020019080838360005b83811015611b5e578082015181840152602081019050611b43565b50505050905090810190601f168015611b8b5780820380516001836020036101000a031916815260200191505b509250505060405180910390a36001925050509392505050565b6000600660009054906101000a900460ff1615611bc157600080fd5b611bca3361111a565b611c1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134e2602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415611c5957600080fd5b6080865110611c6757600080fd5b601e855110611c7557600080fd5b601e845110611c8357600080fd5b601e835110611c9157600080fd5b601e825110611c9f57600080fd5b6000429050611cac61340d565b6040518060e0016040528089815260200188815260200187815260200186815260200185815260200183815260200160011515815250905080600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611d4092919061338d565b506020820151816001019080519060200190611d5d92919061338d565b506040820151816002019080519060200190611d7a92919061338d565b506060820151816003019080519060200190611d9792919061338d565b506080820151816004019080519060200190611db492919061338d565b5060a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550905050611deb896118a0565b3373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b83811015611e96578082015181840152602081019050611e7b565b50505050905090810190601f168015611ec35780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015611efc578082015181840152602081019050611ee1565b50505050905090810190601f168015611f295780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015611f62578082015181840152602081019050611f47565b50505050905090810190601f168015611f8f5780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b83811015611fc8578082015181840152602081019050611fad565b50505050905090810190601f168015611ff55780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b8381101561202e578082015181840152602081019050612013565b50505050905090810190601f16801561205b5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b60608060608060606000600660009054906101000a900460ff16156120a557600080fd5b6120ae3361111a565b612103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806134e2602b913960400191505060405180910390fd5b61210c3361111a565b1561214b578773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561214a57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561218557600080fd5b600087101580156121b657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8711155b6121bf57600080fd5b60004290506121cc61340d565b600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122af5780601f10612284576101008083540402835291602001916122af565b820191906000526020600020905b81548152906001019060200180831161229257829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123515780601f1061232657610100808354040283529160200191612351565b820191906000526020600020905b81548152906001019060200180831161233457829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123f35780601f106123c8576101008083540402835291602001916123f3565b820191906000526020600020905b8154815290600101906020018083116123d657829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124955780601f1061246a57610100808354040283529160200191612495565b820191906000526020600020905b81548152906001019060200180831161247857829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125375780601f1061250c57610100808354040283529160200191612537565b820191906000526020600020905b81548152906001019060200180831161251a57829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff16151515158152505090503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518a60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015612631578082015181840152602081019050612616565b50505050905090810190601f16801561265e5780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b8381101561269757808201518184015260208101905061267c565b50505050905090810190601f1680156126c45780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b838110156126fd5780820151818401526020810190506126e2565b50505050905090810190601f16801561272a5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015612763578082015181840152602081019050612748565b50505050905090810190601f1680156127905780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b838110156127c95780820151818401526020810190506127ae565b50505050905090810190601f1680156127f65780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193508060a00151925050509295509295509295565b6003602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128ef5780601f106128c4576101008083540402835291602001916128ef565b820191906000526020600020905b8154815290600101906020018083116128d257829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561298d5780601f106129625761010080835404028352916020019161298d565b820191906000526020600020905b81548152906001019060200180831161297057829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a2b5780601f10612a0057610100808354040283529160200191612a2b565b820191906000526020600020905b815481529060010190602001808311612a0e57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ac95780601f10612a9e57610100808354040283529160200191612ac9565b820191906000526020600020905b815481529060010190602001808311612aac57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b675780601f10612b3c57610100808354040283529160200191612b67565b820191906000526020600020905b815481529060010190602001808311612b4a57829003601f168201915b5050505050908060050154908060060160009054906101000a900460ff16905087565b6000612ba0826001612ba790919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134c06022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612d28576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4572726f7220656e206c6120616464726573732075736164610000000000000081525060200191505060405180910390fd5b612d3c8160026131d290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fa58cff07db0adda3ab7a40bd2f18ab57210bf38391a52ffd2e8eee6b8bdec71a60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612e25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4572726f7220656e206c6120616464726573732075736164610000000000000081525060200191505060405180910390fd5b612e398160006131d290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4572726f7220656e206c6120616464726573732075736164610000000000000081525060200191505060405180910390fd5b612f4d8160016132ad90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561304d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4572726f7220656e206c6120616464726573732075736164610000000000000081525060200191505060405180910390fd5b6130618160026132ad90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613161576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4572726f7220656e206c6120616464726573732075736164610000000000000081525060200191505060405180910390fd5b6131758160016131d290919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b6131dc8282612ba7565b1561324f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6132b78282612ba7565b61330c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061349f6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b604051806060016040528060608152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133ce57805160ff19168380011785556133fc565b828001600101855582156133fc579182015b828111156133fb5782518255916020019190600101906133e0565b5b509050613409919061344c565b5090565b6040518060e001604052806060815260200160608152602001606081526020016060815260200160608152602001600081526020016000151581525090565b61346e91905b8082111561346a576000816000905550600101613452565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e294e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2850616369656e7465206f206dc3a96469636f29a265627a7a723158201808edf525463e129abf0411c0a830605849863c429c0e807d6472f406f98ad264736f6c63430005100032",
  "sourceMap": "591:5292:3:-;;;828:5:0;805:28;;;;;;;;;;;;;;;;;;;;1099:5:3;1076:28;;;;;;;;;;;;;;;;;;;;1416:21:6;1426:10;1416:9;;;:21;;:::i;:::-;591:5292:3;;5205:201:6;5288:1;5269:21;;:7;:21;;;;5261:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5331:20;5343:7;5331;:11;;;;;;:20;;;;:::i;:::-;5387:10;5367:31;;5378:7;5367:31;;;;;;;;;;;;5205:201;:::o;260:175:7:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;591:5292:3:-;;;;;;;",
  "deployedSourceMap": "591:5292:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;591:5292:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2431:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2431:134:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;2159:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2159:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3698:589:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3698:589:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3698:589:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3698:589:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3698:589:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3698:589:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3698:589:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3995:83:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3995:83:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2402:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2402:89:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;3296:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3296:95:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;4196:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4196:99:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;3743:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3743:110:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4513:610:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4513:610:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4513:610:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4513:610:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4513:610:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4513:610:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4513:610:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4513:610:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4513:610:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4513:610:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3069:89:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3069:89:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2748:715:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2748:715:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2748:715:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2748:715:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2748:715:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2748:715:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2748:715:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2748:715:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2748:715:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2748:715:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2932:1153:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2932:1153:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2932:1153:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2932:1153:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2932:1153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2932:1153:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2932:1153:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2932:1153:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2932:1153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2932:1153:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2932:1153:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2932:1153:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2932:1153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2932:1153:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2932:1153:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2932:1153:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2932:1153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2932:1153:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2932:1153:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2932:1153:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2932:1153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2932:1153:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6035:1167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6035:1167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6035:1167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6035:1167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6035:1167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6035:1167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6035:1167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;676:46:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;676:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;676:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;676:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;676:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;676:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:106:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2823:106:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2431:134:3;1618:19:6;1626:10;1618:7;:19::i;:::-;1610:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:5:3;2494:7;;:15;;;;;;;;;;;;;;;;;;2539:10;2525:32;;;2551:5;2525:32;;;;;;;;;;;;;;;;;;;;;;2431:134;:::o;2159:107:6:-;2214:4;2238:20;2250:7;2238;:11;;:20;;;;:::i;:::-;2231:27;;2159:107;;;:::o;3698:589:3:-;3807:23;3832:19;2168:7;;;;;;;;;;;2167:8;2159:17;;;;;;1892:21:6;1902:10;1892:9;:21::i;:::-;:44;;;;1917:19;1925:10;1917:7;:19::i;:::-;1892:44;1884:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:42:3;3872:54;;:8;:54;;;;3864:63;;;;;;3973:2;3952:9;3946:23;:29;3938:38;;;;;;3989:22;;:::i;:::-;4014:17;4032:9;4014:28;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4014:28:3;;;;;;;;;;;;;;;;;;;;;3989:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4112:10;4060:137;;4089:8;4060:137;;;4137:7;:16;;;4168:7;:18;;;4060:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4060:137:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4220:7;:16;;;4208:28;;4261:7;:18;;;4247:32;;2017:1:6;3698:589:3;;;;;:::o;3995:83:6:-;4050:20;4062:7;4050:11;:20::i;:::-;3995:83;:::o;2402:89::-;1618:19;1626:10;1618:7;:19::i;:::-;1610:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:18;2475:7;2465:9;:18::i;:::-;2402:89;:::o;3296:95::-;1618:19;1626:10;1618:7;:19::i;:::-;1610:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3362:21;3375:7;3362:12;:21::i;:::-;3296:95;:::o;4196:99::-;1753:19;1761:10;1753:7;:19::i;:::-;1745:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4264:23;4279:7;4264:14;:23::i;:::-;4196:99;:::o;3743:110::-;3800:4;3824:21;3837:7;3824:8;:12;;:21;;;;:::i;:::-;3817:28;;3743:110;;;:::o;4513:610:3:-;4675:13;2168:7;;;;;;;;;;;2167:8;2159:17;;;;;;1753:19:6;1761:10;1753:7;:19::i;:::-;1745:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4721:42:3;4709:54;;:8;:54;;;;4701:63;;;;;;4809:3;4789:9;4783:23;:29;4775:38;;;;;;4859:2;4838:9;4832:23;:29;4824:38;;;;;;4875:22;;:::i;:::-;4900:17;4918:9;4900:28;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4900:28:3;;;;;;;;;;;;;;;;;;;;;4875:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4960:9;4941:7;:16;;:28;;;;5037:10;4987:102;;5014:8;4987:102;;;5062:7;:16;;;4987:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4987:102:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5111:4;5100:15;;1833:1:6;4513:610:3;;;;;:::o;3069:89:6:-;1618:19;1626:10;1618:7;:19::i;:::-;1610:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3132:18;3142:7;3132:9;:18::i;:::-;3069:89;:::o;2748:715:3:-;2907:13;2168:7;;;;;;;;;;;2167:8;2159:17;;;;;;1753:19:6;1761:10;1753:7;:19::i;:::-;1745:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2961:1:3;2941:22;;:8;:22;;;;2933:31;;;;;;2983:19;2993:8;2983:9;:19::i;:::-;2975:28;;;;;;3048:3;3028:9;3022:23;:29;3014:38;;;;;;3098:2;3077:9;3071:23;:29;3063:38;;;;;;3114:19;3136:3;3114:25;;3152:23;;:::i;:::-;3178:87;;;;;;;;3200:9;3178:87;;;;3224:11;3178:87;;;;3250:4;3178:87;;;;;3152:113;;3309:8;3278:17;3296:9;3278:28;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3278:28:3;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3384:10;3335:94;;3361:8;3335:94;;;3409:9;3335:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3335:94:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3451:4;3440:15;;1833:1:6;;2748:715:3;;;;;:::o;2932:1153:0:-;3194:13;2168:7:3;;;;;;;;;;;2167:8;2159:17;;;;;;1618:19:6;1626:10;1618:7;:19::i;:::-;1610:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3240:42:0;3228:54;;:8;:54;;;;3220:63;;;;;;3324:3;3308:5;3302:19;:25;3294:34;;;;;;3374:2;3353:10;3347:24;:29;3339:38;;;;;;3420:2;3402:7;3396:21;:26;3388:35;;;;;;3465:2;3448:6;3442:20;:25;3434:34;;;;;;3516:2;3493:12;3487:26;:31;3479:40;;;;;;3532:13;3548:3;3532:19;;3562:20;;:::i;:::-;3585:171;;;;;;;;3606:5;3585:171;;;;3626:10;3585:171;;;;3651:7;3585:171;;;;3673:6;3585:171;;;;3694:12;3585:171;;;;3721:5;3585:171;;;;3741:4;3585:171;;;;;3562:194;;3793:6;3769:11;:21;3781:8;3769:21;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3810:18;3819:8;3810;:18::i;:::-;3895:10;3846:205;;3872:8;3846:205;;;3920:5;3940:10;3965:7;3987:6;4008:12;4035:5;3846:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3846:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3846:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3846:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3846:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3846:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4073:4;4062:15;;1696:1:6;;2932:1153:0;;;;;;;;:::o;6035:1167::-;6137:18;6166:23;6200:20;6231:19;6261:25;6297:17;2168:7:3;;;;;;;;;;;2167:8;2159:17;;;;;;1618:19:6;1626:10;1618:7;:19::i;:::-;1610:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:19:0;6345:10;6337:7;:19::i;:::-;6333:83;;;6395:8;6381:22;;:10;:22;;;;6373:31;;;;;;6333:83;6446:42;6434:54;;:8;:54;;;;6426:63;;;;;;6517:1;6508:5;:10;;:33;;;;;6531:10;6522:5;:19;;6508:33;6500:42;;;;;;6609:18;6630:3;6609:24;;6644:20;;:::i;:::-;6667:11;:21;6679:8;6667:21;;;;;;;;;;;;;;;6644:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6758:10;6706:274;;6735:8;6706:274;;;6783:6;:11;;;6809:6;:16;;;6840:6;:13;;;6868:6;:12;;;6895:6;:18;;;6928:6;:16;;;6959:10;6706:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6706:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6706:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6706:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6706:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6706:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6998:6;:11;;;6991:18;;7032:6;:16;;;7020:28;;7068:6;:13;;;7059:22;;7100:6;:12;;;7092:20;;7137:6;:18;;;7123:32;;7178:6;:16;;;7166:28;;1696:1:6;;6035:1167:0;;;;;;;;:::oo;2823:106:6:-;2878:4;2902:19;2913:7;2902:6;:10;;:19;;;;:::i;:::-;2895:26;;2823:106;;;:::o;779:200:7:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;4460:197:6:-;4545:1;4526:21;;:7;:21;;;;4518:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4588:21;4601:7;4588:8;:12;;:21;;;;:::i;:::-;4638:10;4625:24;;;;;;;;;;;;4460:197;:::o;5205:201::-;5288:1;5269:21;;:7;:21;;;;5261:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5331:20;5343:7;5331;:11;;:20;;;;:::i;:::-;5387:10;5367:31;;5378:7;5367:31;;;;;;;;;;;;5205:201;:::o;6305:208::-;6391:1;6372:21;;:7;:21;;;;6364:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6434:22;6448:7;6434:6;:13;;:22;;;;:::i;:::-;6494:10;6472:33;;6485:7;6472:33;;;;;;;;;;;;6305:208;:::o;4832:214::-;4920:1;4901:21;;:7;:21;;;;4893:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:24;4979:7;4963:8;:15;;:24;;;;:::i;:::-;5027:10;5003:35;;5018:7;5003:35;;;;;;;;;;;;4832:214;:::o;5942:200::-;6025:1;6006:21;;:7;:21;;;;5998:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6068:19;6079:7;6068:6;:10;;:19;;;;:::i;:::-;6123:10;6103:31;;6114:7;6103:31;;;;;;;;;;;;5942:200;:::o;260:175:7:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;591:5292:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.16;\r\n\r\nimport \"./MedicsRegister.sol\";\r\nimport \"./acceso/UserRoles.sol\";\r\n\r\n/**\r\n * @title Smart Contract de Historial de pacientes - Control de Estudio basado en rol.\r\n * @author Adrián Constante\r\n * @notice Este contrato representa el registro de un Estudio asociado a una persona.\r\n * @notice Debido a las limitaciones de almacenamiento, los Estudio serál almacenados en IPFS.\r\n * El hash IPFS generado por el archivo en conjunto con metadatos del paciente serán almacenados en la blockchain.\r\n * @dev El contrato hereda las funciones del contrato de roles\r\n */\r\n\r\ncontract PatientRecords is MedicsRegister {\r\n    /**\r\n     * @title Representa un Estudio el cual le pertenece a un paciente.\r\n     */\r\n    struct Estudio {\r\n        string descript;\r\n        uint256 uploadDate;\r\n        bool isEstudio;\r\n    }\r\n\r\n    /**\r\n     * @notice Mapea el ipfsHash a su estudio..\r\n     */\r\n    mapping (string => Estudio) internal ipfsHashToEstudio;\r\n\r\n    /**\r\n     * @notice Patrón de switch para encender/apagar\r\n        Pasar a otro contrato\r\n     */\r\n    bool private stopped = false;\r\n\r\n    /**\r\n     * @dev Eventos que serán registrados en la blockchain con finalidad de auditoria.\r\n     */\r\n    event RecordAdded(\r\n        address indexed _patient,\r\n        address indexed _medic,\r\n        string _ipfsHash\r\n        );\r\n\r\n    event RecordUpdate(\r\n        address indexed _patient,\r\n        address indexed _medic,\r\n        string _descript\r\n        );\r\n\r\n    event RecordRetrieve(\r\n        address indexed _patient,\r\n        address indexed _medic,\r\n        string _descript,\r\n        uint256 _uploadDate\r\n        );\r\n\r\n//    event RecordDelete(\r\n//        address indexed _patient,\r\n//        address indexed _medic,\r\n//        string _ipfsHash\r\n//        );\r\n    /**\r\n    * @dev Indica que se ha puesto el contrato en pausa.\r\n    * @param _admin Un administrador\r\n    * @param _stop Indica cuando hay una pausa o una reanudación.\r\n    */\r\n    event LogSwitchStop(\r\n        address indexed _admin,\r\n        bool _stop\r\n    );\r\n\r\n    /**\r\n    * @dev Previene de ejecución del contrato\r\n    */\r\n    modifier nonlyStopped {\r\n        require(!stopped);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @notice Pausar el contrato\r\n    * Se detiene el contrato bajo ciertas condiciones.\r\n    * Sera útil cuando nuevos errores sean descubiertos.\r\n    * @param _stop Switch del contrado de encendido/apagado\r\n    */\r\n    function emergencyStop(bool _stop) public onlyAdmin {\r\n        stopped = _stop;\r\n        emit LogSwitchStop(msg.sender, _stop);\r\n    }\r\n\r\n  /**\r\n   * @dev Función de creación de Estudio. Esta función es realizada por un doctor.\r\n   * @param _account a\r\n   * @param _ipfsHash a\r\n   * @return _success a\r\n   */\r\n    function addRecord(\r\n        address _account,\r\n        string memory _descript,\r\n        string memory _ipfsHash)\r\n    public nonlyStopped onlyMedic returns (bool _success) {\r\n        require(_account != address(0));\r\n        require(isPatient(_account));\r\n        require(bytes(_descript).length < 256);\r\n        require(bytes(_ipfsHash).length == 46);\r\n\r\n        uint256 _uploadDate = now;\r\n\r\n        Estudio memory _estudio = Estudio(\r\n            _descript,\r\n            _uploadDate,\r\n            true\r\n        );\r\n\r\n        ipfsHashToEstudio[_ipfsHash] = _estudio;\r\n\r\n        emit RecordAdded(\r\n            _account,\r\n            msg.sender,\r\n            _ipfsHash\r\n        );\r\n        _success = true;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns el estudio en el índice del propietario de la dirección.\r\n    * @dev Controlado por el switch\r\n    * @param _account The owner address\r\n    * @return _uploadDate The uploaded timestamp\r\n    */\r\n    function viewRecords(address _account, string memory _ipfsHash)\r\n    public nonlyStopped onlyPatient returns(string memory _descript, uint256 _uploadDate) {\r\n        require(_account != 0x0000000000000000000000000000000000000000);\r\n        require(bytes(_ipfsHash).length == 46);\r\n\r\n        Estudio memory estudio = ipfsHashToEstudio[_ipfsHash];\r\n\r\n        emit RecordRetrieve(\r\n            _account,\r\n            msg.sender,\r\n            estudio.descript,\r\n            estudio.uploadDate\r\n        );\r\n        _descript = estudio.descript;\r\n        _uploadDate = estudio.uploadDate;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns el estudio en el índice del propietario de la dirección.\r\n    * @dev Controlado por el switch\r\n    * @param _account Cuenta del paciente\r\n    * @return _ipfsHash The IPFS hash\r\n    */\r\n    function updateRecord(\r\n        address _account,\r\n        string memory _descript,\r\n        string memory _ipfsHash)\r\n    public nonlyStopped onlyMedic returns (bool _success) {\r\n        require(_account != 0x0000000000000000000000000000000000000000);\r\n        require(bytes(_descript).length < 256);\r\n        require(bytes(_ipfsHash).length == 46);\r\n\r\n        Estudio memory estudio = ipfsHashToEstudio[_ipfsHash];\r\n\r\n        estudio.descript = _descript;\r\n\r\n        emit RecordUpdate(\r\n            _account,\r\n            msg.sender,\r\n            estudio.descript\r\n        );\r\n        _success = true;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns el estudio en el índice del propietario de la dirección.\r\n    * @dev Controlado por el switch\r\n    * @param _account The owner address\r\n    * @return _uploadDate The uploaded timestamp\r\n    */\r\n//    function deleteRecord(\r\n//        address _account,\r\n//        string memory _ipfsHash\r\n//        )\r\n//    public nonlyStopped onlyMedic returns (bool _success) {\r\n//        require(_account != 0x0000000000000000000000000000000000000000);\r\n//        require(bytes(_ipfsHash).length == 46);\r\n//\r\n//        ipfsHashToEstudio[_ipfsHash].isEstudio = false;\r\n//\r\n//        emit RecordDelete(\r\n//            _account,\r\n//            msg.sender,\r\n//            _ipfsHash\r\n//        );\r\n//\r\n//        _success = true;\r\n//    }\r\n\r\n}\r\n",
  "sourcePath": "D:\\Mega-AC1982\\Develop\\Block-Chain\\v1.1\\MedicalHistory-BlockChainProject\\frontend\\truffle\\contracts\\PatientRecords.sol",
  "ast": {
    "absolutePath": "/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PatientRecords.sol",
    "exportedSymbols": {
      "PatientRecords": [
        1636
      ]
    },
    "id": 1637,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1360,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/MedicsRegister.sol",
        "file": "./MedicsRegister.sol",
        "id": 1361,
        "nodeType": "ImportDirective",
        "scope": 1637,
        "sourceUnit": 330,
        "src": "28:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/acceso/UserRoles.sol",
        "file": "./acceso/UserRoles.sol",
        "id": 1362,
        "nodeType": "ImportDirective",
        "scope": 1637,
        "sourceUnit": 2131,
        "src": "60:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1363,
              "name": "MedicsRegister",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 329,
              "src": "618:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MedicsRegister_$329",
                "typeString": "contract MedicsRegister"
              }
            },
            "id": 1364,
            "nodeType": "InheritanceSpecifier",
            "src": "618:14:3"
          }
        ],
        "contractDependencies": [
          329,
          2130
        ],
        "contractKind": "contract",
        "documentation": "@title Smart Contract de Historial de pacientes - Control de Estudio basado en rol.\n@author Adrián Constante\n@notice Este contrato representa el registro de un Estudio asociado a una persona.\n@notice Debido a las limitaciones de almacenamiento, los Estudio serál almacenados en IPFS.\nEl hash IPFS generado por el archivo en conjunto con metadatos del paciente serán almacenados en la blockchain.\n@dev El contrato hereda las funciones del contrato de roles",
        "fullyImplemented": true,
        "id": 1636,
        "linearizedBaseContracts": [
          1636,
          329,
          2130
        ],
        "name": "PatientRecords",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PatientRecords.Estudio",
            "id": 1371,
            "members": [
              {
                "constant": false,
                "id": 1366,
                "name": "descript",
                "nodeType": "VariableDeclaration",
                "scope": 1371,
                "src": "757:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1365,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "757:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1368,
                "name": "uploadDate",
                "nodeType": "VariableDeclaration",
                "scope": 1371,
                "src": "783:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1367,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "783:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1370,
                "name": "isEstudio",
                "nodeType": "VariableDeclaration",
                "scope": 1371,
                "src": "812:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1369,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Estudio",
            "nodeType": "StructDefinition",
            "scope": 1636,
            "src": "731:103:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1375,
            "name": "ipfsHashToEstudio",
            "nodeType": "VariableDeclaration",
            "scope": 1636,
            "src": "909:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
              "typeString": "mapping(string => struct PatientRecords.Estudio)"
            },
            "typeName": {
              "id": 1374,
              "keyType": {
                "id": 1372,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "918:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "909:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                "typeString": "mapping(string => struct PatientRecords.Estudio)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1373,
                "name": "Estudio",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1371,
                "src": "928:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                  "typeString": "struct PatientRecords.Estudio"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1378,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 1636,
            "src": "1076:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1376,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1076:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1099:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Eventos que serán registrados en la blockchain con finalidad de auditoria.",
            "id": 1386,
            "name": "RecordAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "indexed": true,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "1248:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1382,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "1283:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "indexed": false,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "1316:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:106:3"
            },
            "src": "1220:124:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1394,
            "name": "RecordUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1388,
                  "indexed": true,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1381:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1390,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1416:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1392,
                  "indexed": false,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1449:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1370:106:3"
            },
            "src": "1352:125:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1404,
            "name": "RecordRetrieve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1396,
                  "indexed": true,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1516:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1551:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1400,
                  "indexed": false,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1584:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1402,
                  "indexed": false,
                  "name": "_uploadDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1611:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1505:136:3"
            },
            "src": "1485:157:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev Indica que se ha puesto el contrato en pausa.\n@param _admin Un administrador\n@param _stop Indica cuando hay una pausa o una reanudación.",
            "id": 1410,
            "name": "LogSwitchStop",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1406,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "2002:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1408,
                  "indexed": false,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "2035:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1991:61:3"
            },
            "src": "1972:81:3"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "2148:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2167:8:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1413,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1378,
                          "src": "2168:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "2159:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:17:3"
                },
                {
                  "id": 1417,
                  "nodeType": "PlaceholderStatement",
                  "src": "2187:1:3"
                }
              ]
            },
            "documentation": "@dev Previene de ejecución del contrato",
            "id": 1419,
            "name": "nonlyStopped",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2148:0:3"
            },
            "src": "2126:70:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "2483:82:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1426,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "2494:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1427,
                      "name": "_stop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "2504:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2494:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "2494:15:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1431,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "2539:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2539:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_stop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "2551:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1430,
                      "name": "LogSwitchStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1410
                      ],
                      "referencedDeclaration": 1410,
                      "src": "2525:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "EmitStatement",
                  "src": "2520:37:3"
                }
              ]
            },
            "documentation": "@notice Pausar el contrato\nSe detiene el contrato bajo ciertas condiciones.\nSera útil cuando nuevos errores sean descubiertos.\n@param _stop Switch del contrado de encendido/apagado",
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1424,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1423,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1869,
                  "src": "2473:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2473:9:3"
              }
            ],
            "name": "emergencyStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "2454:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2453:12:3"
            },
            "returnParameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:0:3"
            },
            "scope": 1636,
            "src": "2431:134:3",
            "stateMutability": "nonpayable",
            "superFunction": 97,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1513,
              "nodeType": "Block",
              "src": "2922:541:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1453,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "2941:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2961:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2953:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2953:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2941:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "2933:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1462,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "2993:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1461,
                          "name": "isPatient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1973,
                          "src": "2983:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2983:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "2975:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1468,
                                "name": "_descript",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1441,
                                "src": "3028:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3022:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3022:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3022:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "323536",
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3048:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_256_by_1",
                            "typeString": "int_const 256"
                          },
                          "value": "256"
                        },
                        "src": "3022:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3014:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3014:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "3014:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1477,
                                "name": "_ipfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1443,
                                "src": "3077:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3071:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3071:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3071:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3436",
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3098:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_46_by_1",
                            "typeString": "int_const 46"
                          },
                          "value": "46"
                        },
                        "src": "3071:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3063:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3063:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1483,
                  "nodeType": "ExpressionStatement",
                  "src": "3063:38:3"
                },
                {
                  "assignments": [
                    1485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1485,
                      "name": "_uploadDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1513,
                      "src": "3114:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3114:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1487,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1486,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2228,
                    "src": "3136:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3114:25:3"
                },
                {
                  "assignments": [
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1489,
                      "name": "_estudio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1513,
                      "src": "3152:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1488,
                        "name": "Estudio",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1371,
                        "src": "3152:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                          "typeString": "struct PatientRecords.Estudio"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1495,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "_descript",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1441,
                        "src": "3200:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "_uploadDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "3224:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3250:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1490,
                      "name": "Estudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1371,
                      "src": "3178:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Estudio_$1371_storage_ptr_$",
                        "typeString": "type(struct PatientRecords.Estudio storage pointer)"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_memory",
                      "typeString": "struct PatientRecords.Estudio memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3152:113:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1496,
                        "name": "ipfsHashToEstudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "3278:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                          "typeString": "mapping(string memory => struct PatientRecords.Estudio storage ref)"
                        }
                      },
                      "id": 1498,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1497,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "3296:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3278:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                        "typeString": "struct PatientRecords.Estudio storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1499,
                      "name": "_estudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "3309:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio memory"
                      }
                    },
                    "src": "3278:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                      "typeString": "struct PatientRecords.Estudio storage ref"
                    }
                  },
                  "id": 1501,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:39:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1503,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "3361:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "3384:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3384:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1506,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "3409:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1502,
                      "name": "RecordAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "3335:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1508,
                  "nodeType": "EmitStatement",
                  "src": "3330:99:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1509,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "3440:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3451:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3440:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:15:3"
                }
              ]
            },
            "documentation": "@dev Función de creación de Estudio. Esta función es realizada por un doctor.\n@param _account a\n@param _ipfsHash a\n@return _success a",
            "id": 1514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1446,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1445,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1419,
                  "src": "2875:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2875:12:3"
              },
              {
                "arguments": null,
                "id": 1448,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1447,
                  "name": "onlyMedic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1881,
                  "src": "2888:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2888:9:3"
              }
            ],
            "name": "addRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1439,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2777:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1441,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2804:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1443,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2838:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2766:96:3"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2907:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2906:15:3"
            },
            "scope": 1636,
            "src": "2748:715:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1570,
              "nodeType": "Block",
              "src": "3853:434:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1530,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1516,
                          "src": "3872:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3884:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "3872:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3864:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3864:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "3864:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1537,
                                "name": "_ipfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1518,
                                "src": "3952:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3946:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3946:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3946:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3436",
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3973:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_46_by_1",
                            "typeString": "int_const 46"
                          },
                          "value": "46"
                        },
                        "src": "3946:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3938:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3938:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "ExpressionStatement",
                  "src": "3938:38:3"
                },
                {
                  "assignments": [
                    1545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1545,
                      "name": "estudio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1570,
                      "src": "3989:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1544,
                        "name": "Estudio",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1371,
                        "src": "3989:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                          "typeString": "struct PatientRecords.Estudio"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1549,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1546,
                      "name": "ipfsHashToEstudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "4014:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                        "typeString": "mapping(string memory => struct PatientRecords.Estudio storage ref)"
                      }
                    },
                    "id": 1548,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1547,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "4032:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4014:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                      "typeString": "struct PatientRecords.Estudio storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3989:53:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1551,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1516,
                        "src": "4089:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1552,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "4112:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4112:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1554,
                          "name": "estudio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "4137:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                            "typeString": "struct PatientRecords.Estudio memory"
                          }
                        },
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "descript",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1366,
                        "src": "4137:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1556,
                          "name": "estudio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "4168:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                            "typeString": "struct PatientRecords.Estudio memory"
                          }
                        },
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uploadDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1368,
                        "src": "4168:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1550,
                      "name": "RecordRetrieve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "4060:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,uint256)"
                      }
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:137:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1559,
                  "nodeType": "EmitStatement",
                  "src": "4055:142:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1560,
                      "name": "_descript",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1525,
                      "src": "4208:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1561,
                        "name": "estudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "4220:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                          "typeString": "struct PatientRecords.Estudio memory"
                        }
                      },
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "descript",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1366,
                      "src": "4220:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4208:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "4208:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1565,
                      "name": "_uploadDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1527,
                      "src": "4247:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1566,
                        "name": "estudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "4261:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                          "typeString": "struct PatientRecords.Estudio memory"
                        }
                      },
                      "id": 1567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uploadDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "4261:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4247:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:32:3"
                }
              ]
            },
            "documentation": "@notice Returns el estudio en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account The owner address\n@return _uploadDate The uploaded timestamp",
            "id": 1571,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1520,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1419,
                  "src": "3774:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3774:12:3"
              },
              {
                "arguments": null,
                "id": 1523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1522,
                  "name": "onlyPatient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1898,
                  "src": "3787:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3787:11:3"
              }
            ],
            "name": "viewRecords",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3719:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3737:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3718:43:3"
            },
            "returnParameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1525,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3807:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1527,
                  "name": "_uploadDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3832:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3806:46:3"
            },
            "scope": 1636,
            "src": "3698:589:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1634,
              "nodeType": "Block",
              "src": "4690:433:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1587,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "4709:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4721:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "4709:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "4701:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1594,
                                "name": "_descript",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1575,
                                "src": "4789:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4783:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4783:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4783:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "323536",
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4809:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_256_by_1",
                            "typeString": "int_const 256"
                          },
                          "value": "256"
                        },
                        "src": "4783:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "4775:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4775:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "4775:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1603,
                                "name": "_ipfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1577,
                                "src": "4838:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4832:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4832:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4832:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3436",
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4859:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_46_by_1",
                            "typeString": "int_const 46"
                          },
                          "value": "46"
                        },
                        "src": "4832:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "4824:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4824:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "4824:38:3"
                },
                {
                  "assignments": [
                    1611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1611,
                      "name": "estudio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1634,
                      "src": "4875:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1610,
                        "name": "Estudio",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1371,
                        "src": "4875:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                          "typeString": "struct PatientRecords.Estudio"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1615,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1612,
                      "name": "ipfsHashToEstudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "4900:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                        "typeString": "mapping(string memory => struct PatientRecords.Estudio storage ref)"
                      }
                    },
                    "id": 1614,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1613,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "4918:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4900:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                      "typeString": "struct PatientRecords.Estudio storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4875:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "estudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4941:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                          "typeString": "struct PatientRecords.Estudio memory"
                        }
                      },
                      "id": 1618,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "descript",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1366,
                      "src": "4941:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1619,
                      "name": "_descript",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "4960:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4941:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "4941:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "5014:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1624,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "5037:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5037:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1626,
                          "name": "estudio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1611,
                          "src": "5062:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                            "typeString": "struct PatientRecords.Estudio memory"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "descript",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1366,
                        "src": "5062:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1622,
                      "name": "RecordUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "4987:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "EmitStatement",
                  "src": "4982:107:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1630,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "5100:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5111:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5100:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1633,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:15:3"
                }
              ]
            },
            "documentation": "@notice Returns el estudio en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account Cuenta del paciente\n@return _ipfsHash The IPFS hash",
            "id": 1635,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1579,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1419,
                  "src": "4643:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4643:12:3"
              },
              {
                "arguments": null,
                "id": 1582,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1581,
                  "name": "onlyMedic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1881,
                  "src": "4656:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4656:9:3"
              }
            ],
            "name": "updateRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4545:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4545:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1575,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4572:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1577,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4606:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4534:96:3"
            },
            "returnParameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1584,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4675:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4675:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4674:15:3"
            },
            "scope": 1636,
            "src": "4513:610:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1637,
        "src": "591:5292:3"
      }
    ],
    "src": "0:5885:3"
  },
  "legacyAST": {
    "absolutePath": "/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PatientRecords.sol",
    "exportedSymbols": {
      "PatientRecords": [
        1636
      ]
    },
    "id": 1637,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1360,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/MedicsRegister.sol",
        "file": "./MedicsRegister.sol",
        "id": 1361,
        "nodeType": "ImportDirective",
        "scope": 1637,
        "sourceUnit": 330,
        "src": "28:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Mega-AC1982/Develop/Block-Chain/v1.1/MedicalHistory-BlockChainProject/frontend/truffle/contracts/acceso/UserRoles.sol",
        "file": "./acceso/UserRoles.sol",
        "id": 1362,
        "nodeType": "ImportDirective",
        "scope": 1637,
        "sourceUnit": 2131,
        "src": "60:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1363,
              "name": "MedicsRegister",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 329,
              "src": "618:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MedicsRegister_$329",
                "typeString": "contract MedicsRegister"
              }
            },
            "id": 1364,
            "nodeType": "InheritanceSpecifier",
            "src": "618:14:3"
          }
        ],
        "contractDependencies": [
          329,
          2130
        ],
        "contractKind": "contract",
        "documentation": "@title Smart Contract de Historial de pacientes - Control de Estudio basado en rol.\n@author Adrián Constante\n@notice Este contrato representa el registro de un Estudio asociado a una persona.\n@notice Debido a las limitaciones de almacenamiento, los Estudio serál almacenados en IPFS.\nEl hash IPFS generado por el archivo en conjunto con metadatos del paciente serán almacenados en la blockchain.\n@dev El contrato hereda las funciones del contrato de roles",
        "fullyImplemented": true,
        "id": 1636,
        "linearizedBaseContracts": [
          1636,
          329,
          2130
        ],
        "name": "PatientRecords",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PatientRecords.Estudio",
            "id": 1371,
            "members": [
              {
                "constant": false,
                "id": 1366,
                "name": "descript",
                "nodeType": "VariableDeclaration",
                "scope": 1371,
                "src": "757:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1365,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "757:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1368,
                "name": "uploadDate",
                "nodeType": "VariableDeclaration",
                "scope": 1371,
                "src": "783:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1367,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "783:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1370,
                "name": "isEstudio",
                "nodeType": "VariableDeclaration",
                "scope": 1371,
                "src": "812:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1369,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Estudio",
            "nodeType": "StructDefinition",
            "scope": 1636,
            "src": "731:103:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1375,
            "name": "ipfsHashToEstudio",
            "nodeType": "VariableDeclaration",
            "scope": 1636,
            "src": "909:54:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
              "typeString": "mapping(string => struct PatientRecords.Estudio)"
            },
            "typeName": {
              "id": 1374,
              "keyType": {
                "id": 1372,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "918:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "909:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                "typeString": "mapping(string => struct PatientRecords.Estudio)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1373,
                "name": "Estudio",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1371,
                "src": "928:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                  "typeString": "struct PatientRecords.Estudio"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1378,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 1636,
            "src": "1076:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1376,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1076:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1099:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Eventos que serán registrados en la blockchain con finalidad de auditoria.",
            "id": 1386,
            "name": "RecordAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "indexed": true,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "1248:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1382,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "1283:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1384,
                  "indexed": false,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1386,
                  "src": "1316:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:106:3"
            },
            "src": "1220:124:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1394,
            "name": "RecordUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1388,
                  "indexed": true,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1381:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1390,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1416:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1392,
                  "indexed": false,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1449:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1370:106:3"
            },
            "src": "1352:125:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1404,
            "name": "RecordRetrieve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1396,
                  "indexed": true,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1516:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1398,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1551:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1400,
                  "indexed": false,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1584:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1402,
                  "indexed": false,
                  "name": "_uploadDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "1611:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1505:136:3"
            },
            "src": "1485:157:3"
          },
          {
            "anonymous": false,
            "documentation": "@dev Indica que se ha puesto el contrato en pausa.\n@param _admin Un administrador\n@param _stop Indica cuando hay una pausa o una reanudación.",
            "id": 1410,
            "name": "LogSwitchStop",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1406,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "2002:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1408,
                  "indexed": false,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 1410,
                  "src": "2035:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1991:61:3"
            },
            "src": "1972:81:3"
          },
          {
            "body": {
              "id": 1418,
              "nodeType": "Block",
              "src": "2148:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2167:8:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1413,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1378,
                          "src": "2168:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "2159:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:17:3"
                },
                {
                  "id": 1417,
                  "nodeType": "PlaceholderStatement",
                  "src": "2187:1:3"
                }
              ]
            },
            "documentation": "@dev Previene de ejecución del contrato",
            "id": 1419,
            "name": "nonlyStopped",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2148:0:3"
            },
            "src": "2126:70:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "2483:82:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1426,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "2494:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1427,
                      "name": "_stop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1421,
                      "src": "2504:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2494:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "2494:15:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1431,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "2539:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2539:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_stop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "2551:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1430,
                      "name": "LogSwitchStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1410
                      ],
                      "referencedDeclaration": 1410,
                      "src": "2525:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "EmitStatement",
                  "src": "2520:37:3"
                }
              ]
            },
            "documentation": "@notice Pausar el contrato\nSe detiene el contrato bajo ciertas condiciones.\nSera útil cuando nuevos errores sean descubiertos.\n@param _stop Switch del contrado de encendido/apagado",
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1424,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1423,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1869,
                  "src": "2473:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2473:9:3"
              }
            ],
            "name": "emergencyStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "2454:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2453:12:3"
            },
            "returnParameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2483:0:3"
            },
            "scope": 1636,
            "src": "2431:134:3",
            "stateMutability": "nonpayable",
            "superFunction": 97,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1513,
              "nodeType": "Block",
              "src": "2922:541:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1453,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "2941:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2961:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2953:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2953:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2941:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "2933:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:31:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1462,
                            "name": "_account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1439,
                            "src": "2993:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1461,
                          "name": "isPatient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1973,
                          "src": "2983:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2983:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "2975:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2975:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1468,
                                "name": "_descript",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1441,
                                "src": "3028:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3022:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3022:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3022:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "323536",
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3048:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_256_by_1",
                            "typeString": "int_const 256"
                          },
                          "value": "256"
                        },
                        "src": "3022:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3014:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3014:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "3014:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1477,
                                "name": "_ipfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1443,
                                "src": "3077:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3071:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3071:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3071:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3436",
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3098:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_46_by_1",
                            "typeString": "int_const 46"
                          },
                          "value": "46"
                        },
                        "src": "3071:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3063:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3063:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1483,
                  "nodeType": "ExpressionStatement",
                  "src": "3063:38:3"
                },
                {
                  "assignments": [
                    1485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1485,
                      "name": "_uploadDate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1513,
                      "src": "3114:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3114:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1487,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1486,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2228,
                    "src": "3136:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3114:25:3"
                },
                {
                  "assignments": [
                    1489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1489,
                      "name": "_estudio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1513,
                      "src": "3152:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1488,
                        "name": "Estudio",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1371,
                        "src": "3152:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                          "typeString": "struct PatientRecords.Estudio"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1495,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "_descript",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1441,
                        "src": "3200:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1492,
                        "name": "_uploadDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "3224:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3250:4:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1490,
                      "name": "Estudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1371,
                      "src": "3178:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Estudio_$1371_storage_ptr_$",
                        "typeString": "type(struct PatientRecords.Estudio storage pointer)"
                      }
                    },
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_memory",
                      "typeString": "struct PatientRecords.Estudio memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3152:113:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1496,
                        "name": "ipfsHashToEstudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "3278:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                          "typeString": "mapping(string memory => struct PatientRecords.Estudio storage ref)"
                        }
                      },
                      "id": 1498,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1497,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "3296:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3278:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                        "typeString": "struct PatientRecords.Estudio storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1499,
                      "name": "_estudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "3309:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio memory"
                      }
                    },
                    "src": "3278:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                      "typeString": "struct PatientRecords.Estudio storage ref"
                    }
                  },
                  "id": 1501,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:39:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1503,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "3361:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "3384:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3384:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1506,
                        "name": "_ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "3409:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1502,
                      "name": "RecordAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "3335:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1508,
                  "nodeType": "EmitStatement",
                  "src": "3330:99:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1509,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "3440:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3451:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3440:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:15:3"
                }
              ]
            },
            "documentation": "@dev Función de creación de Estudio. Esta función es realizada por un doctor.\n@param _account a\n@param _ipfsHash a\n@return _success a",
            "id": 1514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1446,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1445,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1419,
                  "src": "2875:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2875:12:3"
              },
              {
                "arguments": null,
                "id": 1448,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1447,
                  "name": "onlyMedic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1881,
                  "src": "2888:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2888:9:3"
              }
            ],
            "name": "addRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1439,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2777:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1441,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2804:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1443,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2838:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2766:96:3"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1514,
                  "src": "2907:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2906:15:3"
            },
            "scope": 1636,
            "src": "2748:715:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1570,
              "nodeType": "Block",
              "src": "3853:434:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1530,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1516,
                          "src": "3872:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3884:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "3872:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3864:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3864:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1534,
                  "nodeType": "ExpressionStatement",
                  "src": "3864:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1537,
                                "name": "_ipfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1518,
                                "src": "3952:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3946:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3946:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3946:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3436",
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3973:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_46_by_1",
                            "typeString": "int_const 46"
                          },
                          "value": "46"
                        },
                        "src": "3946:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "3938:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3938:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "ExpressionStatement",
                  "src": "3938:38:3"
                },
                {
                  "assignments": [
                    1545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1545,
                      "name": "estudio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1570,
                      "src": "3989:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1544,
                        "name": "Estudio",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1371,
                        "src": "3989:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                          "typeString": "struct PatientRecords.Estudio"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1549,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1546,
                      "name": "ipfsHashToEstudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "4014:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                        "typeString": "mapping(string memory => struct PatientRecords.Estudio storage ref)"
                      }
                    },
                    "id": 1548,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1547,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "4032:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4014:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                      "typeString": "struct PatientRecords.Estudio storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3989:53:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1551,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1516,
                        "src": "4089:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1552,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "4112:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4112:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1554,
                          "name": "estudio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "4137:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                            "typeString": "struct PatientRecords.Estudio memory"
                          }
                        },
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "descript",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1366,
                        "src": "4137:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1556,
                          "name": "estudio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1545,
                          "src": "4168:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                            "typeString": "struct PatientRecords.Estudio memory"
                          }
                        },
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "uploadDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1368,
                        "src": "4168:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1550,
                      "name": "RecordRetrieve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "4060:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,uint256)"
                      }
                    },
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:137:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1559,
                  "nodeType": "EmitStatement",
                  "src": "4055:142:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1560,
                      "name": "_descript",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1525,
                      "src": "4208:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1561,
                        "name": "estudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "4220:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                          "typeString": "struct PatientRecords.Estudio memory"
                        }
                      },
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "descript",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1366,
                      "src": "4220:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4208:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1564,
                  "nodeType": "ExpressionStatement",
                  "src": "4208:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1565,
                      "name": "_uploadDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1527,
                      "src": "4247:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1566,
                        "name": "estudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "4261:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                          "typeString": "struct PatientRecords.Estudio memory"
                        }
                      },
                      "id": 1567,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uploadDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "4261:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4247:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:32:3"
                }
              ]
            },
            "documentation": "@notice Returns el estudio en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account The owner address\n@return _uploadDate The uploaded timestamp",
            "id": 1571,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1520,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1419,
                  "src": "3774:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3774:12:3"
              },
              {
                "arguments": null,
                "id": 1523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1522,
                  "name": "onlyPatient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1898,
                  "src": "3787:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3787:11:3"
              }
            ],
            "name": "viewRecords",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3719:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3737:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3737:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3718:43:3"
            },
            "returnParameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1525,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3807:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1527,
                  "name": "_uploadDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1571,
                  "src": "3832:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3806:46:3"
            },
            "scope": 1636,
            "src": "3698:589:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1634,
              "nodeType": "Block",
              "src": "4690:433:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1587,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "4709:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4721:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "4709:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "4701:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1594,
                                "name": "_descript",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1575,
                                "src": "4789:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4783:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4783:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4783:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "323536",
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4809:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_256_by_1",
                            "typeString": "int_const 256"
                          },
                          "value": "256"
                        },
                        "src": "4783:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "4775:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4775:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "4775:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1603,
                                "name": "_ipfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1577,
                                "src": "4838:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4832:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4832:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4832:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3436",
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4859:2:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_46_by_1",
                            "typeString": "int_const 46"
                          },
                          "value": "46"
                        },
                        "src": "4832:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2229,
                        2230
                      ],
                      "referencedDeclaration": 2229,
                      "src": "4824:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4824:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "4824:38:3"
                },
                {
                  "assignments": [
                    1611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1611,
                      "name": "estudio",
                      "nodeType": "VariableDeclaration",
                      "scope": 1634,
                      "src": "4875:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                        "typeString": "struct PatientRecords.Estudio"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1610,
                        "name": "Estudio",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1371,
                        "src": "4875:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_storage_ptr",
                          "typeString": "struct PatientRecords.Estudio"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1615,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1612,
                      "name": "ipfsHashToEstudio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1375,
                      "src": "4900:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Estudio_$1371_storage_$",
                        "typeString": "mapping(string memory => struct PatientRecords.Estudio storage ref)"
                      }
                    },
                    "id": 1614,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1613,
                      "name": "_ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "4918:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4900:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Estudio_$1371_storage",
                      "typeString": "struct PatientRecords.Estudio storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4875:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "estudio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4941:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                          "typeString": "struct PatientRecords.Estudio memory"
                        }
                      },
                      "id": 1618,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "descript",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1366,
                      "src": "4941:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1619,
                      "name": "_descript",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1575,
                      "src": "4960:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4941:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "4941:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "5014:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1624,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2226,
                          "src": "5037:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5037:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1626,
                          "name": "estudio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1611,
                          "src": "5062:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Estudio_$1371_memory_ptr",
                            "typeString": "struct PatientRecords.Estudio memory"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "descript",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1366,
                        "src": "5062:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1622,
                      "name": "RecordUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "4987:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "EmitStatement",
                  "src": "4982:107:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1630,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "5100:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5111:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5100:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1633,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:15:3"
                }
              ]
            },
            "documentation": "@notice Returns el estudio en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account Cuenta del paciente\n@return _ipfsHash The IPFS hash",
            "id": 1635,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1580,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1579,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1419,
                  "src": "4643:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4643:12:3"
              },
              {
                "arguments": null,
                "id": 1582,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1581,
                  "name": "onlyMedic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1881,
                  "src": "4656:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4656:9:3"
              }
            ],
            "name": "updateRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4545:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4545:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1575,
                  "name": "_descript",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4572:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1577,
                  "name": "_ipfsHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4606:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4534:96:3"
            },
            "returnParameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1584,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1635,
                  "src": "4675:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4675:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4674:15:3"
            },
            "scope": 1636,
            "src": "4513:610:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1637,
        "src": "591:5292:3"
      }
    ],
    "src": "0:5885:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-29T07:42:55.044Z",
  "devdoc": {
    "author": "Adrián Constante",
    "details": "El contrato hereda las funciones del contrato de roles",
    "methods": {
      "addAdmin(address)": {
        "details": "Función pública para asignar admin",
        "params": {
          "account": "Cuenta que será asignada como admin"
        }
      },
      "addMedic(address)": {
        "details": "Función pública para asignar médico",
        "params": {
          "account": "Cuenta que será asignada como médico"
        }
      },
      "addMedics(address,string,string,string,string,string)": {
        "details": "Función para agregar un médico. Esta función es realizada por un administrador.",
        "params": {
          "_account": "a",
          "_cedula": "a",
          "_email": "a",
          "_hashPicture": "a",
          "_name": "a",
          "_specialty": "a"
        },
        "return": "_success a"
      },
      "addPatient(address)": {
        "details": "Función pública para asignar paciente",
        "params": {
          "account": "Cuenta que será asignada como paciente"
        }
      },
      "addRecord(address,string,string)": {
        "details": "Función de creación de Estudio. Esta función es realizada por un doctor.",
        "params": {
          "_account": "a",
          "_ipfsHash": "a"
        },
        "return": "_success a"
      },
      "emergencyStop(bool)": {
        "params": {
          "_stop": "Switch del contrado de encendido/apagado"
        }
      },
      "isAdmin(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de admin"
      },
      "isMedic(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de médico"
      },
      "isPatient(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de paciente"
      },
      "removeMedic(address)": {
        "details": "Función pública para remover médico",
        "params": {
          "account": "Cuenta que será removida de médico"
        }
      },
      "removePatient(address)": {
        "details": "Remover a rol de paciente. Quien invoque al contrato no volverá a ser paciente."
      },
      "updateRecord(address,string,string)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "Cuenta del paciente"
        },
        "return": "_ipfsHash The IPFS hash"
      },
      "viewMedics(address,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "The owner address"
        },
        "return": "_date The uploaded timestamp"
      },
      "viewRecords(address,string)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "The owner address"
        },
        "return": "_uploadDate The uploaded timestamp"
      }
    },
    "title": "Smart Contract de Historial de pacientes - Control de Estudio basado en rol."
  },
  "userdoc": {
    "methods": {
      "emergencyStop(bool)": {
        "notice": "Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera útil cuando nuevos errores sean descubiertos."
      },
      "updateRecord(address,string,string)": {
        "notice": "Returns el estudio en el índice del propietario de la dirección."
      },
      "viewMedics(address,uint256)": {
        "notice": "Returns el Medico en el índice del propietario de la dirección."
      },
      "viewRecords(address,string)": {
        "notice": "Returns el estudio en el índice del propietario de la dirección."
      }
    },
    "notice": "Este contrato representa el registro de un Estudio asociado a una persona.Debido a las limitaciones de almacenamiento, los Estudio serál almacenados en IPFS. El hash IPFS generado por el archivo en conjunto con metadatos del paciente serán almacenados en la blockchain."
  }
}