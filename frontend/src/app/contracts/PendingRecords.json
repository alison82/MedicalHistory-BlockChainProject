{
  "contractName": "PendingRecords",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdm",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedAdm",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountRen",
          "type": "address"
        }
      ],
      "name": "AdminRenounce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAssistant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedAssistant",
          "type": "address"
        }
      ],
      "name": "AssistantAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAssistant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedAssistant",
          "type": "address"
        }
      ],
      "name": "AssistantRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_stop",
          "type": "bool"
        }
      ],
      "name": "LogSwitchStop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedMed",
          "type": "address"
        }
      ],
      "name": "MedicAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedMed",
          "type": "address"
        }
      ],
      "name": "MedicRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "medRen",
          "type": "address"
        }
      ],
      "name": "MedicRenounce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "MedicsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "MedicsDelete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_queryDate",
          "type": "uint256"
        }
      ],
      "name": "MedicsRetrieve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_queryDate",
          "type": "uint256"
        }
      ],
      "name": "MedicsUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "NewMedicRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPat",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedPat",
          "type": "address"
        }
      ],
      "name": "PatientAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPat",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedPat",
          "type": "address"
        }
      ],
      "name": "PatientRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "RemoveMedicRecord",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAssistant",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        }
      ],
      "name": "addMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "deleteMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_stop",
          "type": "bool"
        }
      ],
      "name": "emergencyStop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fileToMedic",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hashPicture",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAssistant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMedic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "medicPending",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeAssistant",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "updateMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "viewMedics",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hashPicture",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_hashString",
          "type": "string"
        }
      ],
      "name": "addMedicRecord",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPendingLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_index",
          "type": "uint32"
        }
      ],
      "name": "getPendingRequest",
      "outputs": [
        {
          "internalType": "string",
          "name": "_hashString",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_index",
          "type": "uint32"
        }
      ],
      "name": "removePending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAdm\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountRen\",\"type\":\"address\"}],\"name\":\"AdminRenounce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAssistant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAssistant\",\"type\":\"address\"}],\"name\":\"AssistantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAssistant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedAssistant\",\"type\":\"address\"}],\"name\":\"AssistantRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"LogSwitchStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedMed\",\"type\":\"address\"}],\"name\":\"MedicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedMed\",\"type\":\"address\"}],\"name\":\"MedicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"medRen\",\"type\":\"address\"}],\"name\":\"MedicRenounce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsRetrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"NewMedicRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedPat\",\"type\":\"address\"}],\"name\":\"PatientAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedPat\",\"type\":\"address\"}],\"name\":\"PatientRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"RemoveMedicRecord\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAssistant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hashString\",\"type\":\"string\"}],\"name\":\"addMedicRecord\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"}],\"name\":\"addMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"deleteMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"emergencyStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fileToMedic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPendingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"getPendingRequest\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_hashString\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAssistant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMedic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"medicPending\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAssistant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"removePending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"updateMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"viewMedics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addAdmin(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar admin\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como admin\"}},\"addAssistant(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar asistente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como asistente\"}},\"addMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como m\\u00e9dico\"}},\"addMedicRecord(string)\":{\"params\":{\"_hashString\":\"cadena de IPFS que contiene el archivo de registro\"}},\"addMedics(address,string,string,string,string,string)\":{\"details\":\"Funci\\u00f3n para agregar un m\\u00e9dico. Esta funci\\u00f3n es realizada por un administrador.\",\"params\":{\"_account\":\"a\",\"_cedula\":\"a\",\"_email\":\"a\",\"_hashPicture\":\"a\",\"_name\":\"a\",\"_specialty\":\"a\"},\"return\":\"_success a\"},\"addPatient(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar paciente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como paciente\"}},\"deleteMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"},\"emergencyStop(bool)\":{\"params\":{\"_stop\":\"Switch del contrado de encendido/apagado\"}},\"getPendingLength()\":{\"return\":\"Longitud de MedicPending\"},\"getPendingRequest(uint32)\":{\"params\":{\"_index\":\"Indice a consultar\"},\"return\":\"Cadena dentro del indice indicado en MedicPending\"},\"isAdmin(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de admin\"},\"isAssistant(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de asistente\"},\"isMedic(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de m\\u00e9dico\"},\"isPatient(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de paciente\"},\"removeAssistant(address)\":{\"details\":\"Remover a rol de asistente. Quien invoque al contrato no volver\\u00e1 a ser asistente.\"},\"removeMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para remover m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 removida de m\\u00e9dico\"}},\"removePatient(address)\":{\"details\":\"Remover a rol de paciente. Quien invoque al contrato no volver\\u00e1 a ser paciente.\"},\"removePending(uint32)\":{\"details\":\"Hace un swap para no dejar espacios en blanco\",\"params\":{\"_index\":\"The owner address\"},\"return\":\"booleano diciendo si fue exitoso o no\"},\"renounceAdmin()\":{\"details\":\"Renunciar a rol de administrador. Quien inque al contrato no volver\\u00e1 a ser admin.\"},\"renounceMedic()\":{\"details\":\"Renunciar a rol de personal m\\u00e9dico. Quien invoque al contrato no volver\\u00e1 a ser m\\u00e9dico.\"},\"updateMedics(address,string,string,string,string,string,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"Cuenta del m\\u00e9dico\"},\"return\":\"a\"},\"viewMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"}}},\"userdoc\":{\"methods\":{\"addMedicRecord(string)\":{\"notice\":\"Guarda el hash de un registro del medico\"},\"deleteMedics(address,uint256)\":{\"notice\":\"Returns el medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"emergencyStop(bool)\":{\"notice\":\"Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera \\u00fatil cuando nuevos errores sean descubiertos.\"},\"getPendingLength()\":{\"notice\":\"Regresa la longitud del arreglo de solicitudes pendientes\"},\"getPendingRequest(uint32)\":{\"notice\":\"Regresa la cadena hash de un indice dado\"},\"removePending(uint32)\":{\"notice\":\"Remueve el elemento del indice indicado\"},\"updateMedics(address,string,string,string,string,string,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"viewMedics(address,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PendingRecords.sol\":\"PendingRecords\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/MedicsRegister.sol\":{\"keccak256\":\"0xf318952f1be47fa85c0117626ada37cccb4d5399d96c3c6c6be1f490bb427324\",\"urls\":[\"bzz-raw://99b9cd9aca618b16ba0f66dba205413e8258e255fe51e1069535708ac1c0d9ab\",\"dweb:/ipfs/QmULcLNpLmqmT3e7vQqMgwx6Z8Z52DARC2hfkohZWYmL37\"]},\"/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PendingRecords.sol\":{\"keccak256\":\"0x6d853ad47b5687ab461ca68ae4f4e93f58c4b7685388805f2f15bf062896273e\",\"urls\":[\"bzz-raw://5a6581fa2fbb64f76fc1e70f862376d50c1bb09b8bba519056c821ac06b43448\",\"dweb:/ipfs/QmaT2B6jrnyUwaE6uwQ2EC3L1Lu5cSEMuoFqzVZG7qBEDM\"]},\"/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/acceso/UserRoles.sol\":{\"keccak256\":\"0xf5c2436e3db9d082d7605c4794afe48a621c85fc82c03b93068cbdd292046c6c\",\"urls\":[\"bzz-raw://01b2ab1de007a409ea63e4831fc2f7ecf0cc6fdc91b4440bdd7a97c0674aba33\",\"dweb:/ipfs/QmRbmvHWYimBLpSS6arVHdsudTS43rinRFxHJpz9oFK1ed\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600560006101000a81548160ff02191690831515021790555062000030336200003660201b60201c565b62000272565b62000051816000620000ae60201b62003e801790919060201c565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b620000c082826200019260201b60201c565b1562000134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200021b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200452f6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6142ad80620002826000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637d0d6257116100c3578063beea194b1161007c578063beea194b14610a21578063c6584bb814610a6d578063d6aac86914610ac9578063e765e73514610d47578063ea04f68f14611096578063eae3ef8a1461130d57610158565b80637d0d6257146108d15780638bad0c0a146109155780638f9c79ed1461091f5780639b2ae4c61461097b578063b0397ff814610999578063b8792f0b146109dd57610158565b80635acec4ab116101155780635acec4ab146103bb5780635c8b67df1461046857806362499d5c146104ac5780636d263ceb1461080557806370480275146108495780637d01dbc21461088d57610158565b80630ac62e021461015d57806324d7806c1461018d57806333645874146101e957806333dc0abd1461024f57806347d96cb114610259578063510b2f6114610300575b600080fd5b61018b6004803603602081101561017357600080fd5b81019080803515159060200190929190505050611369565b005b6101cf600480360360208110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611436565b604051808215151515815260200191505060405180910390f35b610235600480360360408110156101ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611453565b604051808215151515815260200191505060405180910390f35b61025761182e565b005b6102856004803603602081101561026f57600080fd5b8101908080359060200190929190505050611897565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c55780820151818401526020810190506102aa565b50505050905090810190601f1680156102f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103b96004803603602081101561031657600080fd5b810190808035906020019064010000000081111561033357600080fd5b82018360208201111561034557600080fd5b8035906020019184600183028401116401000000008311171561036757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611950565b005b6103ed600480360360208110156103d157600080fd5b81019080803563ffffffff169060200190929190505050611a2e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104aa6004803603602081101561047e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aed565b005b6107eb600480360360e08110156104c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104ff57600080fd5b82018360208201111561051157600080fd5b8035906020019184600183028401116401000000008311171561053357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561059657600080fd5b8201836020820111156105a857600080fd5b803590602001918460018302840111640100000000831117156105ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062d57600080fd5b82018360208201111561063f57600080fd5b8035906020019184600183028401116401000000008311171561066157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106c457600080fd5b8201836020820111156106d657600080fd5b803590602001918460018302840111640100000000831117156106f857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561075b57600080fd5b82018360208201111561076d57600080fd5b8035906020019184600183028401116401000000008311171561078f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611b57565b604051808215151515815260200191505060405180910390f35b6108476004803603602081101561081b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123a9565b005b61088b6004803603602081101561085f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123b5565b005b6108cf600480360360208110156108a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061241f565b005b610913600480360360208110156108e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612489565b005b61091d6124f3565b005b6109616004803603602081101561093557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124fe565b604051808215151515815260200191505060405180910390f35b61098361251b565b6040518082815260200191505060405180910390f35b6109db600480360360208110156109af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612528565b005b610a1f600480360360208110156109f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612592565b005b610a5360048036036020811015610a3757600080fd5b81019080803563ffffffff1690602001909291905050506125fc565b604051808215151515815260200191505060405180910390f35b610aaf60048036036020811015610a8357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612836565b604051808215151515815260200191505060405180910390f35b610b1560048036036040811015610adf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612853565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b83811015610b6b578082015181840152602081019050610b50565b50505050905090810190601f168015610b985780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015610bd1578082015181840152602081019050610bb6565b50505050905090810190601f168015610bfe5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015610c37578082015181840152602081019050610c1c565b50505050905090810190601f168015610c645780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b83811015610c9d578082015181840152602081019050610c82565b50505050905090810190601f168015610cca5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610d03578082015181840152602081019050610ce8565b50505050905090810190601f168015610d305780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b61107c600480360360c0811015610d5d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610d9a57600080fd5b820183602082011115610dac57600080fd5b80359060200191846001830284011164010000000083111715610dce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e3157600080fd5b820183602082011115610e4357600080fd5b80359060200191846001830284011164010000000083111715610e6557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ec857600080fd5b820183602082011115610eda57600080fd5b80359060200191846001830284011164010000000083111715610efc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f5f57600080fd5b820183602082011115610f7157600080fd5b80359060200191846001830284011164010000000083111715610f9357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ff657600080fd5b82018360208201111561100857600080fd5b8035906020019184600183028401116401000000008311171561102a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ba1565b604051808215151515815260200191505060405180910390f35b6110e2600480360360408110156110ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613076565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015611132578082015181840152602081019050611117565b50505050905090810190601f16801561115f5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b8381101561119857808201518184015260208101905061117d565b50505050905090810190601f1680156111c55780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b838110156111fe5780820151818401526020810190506111e3565b50505050905090810190601f16801561122b5780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015611264578082015181840152602081019050611249565b50505050905090810190601f1680156112915780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b838110156112ca5780820151818401526020810190506112af565b50505050905090810190601f1680156112f75780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61134f6004803603602081101561132357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138b7565b604051808215151515815260200191505060405180910390f35b61137233611436565b6113c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b80600560006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b600061144c8260006138d490919063ffffffff16565b9050919050565b6000600560009054906101000a900460ff161561146f57600080fd5b61147833611436565b6114cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561150757600080fd5b6000821015801561153857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61154157600080fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161159057600080fd5b600042905060006115a0856139b2565b905060008090505b818110156118215784600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106115fb57fe5b9060005260206000209060060201600501541415611814573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106116ac57fe5b906000526020600020906006020160040186604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561174d5780601f106117225761010080835404028352916020019161174d565b820191906000526020600020905b81548152906001019060200180831161173057829003601f168201915b5050935050505060405180910390a3600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106117a657fe5b9060005260206000209060060201600080820160006117c59190613f5b565b6001820160006117d59190613f5b565b6002820160006117e59190613f5b565b6003820160006117f59190613f5b565b6004820160006118059190613f5b565b60058201600090555050611821565b80806001019150506115a8565b5060019250505092915050565b611837336138b7565b61188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806141de602d913960400191505060405180910390fd5b61189533613a52565b565b600681815481106118a457fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119485780601f1061191d57610100808354040283529160200191611948565b820191906000526020600020905b81548152906001019060200180831161192b57829003601f168201915b505050505081565b600681908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061198d929190613fa3565b50507fda8ad9477ca7c92626705474e6194137fbe13627f4f72e07c6d8411bf7c7a1f0816040518080602001828103825283818151815260200191508051906020019080838360005b838110156119f15780820151818401526020810190506119d6565b50505050905090810190601f168015611a1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b606060068263ffffffff1681548110611a4357fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ae15780601f10611ab657610100808354040283529160200191611ae1565b820191906000526020600020905b815481529060010190602001808311611ac457829003601f168201915b50505050509050919050565b611af633611436565b611b4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b611b5481613ac3565b50565b6000600560009054906101000a900460ff1615611b7357600080fd5b611b7c33611436565b611bd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415611c0b57600080fd5b6080875110611c1957600080fd5b601e865110611c2757600080fd5b601e855110611c3557600080fd5b601e845110611c4357600080fd5b601e835110611c5157600080fd5b60008210158015611c8257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b611c8b57600080fd5b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011611cda57600080fd5b60004290506000611cea8a6139b2565b9050611cf4614023565b60008090505b828110156120b957600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611d4c57fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dfe5780601f10611dd357610100808354040283529160200191611dfe565b820191906000526020600020905b815481529060010190602001808311611de157829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ea05780601f10611e7557610100808354040283529160200191611ea0565b820191906000526020600020905b815481529060010190602001808311611e8357829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f425780601f10611f1757610100808354040283529160200191611f42565b820191906000526020600020905b815481529060010190602001808311611f2557829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fe45780601f10611fb957610100808354040283529160200191611fe4565b820191906000526020600020905b815481529060010190602001808311611fc757829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120865780601f1061205b57610100808354040283529160200191612086565b820191906000526020600020905b81548152906001019060200180831161206957829003601f168201915b505050505081526020016005820154815250509150858260a0015114156120ac576120b9565b8080600101915050611cfa565b50898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a00181815250503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b838110156121bb5780820151818401526020810190506121a0565b50505050905090810190601f1680156121e85780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015612221578082015181840152602081019050612206565b50505050905090810190601f16801561224e5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561228757808201518184015260208101905061226c565b50505050905090810190601f1680156122b45780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156122ed5780820151818401526020810190506122d2565b50505050905090810190601f16801561231a5780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015612353578082015181840152602081019050612338565b50505050905090810190601f1680156123805780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a360019350505050979650505050505050565b6123b281613b34565b50565b6123be33611436565b612413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b61241c81613ba5565b50565b61242833611436565b61247d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b61248681613a52565b50565b612492336138b7565b6124e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806141de602d913960400191505060405180910390fd5b6124f081613c16565b50565b6124fc33613c87565b565b60006125148260026138d490919063ffffffff16565b9050919050565b6000600680549050905090565b61253133611436565b612586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b61258f81613ce1565b50565b61259b33611436565b6125f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b6125f981613d52565b50565b60006006805490508263ffffffff16106126195760009050612831565b606060068363ffffffff168154811061262e57fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126cc5780601f106126a1576101008083540402835291602001916126cc565b820191906000526020600020905b8154815290600101906020018083116126af57829003601f168201915b5050505050905060008363ffffffff1690505b60016006805490500381101561274d57600660018201815481106126ff57fe5b906000526020600020016006828154811061271657fe5b90600052602060002001908054600181600116156101000203166002900461273f929190614059565b5080806001019150506126df565b5060066001600680549050038154811061276357fe5b9060005260206000200160006127799190613f5b565b600680548091906001900361278e91906140e0565b507ff2cbfee8c87498d0a092f7a5fd04a4bdad181bc04b6dfb9f6406e09809d2f584816040518080602001828103825283818151815260200191508051906020019080838360005b838110156127f15780820151818401526020810190506127d6565b50505050905090810190601f16801561281e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a160019150505b919050565b600061284c8260036138d490919063ffffffff16565b9050919050565b6004602052816000526040600020818154811061286c57fe5b906000526020600020906006020160009150915050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129195780601f106128ee57610100808354040283529160200191612919565b820191906000526020600020905b8154815290600101906020018083116128fc57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129b75780601f1061298c576101008083540402835291602001916129b7565b820191906000526020600020905b81548152906001019060200180831161299a57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a555780601f10612a2a57610100808354040283529160200191612a55565b820191906000526020600020905b815481529060010190602001808311612a3857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612af35780601f10612ac857610100808354040283529160200191612af3565b820191906000526020600020905b815481529060010190602001808311612ad657829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b915780601f10612b6657610100808354040283529160200191612b91565b820191906000526020600020905b815481529060010190602001808311612b7457829003601f168201915b5050505050908060050154905086565b6000600560009054906101000a900460ff1615612bbd57600080fd5b612bc633611436565b612c1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415612c5557600080fd5b6080865110612c6357600080fd5b601e855110612c7157600080fd5b601e845110612c7f57600080fd5b601e835110612c8d57600080fd5b601e825110612c9b57600080fd5b6000429050612ca8614023565b6040518060c00160405280898152602001888152602001878152602001868152602001858152602001838152509050600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000019080519060200190612d5e92919061410c565b506020820151816001019080519060200190612d7b92919061410c565b506040820151816002019080519060200190612d9892919061410c565b506060820151816003019080519060200190612db592919061410c565b506080820151816004019080519060200190612dd292919061410c565b5060a082015181600501555050503373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b83811015612e8b578082015181840152602081019050612e70565b50505050905090810190601f168015612eb85780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015612ef1578082015181840152602081019050612ed6565b50505050905090810190601f168015612f1e5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015612f57578082015181840152602081019050612f3c565b50505050905090810190601f168015612f845780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b83811015612fbd578082015181840152602081019050612fa2565b50505050905090810190601f168015612fea5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015613023578082015181840152602081019050613008565b50505050905090810190601f1680156130505780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b6060806060806060600560009054906101000a900460ff161561309857600080fd5b6130a133611436565b6130f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b6130ff33611436565b1561313e578673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561313d57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561317857600080fd5b600086101580156131a957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611155b6131b257600080fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161320157600080fd5b60004290506000613211896139b2565b905061321b614023565b60008090505b828110156135e057600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061327357fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133255780601f106132fa57610100808354040283529160200191613325565b820191906000526020600020905b81548152906001019060200180831161330857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133c75780601f1061339c576101008083540402835291602001916133c7565b820191906000526020600020905b8154815290600101906020018083116133aa57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134695780601f1061343e57610100808354040283529160200191613469565b820191906000526020600020905b81548152906001019060200180831161344c57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561350b5780601f106134e05761010080835404028352916020019161350b565b820191906000526020600020905b8154815290600101906020018083116134ee57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135ad5780601f10613582576101008083540402835291602001916135ad565b820191906000526020600020905b81548152906001019060200180831161359057829003601f168201915b505050505081526020016005820154815250509150898260a0015114156135d3576135e0565b8080600101915050613221565b503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b838110156136ab578082015181840152602081019050613690565b50505050905090810190601f1680156136d85780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b838110156137115780820151818401526020810190506136f6565b50505050905090810190601f16801561373e5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561377757808201518184015260208101905061375c565b50505050905090810190601f1680156137a45780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156137dd5780820151818401526020810190506137c2565b50505050905090810190601f16801561380a5780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015613843578082015181840152602081019050613828565b50505050905090810190601f1680156138705780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193505050509295509295909350565b60006138cd8260016138d490919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561395b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061422c6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560009054906101000a900460ff16156139ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613a0857600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b613a66816001613dc390919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b613ad7816003613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec7060405160405180910390a350565b613b48816002613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf60405160405180910390a350565b613bb9816000613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b613c2a816002613dc390919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b613c9b816000613dc390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd60405160405180910390a250565b613cf5816001613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b613d66816003613dc390919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af60405160405180910390a350565b613dcd82826138d4565b613e22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061420b6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613e8a82826138d4565b15613efd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b50805460018160011615610100020316600290046000825580601f10613f815750613fa0565b601f016020900490600052602060002090810190613f9f919061418c565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613fe457805160ff1916838001178555614012565b82800160010185558215614012579182015b82811115614011578251825591602001919060010190613ff6565b5b50905061401f919061418c565b5090565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061409257805485556140cf565b828001600101855582156140cf57600052602060002091601f016020900482015b828111156140ce5782548255916001019190600101906140b3565b5b5090506140dc919061418c565b5090565b8154818355818111156141075781836000526020600020918201910161410691906141b1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061414d57805160ff191683800117855561417b565b8280016001018555821561417b579182015b8281111561417a57825182559160200191906001019061415f565b5b509050614188919061418c565b5090565b6141ae91905b808211156141aa576000816000905550600101614192565b5090565b90565b6141da91905b808211156141d657600081816141cd9190613f5b565b506001016141b7565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e29a265627a7a72315820dd5775a85ebe09ffa9258f653e04d92282c10ebb19fc5eee10028ea8b746b38864736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80637d0d6257116100c3578063beea194b1161007c578063beea194b14610a21578063c6584bb814610a6d578063d6aac86914610ac9578063e765e73514610d47578063ea04f68f14611096578063eae3ef8a1461130d57610158565b80637d0d6257146108d15780638bad0c0a146109155780638f9c79ed1461091f5780639b2ae4c61461097b578063b0397ff814610999578063b8792f0b146109dd57610158565b80635acec4ab116101155780635acec4ab146103bb5780635c8b67df1461046857806362499d5c146104ac5780636d263ceb1461080557806370480275146108495780637d01dbc21461088d57610158565b80630ac62e021461015d57806324d7806c1461018d57806333645874146101e957806333dc0abd1461024f57806347d96cb114610259578063510b2f6114610300575b600080fd5b61018b6004803603602081101561017357600080fd5b81019080803515159060200190929190505050611369565b005b6101cf600480360360208110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611436565b604051808215151515815260200191505060405180910390f35b610235600480360360408110156101ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611453565b604051808215151515815260200191505060405180910390f35b61025761182e565b005b6102856004803603602081101561026f57600080fd5b8101908080359060200190929190505050611897565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102c55780820151818401526020810190506102aa565b50505050905090810190601f1680156102f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103b96004803603602081101561031657600080fd5b810190808035906020019064010000000081111561033357600080fd5b82018360208201111561034557600080fd5b8035906020019184600183028401116401000000008311171561036757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611950565b005b6103ed600480360360208110156103d157600080fd5b81019080803563ffffffff169060200190929190505050611a2e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042d578082015181840152602081019050610412565b50505050905090810190601f16801561045a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104aa6004803603602081101561047e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aed565b005b6107eb600480360360e08110156104c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104ff57600080fd5b82018360208201111561051157600080fd5b8035906020019184600183028401116401000000008311171561053357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561059657600080fd5b8201836020820111156105a857600080fd5b803590602001918460018302840111640100000000831117156105ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062d57600080fd5b82018360208201111561063f57600080fd5b8035906020019184600183028401116401000000008311171561066157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106c457600080fd5b8201836020820111156106d657600080fd5b803590602001918460018302840111640100000000831117156106f857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561075b57600080fd5b82018360208201111561076d57600080fd5b8035906020019184600183028401116401000000008311171561078f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611b57565b604051808215151515815260200191505060405180910390f35b6108476004803603602081101561081b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123a9565b005b61088b6004803603602081101561085f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123b5565b005b6108cf600480360360208110156108a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061241f565b005b610913600480360360208110156108e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612489565b005b61091d6124f3565b005b6109616004803603602081101561093557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124fe565b604051808215151515815260200191505060405180910390f35b61098361251b565b6040518082815260200191505060405180910390f35b6109db600480360360208110156109af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612528565b005b610a1f600480360360208110156109f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612592565b005b610a5360048036036020811015610a3757600080fd5b81019080803563ffffffff1690602001909291905050506125fc565b604051808215151515815260200191505060405180910390f35b610aaf60048036036020811015610a8357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612836565b604051808215151515815260200191505060405180910390f35b610b1560048036036040811015610adf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612853565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b83811015610b6b578082015181840152602081019050610b50565b50505050905090810190601f168015610b985780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015610bd1578082015181840152602081019050610bb6565b50505050905090810190601f168015610bfe5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015610c37578082015181840152602081019050610c1c565b50505050905090810190601f168015610c645780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b83811015610c9d578082015181840152602081019050610c82565b50505050905090810190601f168015610cca5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610d03578082015181840152602081019050610ce8565b50505050905090810190601f168015610d305780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b61107c600480360360c0811015610d5d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610d9a57600080fd5b820183602082011115610dac57600080fd5b80359060200191846001830284011164010000000083111715610dce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e3157600080fd5b820183602082011115610e4357600080fd5b80359060200191846001830284011164010000000083111715610e6557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ec857600080fd5b820183602082011115610eda57600080fd5b80359060200191846001830284011164010000000083111715610efc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f5f57600080fd5b820183602082011115610f7157600080fd5b80359060200191846001830284011164010000000083111715610f9357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ff657600080fd5b82018360208201111561100857600080fd5b8035906020019184600183028401116401000000008311171561102a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ba1565b604051808215151515815260200191505060405180910390f35b6110e2600480360360408110156110ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613076565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015611132578082015181840152602081019050611117565b50505050905090810190601f16801561115f5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b8381101561119857808201518184015260208101905061117d565b50505050905090810190601f1680156111c55780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b838110156111fe5780820151818401526020810190506111e3565b50505050905090810190601f16801561122b5780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015611264578082015181840152602081019050611249565b50505050905090810190601f1680156112915780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b838110156112ca5780820151818401526020810190506112af565b50505050905090810190601f1680156112f75780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61134f6004803603602081101561132357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138b7565b604051808215151515815260200191505060405180910390f35b61137233611436565b6113c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b80600560006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b600061144c8260006138d490919063ffffffff16565b9050919050565b6000600560009054906101000a900460ff161561146f57600080fd5b61147833611436565b6114cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561150757600080fd5b6000821015801561153857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61154157600080fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161159057600080fd5b600042905060006115a0856139b2565b905060008090505b818110156118215784600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106115fb57fe5b9060005260206000209060060201600501541415611814573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106116ac57fe5b906000526020600020906006020160040186604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561174d5780601f106117225761010080835404028352916020019161174d565b820191906000526020600020905b81548152906001019060200180831161173057829003601f168201915b5050935050505060405180910390a3600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106117a657fe5b9060005260206000209060060201600080820160006117c59190613f5b565b6001820160006117d59190613f5b565b6002820160006117e59190613f5b565b6003820160006117f59190613f5b565b6004820160006118059190613f5b565b60058201600090555050611821565b80806001019150506115a8565b5060019250505092915050565b611837336138b7565b61188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806141de602d913960400191505060405180910390fd5b61189533613a52565b565b600681815481106118a457fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119485780601f1061191d57610100808354040283529160200191611948565b820191906000526020600020905b81548152906001019060200180831161192b57829003601f168201915b505050505081565b600681908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061198d929190613fa3565b50507fda8ad9477ca7c92626705474e6194137fbe13627f4f72e07c6d8411bf7c7a1f0816040518080602001828103825283818151815260200191508051906020019080838360005b838110156119f15780820151818401526020810190506119d6565b50505050905090810190601f168015611a1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b606060068263ffffffff1681548110611a4357fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ae15780601f10611ab657610100808354040283529160200191611ae1565b820191906000526020600020905b815481529060010190602001808311611ac457829003601f168201915b50505050509050919050565b611af633611436565b611b4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b611b5481613ac3565b50565b6000600560009054906101000a900460ff1615611b7357600080fd5b611b7c33611436565b611bd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415611c0b57600080fd5b6080875110611c1957600080fd5b601e865110611c2757600080fd5b601e855110611c3557600080fd5b601e845110611c4357600080fd5b601e835110611c5157600080fd5b60008210158015611c8257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b611c8b57600080fd5b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011611cda57600080fd5b60004290506000611cea8a6139b2565b9050611cf4614023565b60008090505b828110156120b957600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611d4c57fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dfe5780601f10611dd357610100808354040283529160200191611dfe565b820191906000526020600020905b815481529060010190602001808311611de157829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ea05780601f10611e7557610100808354040283529160200191611ea0565b820191906000526020600020905b815481529060010190602001808311611e8357829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f425780601f10611f1757610100808354040283529160200191611f42565b820191906000526020600020905b815481529060010190602001808311611f2557829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fe45780601f10611fb957610100808354040283529160200191611fe4565b820191906000526020600020905b815481529060010190602001808311611fc757829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120865780601f1061205b57610100808354040283529160200191612086565b820191906000526020600020905b81548152906001019060200180831161206957829003601f168201915b505050505081526020016005820154815250509150858260a0015114156120ac576120b9565b8080600101915050611cfa565b50898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a00181815250503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b838110156121bb5780820151818401526020810190506121a0565b50505050905090810190601f1680156121e85780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015612221578082015181840152602081019050612206565b50505050905090810190601f16801561224e5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561228757808201518184015260208101905061226c565b50505050905090810190601f1680156122b45780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156122ed5780820151818401526020810190506122d2565b50505050905090810190601f16801561231a5780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015612353578082015181840152602081019050612338565b50505050905090810190601f1680156123805780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a360019350505050979650505050505050565b6123b281613b34565b50565b6123be33611436565b612413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b61241c81613ba5565b50565b61242833611436565b61247d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b61248681613a52565b50565b612492336138b7565b6124e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806141de602d913960400191505060405180910390fd5b6124f081613c16565b50565b6124fc33613c87565b565b60006125148260026138d490919063ffffffff16565b9050919050565b6000600680549050905090565b61253133611436565b612586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b61258f81613ce1565b50565b61259b33611436565b6125f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b6125f981613d52565b50565b60006006805490508263ffffffff16106126195760009050612831565b606060068363ffffffff168154811061262e57fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126cc5780601f106126a1576101008083540402835291602001916126cc565b820191906000526020600020905b8154815290600101906020018083116126af57829003601f168201915b5050505050905060008363ffffffff1690505b60016006805490500381101561274d57600660018201815481106126ff57fe5b906000526020600020016006828154811061271657fe5b90600052602060002001908054600181600116156101000203166002900461273f929190614059565b5080806001019150506126df565b5060066001600680549050038154811061276357fe5b9060005260206000200160006127799190613f5b565b600680548091906001900361278e91906140e0565b507ff2cbfee8c87498d0a092f7a5fd04a4bdad181bc04b6dfb9f6406e09809d2f584816040518080602001828103825283818151815260200191508051906020019080838360005b838110156127f15780820151818401526020810190506127d6565b50505050905090810190601f16801561281e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a160019150505b919050565b600061284c8260036138d490919063ffffffff16565b9050919050565b6004602052816000526040600020818154811061286c57fe5b906000526020600020906006020160009150915050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129195780601f106128ee57610100808354040283529160200191612919565b820191906000526020600020905b8154815290600101906020018083116128fc57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156129b75780601f1061298c576101008083540402835291602001916129b7565b820191906000526020600020905b81548152906001019060200180831161299a57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a555780601f10612a2a57610100808354040283529160200191612a55565b820191906000526020600020905b815481529060010190602001808311612a3857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612af35780601f10612ac857610100808354040283529160200191612af3565b820191906000526020600020905b815481529060010190602001808311612ad657829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b915780601f10612b6657610100808354040283529160200191612b91565b820191906000526020600020905b815481529060010190602001808311612b7457829003601f168201915b5050505050908060050154905086565b6000600560009054906101000a900460ff1615612bbd57600080fd5b612bc633611436565b612c1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415612c5557600080fd5b6080865110612c6357600080fd5b601e855110612c7157600080fd5b601e845110612c7f57600080fd5b601e835110612c8d57600080fd5b601e825110612c9b57600080fd5b6000429050612ca8614023565b6040518060c00160405280898152602001888152602001878152602001868152602001858152602001838152509050600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060060201600090919290919091506000820151816000019080519060200190612d5e92919061410c565b506020820151816001019080519060200190612d7b92919061410c565b506040820151816002019080519060200190612d9892919061410c565b506060820151816003019080519060200190612db592919061410c565b506080820151816004019080519060200190612dd292919061410c565b5060a082015181600501555050503373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b83811015612e8b578082015181840152602081019050612e70565b50505050905090810190601f168015612eb85780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015612ef1578082015181840152602081019050612ed6565b50505050905090810190601f168015612f1e5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015612f57578082015181840152602081019050612f3c565b50505050905090810190601f168015612f845780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b83811015612fbd578082015181840152602081019050612fa2565b50505050905090810190601f168015612fea5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015613023578082015181840152602081019050613008565b50505050905090810190601f1680156130505780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b6060806060806060600560009054906101000a900460ff161561309857600080fd5b6130a133611436565b6130f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061424e602b913960400191505060405180910390fd5b6130ff33611436565b1561313e578673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561313d57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561317857600080fd5b600086101580156131a957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611155b6131b257600080fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501161320157600080fd5b60004290506000613211896139b2565b905061321b614023565b60008090505b828110156135e057600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061327357fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133255780601f106132fa57610100808354040283529160200191613325565b820191906000526020600020905b81548152906001019060200180831161330857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156133c75780601f1061339c576101008083540402835291602001916133c7565b820191906000526020600020905b8154815290600101906020018083116133aa57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156134695780601f1061343e57610100808354040283529160200191613469565b820191906000526020600020905b81548152906001019060200180831161344c57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561350b5780601f106134e05761010080835404028352916020019161350b565b820191906000526020600020905b8154815290600101906020018083116134ee57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135ad5780601f10613582576101008083540402835291602001916135ad565b820191906000526020600020905b81548152906001019060200180831161359057829003601f168201915b505050505081526020016005820154815250509150898260a0015114156135d3576135e0565b8080600101915050613221565b503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b838110156136ab578082015181840152602081019050613690565b50505050905090810190601f1680156136d85780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b838110156137115780820151818401526020810190506136f6565b50505050905090810190601f16801561373e5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561377757808201518184015260208101905061375c565b50505050905090810190601f1680156137a45780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156137dd5780820151818401526020810190506137c2565b50505050905090810190601f16801561380a5780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015613843578082015181840152602081019050613828565b50505050905090810190601f1680156138705780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193505050509295509295909350565b60006138cd8260016138d490919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561395b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061422c6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560009054906101000a900460ff16156139ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613a0857600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b613a66816001613dc390919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b613ad7816003613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec7060405160405180910390a350565b613b48816002613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf60405160405180910390a350565b613bb9816000613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b613c2a816002613dc390919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b613c9b816000613dc390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd60405160405180910390a250565b613cf5816001613e8090919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b613d66816003613dc390919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af60405160405180910390a350565b613dcd82826138d4565b613e22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061420b6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b613e8a82826138d4565b15613efd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b50805460018160011615610100020316600290046000825580601f10613f815750613fa0565b601f016020900490600052602060002090810190613f9f919061418c565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613fe457805160ff1916838001178555614012565b82800160010185558215614012579182015b82811115614011578251825591602001919060010190613ff6565b5b50905061401f919061418c565b5090565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061409257805485556140cf565b828001600101855582156140cf57600052602060002091601f016020900482015b828111156140ce5782548255916001019190600101906140b3565b5b5090506140dc919061418c565b5090565b8154818355818111156141075781836000526020600020918201910161410691906141b1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061414d57805160ff191683800117855561417b565b8280016001018555821561417b579182015b8281111561417a57825182559160200191906001019061415f565b5b509050614188919061418c565b5090565b6141ae91905b808211156141aa576000816000905550600101614192565b5090565b90565b6141da91905b808211156141d657600081816141cd9190613f5b565b506001016141b7565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e29a265627a7a72315820dd5775a85ebe09ffa9258f653e04d92282c10ebb19fc5eee10028ea8b746b38864736f6c63430005100032",
  "sourceMap": "63:1741:5:-;;;798:5:1;775:28;;;;;;;;;;;;;;;;;;;;1751:21:7;1761:10;1751:9;;;:21;;:::i;:::-;63:1741:5;;6945:131:7;7001:20;7013:7;7001;:11;;;;;;:20;;;;:::i;:::-;7057:10;7037:31;;7048:7;7037:31;;;;;;;;;;;;6945:131;:::o;260:175:8:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;63:1741:5:-;;;;;;;",
  "deployedSourceMap": "63:1741:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;63:1741:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2486:134:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2486:134:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;2683:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2683:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7512:825:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7512:825:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4042:85:7;;;:::i;:::-;;112:28:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;112:28:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;112:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;384:150:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;384:150:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;384:150:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;384:150:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;384:150:5;;;;;;;;;;;;;;;:::i;:::-;;963:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;963:135:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;963:135:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4522:97:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4522:97:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;4213:1545:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4213:1545:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4213:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4213:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4213:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4213:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4213:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4213:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4213:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4213:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4213:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4213:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4213:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4213:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4213:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4213:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4213:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4213:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4213:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4213:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4213:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4213:1545:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5007:83:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5007:83:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;2926:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2926:89:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;3820:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3820:95:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;5208:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5208:99:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;3135:77;;;:::i;:::-;;4755:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4755:110:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;672:105:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3593:89:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3593:89:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;5427:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5427:103:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;1328:473:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1328:473:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4264:114:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4264:114:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;644:48:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2908:1103;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2908:1103:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2908:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2908:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2908:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2908:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2908:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2908:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2908:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2908:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2908:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2908:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2908:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2908:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2908:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2908:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2908:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2908:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2908:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2908:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2908:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2908:1103:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5986:1298;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5986:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5986:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5986:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5986:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5986:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5986:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3347:106:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3347:106:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2486:134:1;1953:19:7;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2559:5:1;2549:7;;:15;;;;;;;;;;;;;;;;;;2594:10;2580:32;;;2606:5;2580:32;;;;;;;;;;;;;;;;;;;;;;2486:134;:::o;2683:107:7:-;2738:4;2762:20;2774:7;2762;:11;;:20;;;;:::i;:::-;2755:27;;2683:107;;;:::o;7512:825:1:-;7606:13;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1953:19:7;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7652:42:1;7640:54;;:8;:54;;;;7632:63;;;;;;7723:1;7714:5;:10;;:33;;;;;7737:10;7728:5;:19;;7714:33;7706:42;;;;;;7798:1;7767:11;:21;7779:8;7767:21;;;;;;;;;;;;;;;:28;;;;:32;7759:41;;;;;;7813:18;7834:3;7813:24;;7848:11;7862:24;7877:8;7862:14;:24::i;:::-;7848:38;;7904:9;7916:1;7904:13;;7899:405;7923:3;7919:1;:7;7899:405;;;7985:5;7952:11;:21;7964:8;7952:21;;;;;;;;;;;;;;;7974:1;7952:24;;;;;;;;;;;;;;;;;;:29;;;:38;7948:345;;;8082:10;8016:187;;8051:8;8016:187;;;8115:11;:21;8127:8;8115:21;;;;;;;;;;;;;;;8137:1;8115:24;;;;;;;;;;;;;;;;;;:36;;8174:10;8016:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8229:11;:21;8241:8;8229:21;;;;;;;;;;;;;;;8251:1;8229:24;;;;;;;;;;;;;;;;;;;8222:31;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;8272:5;;7948:345;7928:3;;;;;;;7899:405;;;;8325:4;8314:15;;2031:1:7;;7512:825:1;;;;:::o;4042:85:7:-;2088:19;2096:10;2088:7;:19::i;:::-;2080:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4095:24;4108:10;4095:12;:24::i;:::-;4042:85::o;112:28:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;384:150::-;453:12;471:11;453:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;453:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;499:27;514:11;499:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;499:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:150;:::o;963:135::-;1025:25;1070:12;1083:6;1070:20;;;;;;;;;;;;;;;;;1063:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:135;;;:::o;4522:97:7:-;1953:19;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4589:22;4603:7;4589:13;:22::i;:::-;4522:97;:::o;4213:1545:1:-;4496:13;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1953:19:7;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4542:42:1;4530:54;;:8;:54;;;;4522:63;;;;;;4626:3;4610:5;4604:19;:25;4596:34;;;;;;4676:2;4655:10;4649:24;:29;4641:38;;;;;;4722:2;4704:7;4698:21;:26;4690:35;;;;;;4767:2;4750:6;4744:20;:25;4736:34;;;;;;4818:2;4795:12;4789:26;:31;4781:40;;;;;;4849:1;4840:5;:10;;:33;;;;;4863:10;4854:5;:19;;4840:33;4832:42;;;;;;4924:1;4893:11;:21;4905:8;4893:21;;;;;;;;;;;;;;;:28;;;;:32;4885:41;;;;;;4939:18;4960:3;4939:24;;4974:11;4988:24;5003:8;4988:14;:24::i;:::-;4974:38;;5023:20;;:::i;:::-;5059:9;5071:1;5059:13;;5054:174;5078:3;5074:1;:7;5054:174;;;5112:11;:21;5124:8;5112:21;;;;;;;;;;;;;;;5134:1;5112:24;;;;;;;;;;;;;;;;;;5103:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5170:5;5155:6;:11;;;:20;5151:66;;;5196:5;;5151:66;5083:3;;;;;;;5054:174;;;;5254:5;5240:6;:11;;:19;;;;5289:10;5270:6;:16;;:29;;;;5326:7;5310:6;:13;;:23;;;;5359:6;5344;:12;;:21;;;;5397:12;5376:6;:18;;:33;;;;5434:5;5420:6;:11;;:19;;;;;5507:10;5457:267;;5484:8;5457:267;;;5532:6;:11;;;5558:6;:16;;;5589:6;:13;;;5617:6;:12;;;5644:6;:18;;;5677:6;:11;;;5703:10;5457:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5457:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5457:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5457:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5457:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5457:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5746:4;5735:15;;2031:1:7;;;4213:1545:1;;;;;;;;;:::o;5007:83:7:-;5062:20;5074:7;5062:11;:20::i;:::-;5007:83;:::o;2926:89::-;1953:19;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:18;2999:7;2989:9;:18::i;:::-;2926:89;:::o;3820:95::-;1953:19;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3886:21;3899:7;3886:12;:21::i;:::-;3820:95;:::o;5208:99::-;2088:19;2096:10;2088:7;:19::i;:::-;2080:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5276:23;5291:7;5276:14;:23::i;:::-;5208:99;:::o;3135:77::-;3178:26;3193:10;3178:14;:26::i;:::-;3135:77::o;4755:110::-;4812:4;4836:21;4849:7;4836:8;:12;;:21;;;;:::i;:::-;4829:28;;4755:110;;;:::o;672:105:5:-;720:10;750:12;:19;;;;743:26;;672:105;:::o;3593:89:7:-;1953:19;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3656:18;3666:7;3656:9;:18::i;:::-;3593:89;:::o;5427:103::-;1953:19;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5497:25;5514:7;5497:16;:25::i;:::-;5427:103;:::o;1328:473:5:-;1381:12;1420;:19;;;;1410:6;:29;;;1406:47;;1448:5;1441:12;;;;1406:47;1466:25;1494:12;1507:6;1494:20;;;;;;;;;;;;;;;;;1466:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1530:6;1539;1530:15;;;;1525:116;1571:1;1551:12;:19;;;;:21;1547:1;:25;1525:116;;;1612:12;1627:1;1625;:3;1612:17;;;;;;;;;;;;;;;1594:12;1607:1;1594:15;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1574:3;;;;;;;1525:116;;;;1658:12;1691:1;1671:12;:19;;;;:21;1658:35;;;;;;;;;;;;;;;;1651:42;;;;:::i;:::-;1704:12;:21;;;;;;;;;;;;:::i;:::-;;1741:30;1759:11;1741:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1741:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1789:4;1782:11;;;1328:473;;;;:::o;4264:114:7:-;4323:4;4347:23;4362:7;4347:10;:14;;:23;;;;:::i;:::-;4340:30;;4264:114;;;:::oo;2908:1103::-;3164:13;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1953:19:7;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3210:42:1;3198:54;;:8;:54;;;;3190:63;;;;;;3294:3;3278:5;3272:19;:25;3264:34;;;;;;3344:2;3323:10;3317:24;:29;3309:38;;;;;;3390:2;3372:7;3366:21;:26;3358:35;;;;;;3435:2;3418:6;3412:20;:25;3404:34;;;;;;3486:2;3463:12;3457:26;:31;3449:40;;;;;;3502:13;3518:3;3502:19;;3532:20;;:::i;:::-;3555:152;;;;;;;;3576:5;3555:152;;;;3596:10;3555:152;;;;3621:7;3555:152;;;;3643:6;3555:152;;;;3664:12;3555:152;;;;3691:5;3555:152;;;3532:175;;3720:11;:21;3732:8;3720:21;;;;;;;;;;;;;;;3747:6;3720:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3720:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3821:10;3772:205;;3798:8;3772:205;;;3846:5;3866:10;3891:7;3913:6;3934:12;3961:5;3772:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3772:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3772:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3772:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3772:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3772:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:4;3988:15;;2031:1:7;;2908:1103:1;;;;;;;;:::o;5986:1298::-;6088:18;6117:23;6151:20;6182:19;6212:25;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1953:19:7;1961:10;1953:7;:19::i;:::-;1945:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6254:19:1;6262:10;6254:7;:19::i;:::-;6250:83;;;6312:8;6298:22;;:10;:22;;;;6290:31;;;;;;6250:83;6363:42;6351:54;;:8;:54;;;;6343:63;;;;;;6434:1;6425:5;:10;;:33;;;;;6448:10;6439:5;:19;;6425:33;6417:42;;;;;;6509:1;6478:11;:21;6490:8;6478:21;;;;;;;;;;;;;;;:28;;;;:32;6470:41;;;;;;6524:18;6545:3;6524:24;;6559:11;6573:24;6588:8;6573:14;:24::i;:::-;6559:38;;6608:20;;:::i;:::-;6646:9;6658:1;6646:13;;6641:174;6665:3;6661:1;:7;6641:174;;;6699:11;:21;6711:8;6699:21;;;;;;;;;;;;;;;6721:1;6699:24;;;;;;;;;;;;;;;;;;6690:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6757:5;6742:6;:11;;;:20;6738:66;;;6783:5;;6738:66;6670:3;;;;;;;6641:174;;;;6884:10;6832:269;;6861:8;6832:269;;;6909:6;:11;;;6935:6;:16;;;6966:6;:13;;;6994:6;:12;;;7021:6;:18;;;7054:6;:11;;;7080:10;6832:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6832:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6832:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6832:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6832:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6832:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7119:6;:11;;;7112:18;;7153:6;:16;;;7141:28;;7189:6;:13;;;7180:22;;7221:6;:12;;;7213:20;;7258:6;:18;;;7244:32;;2031:1:7;;;5986:1298:1;;;;;;;;:::o;3347:106:7:-;3402:4;3426:19;3437:7;3426:6;:10;;:19;;;;:::i;:::-;3419:26;;3347:106;;;:::o;779:200:8:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8542:209:1:-;8618:7;2223;;;;;;;;;;;2222:8;2214:17;;;;;;8656:42;8646:52;;:6;:52;;;;8638:61;;;;;;8717:11;:19;8729:6;8717:19;;;;;;;;;;;;;;;:26;;;;8710:33;;8542:209;;;:::o;7830:138:7:-;7889:22;7903:7;7889:6;:13;;:22;;;;:::i;:::-;7949:10;7927:33;;7940:7;7927:33;;;;;;;;;;;;7830:138;:::o;5696:142::-;5756:23;5771:7;5756:10;:14;;:23;;;;:::i;:::-;5819:10;5795:35;;5810:7;5795:35;;;;;;;;;;;;5696:142;:::o;6331:136::-;6389:21;6402:7;6389:8;:12;;:21;;;;:::i;:::-;6448:10;6426:33;;6439:7;6426:33;;;;;;;;;;;;6331:136;:::o;6945:131::-;7001:20;7013:7;7001;:11;;:20;;;;:::i;:::-;7057:10;7037:31;;7048:7;7037:31;;;;;;;;;;;;6945:131;:::o;6642:144::-;6703:24;6719:7;6703:8;:15;;:24;;;;:::i;:::-;6767:10;6743:35;;6758:7;6743:35;;;;;;;;;;;;6642:144;:::o;7244:130::-;7305:23;7320:7;7305;:14;;:23;;;;:::i;:::-;7358:7;7344:22;;;;;;;;;;;;7244:130;:::o;7537:::-;7593:19;7604:7;7593:6;:10;;:19;;;;:::i;:::-;7648:10;7628:31;;7639:7;7628:31;;;;;;;;;;;;7537:130;:::o;6016:150::-;6079:26;6097:7;6079:10;:17;;:26;;;;:::i;:::-;6147:10;6121:37;;6138:7;6121:37;;;;;;;;;;;;6016:150;:::o;510:180:8:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;63:1741:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\r\n\r\nimport \"./MedicsRegister.sol\";\r\n\r\n\r\ncontract PendingRecords is MedicsRegister {\r\n    string[] public medicPending;\r\n    event NewMedicRecord(string _hash);\r\n    event RemoveMedicRecord(string _hash);\r\n\r\n    /**\r\n    * @notice Guarda el hash de un registro del medico\r\n    * @param _hashString cadena de IPFS que contiene el archivo de registro\r\n    */\r\n    function addMedicRecord(string memory _hashString) public {\r\n        medicPending.push(_hashString);\r\n        emit NewMedicRecord(_hashString);\r\n    }\r\n\r\n    /**\r\n    * @notice Regresa la longitud del arreglo de solicitudes pendientes\r\n    * @return Longitud de MedicPending\r\n    */\r\n    function getPendingLength() public view returns(uint count) {\r\n        return medicPending.length;\r\n    }\r\n\r\n    /**\r\n    * @notice Regresa la cadena hash de un indice dado\r\n    * @param _index Indice a consultar\r\n    * @return Cadena dentro del indice indicado en MedicPending\r\n    */\r\n    function getPendingRequest(uint32 _index) public view returns(string memory _hashString) {\r\n        return medicPending[_index];\r\n    }\r\n\r\n    /**\r\n    * @notice Remueve el elemento del indice indicado\r\n    * @dev Hace un swap para no dejar espacios en blanco\r\n    * @param _index The owner address\r\n    * @return booleano diciendo si fue exitoso o no\r\n    */\r\n    function removePending(uint32 _index) public returns(bool success) {\r\n        if (_index >= medicPending.length) return false;\r\n\r\n        string memory removedHash = medicPending[_index];\r\n        for (uint i = _index; i < medicPending.length-1; i++) {\r\n            medicPending[i] = medicPending[i+1];\r\n        }\r\n        delete medicPending[medicPending.length-1];\r\n        medicPending.length--;\r\n        emit RemoveMedicRecord(removedHash);\r\n        return true;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Mega-AC1982\\Develop\\Angular\\MedicalHistory-BlockChainProject\\frontend\\truffle\\contracts\\PendingRecords.sol",
  "ast": {
    "absolutePath": "/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PendingRecords.sol",
    "exportedSymbols": {
      "PendingRecords": [
        2601
      ]
    },
    "id": 2602,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2484,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/MedicsRegister.sol",
        "file": "./MedicsRegister.sol",
        "id": 2485,
        "nodeType": "ImportDirective",
        "scope": 2602,
        "sourceUnit": 1414,
        "src": "27:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2486,
              "name": "MedicsRegister",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1413,
              "src": "90:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MedicsRegister_$1413",
                "typeString": "contract MedicsRegister"
              }
            },
            "id": 2487,
            "nodeType": "InheritanceSpecifier",
            "src": "90:14:5"
          }
        ],
        "contractDependencies": [
          1413,
          3101
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2601,
        "linearizedBaseContracts": [
          2601,
          1413,
          3101
        ],
        "name": "PendingRecords",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2490,
            "name": "medicPending",
            "nodeType": "VariableDeclaration",
            "scope": 2601,
            "src": "112:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 2488,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "112:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 2489,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "112:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2494,
            "name": "NewMedicRecord",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2492,
                  "indexed": false,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2494,
                  "src": "168:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2491,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "168:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "167:14:5"
            },
            "src": "147:35:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2498,
            "name": "RemoveMedicRecord",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2496,
                  "indexed": false,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "212:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:14:5"
            },
            "src": "188:38:5"
          },
          {
            "body": {
              "id": 2513,
              "nodeType": "Block",
              "src": "442:92:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2506,
                        "name": "_hashString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "471:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2503,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "453:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "453:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "453:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2508,
                  "nodeType": "ExpressionStatement",
                  "src": "453:30:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2510,
                        "name": "_hashString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "514:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2509,
                      "name": "NewMedicRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "499:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2512,
                  "nodeType": "EmitStatement",
                  "src": "494:32:5"
                }
              ]
            },
            "documentation": "@notice Guarda el hash de un registro del medico\n@param _hashString cadena de IPFS que contiene el archivo de registro",
            "id": 2514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMedicRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2500,
                  "name": "_hashString",
                  "nodeType": "VariableDeclaration",
                  "scope": 2514,
                  "src": "408:25:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2499,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "407:27:5"
            },
            "returnParameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:5"
            },
            "scope": 2601,
            "src": "384:150:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2522,
              "nodeType": "Block",
              "src": "732:45:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2519,
                      "name": "medicPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "750:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "750:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2518,
                  "id": 2521,
                  "nodeType": "Return",
                  "src": "743:26:5"
                }
              ]
            },
            "documentation": "@notice Regresa la longitud del arreglo de solicitudes pendientes\n@return Longitud de MedicPending",
            "id": 2523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:5"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2517,
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "720:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2516,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:12:5"
            },
            "scope": 2601,
            "src": "672:105:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2534,
              "nodeType": "Block",
              "src": "1052:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2530,
                      "name": "medicPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "1070:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 2532,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2531,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2525,
                      "src": "1083:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1070:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2529,
                  "id": 2533,
                  "nodeType": "Return",
                  "src": "1063:27:5"
                }
              ]
            },
            "documentation": "@notice Regresa la cadena hash de un indice dado\n@param _index Indice a consultar\n@return Cadena dentro del indice indicado en MedicPending",
            "id": 2535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2525,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "990:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "989:15:5"
            },
            "returnParameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "name": "_hashString",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "1025:25:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1024:27:5"
            },
            "scope": 2601,
            "src": "963:135:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2599,
              "nodeType": "Block",
              "src": "1395:406:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2542,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "1410:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2543,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "1420:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2544,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1420:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2548,
                  "nodeType": "IfStatement",
                  "src": "1406:47:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1448:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 2541,
                    "id": 2547,
                    "nodeType": "Return",
                    "src": "1441:12:5"
                  }
                },
                {
                  "assignments": [
                    2550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2550,
                      "name": "removedHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2599,
                      "src": "1466:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2549,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1466:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2554,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2551,
                      "name": "medicPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "1494:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 2553,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2552,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "1507:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1494:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1466:48:5"
                },
                {
                  "body": {
                    "id": 2578,
                    "nodeType": "Block",
                    "src": "1579:62:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2568,
                              "name": "medicPending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2490,
                              "src": "1594:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 2570,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2569,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2556,
                              "src": "1607:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1594:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2571,
                              "name": "medicPending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2490,
                              "src": "1612:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 2575,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2572,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2556,
                                "src": "1625:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1627:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1625:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1612:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1594:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 2577,
                        "nodeType": "ExpressionStatement",
                        "src": "1594:35:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2559,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2556,
                      "src": "1547:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2560,
                          "name": "medicPending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2490,
                          "src": "1551:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 2561,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1551:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1571:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1551:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1547:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2579,
                  "initializationExpression": {
                    "assignments": [
                      2556
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2556,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "1530:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2555,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1530:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2558,
                    "initialValue": {
                      "argumentTypes": null,
                      "id": 2557,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "1539:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1530:15:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1574:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2565,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2556,
                        "src": "1574:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2567,
                    "nodeType": "ExpressionStatement",
                    "src": "1574:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1525:116:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1651:42:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2580,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "1658:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2585,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2581,
                            "name": "medicPending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "1671:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1671:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1691:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1671:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1658:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2587,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "1704:21:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2588,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "1704:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1704:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2592,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:21:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2594,
                        "name": "removedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "1759:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2593,
                      "name": "RemoveMedicRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "1741:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "EmitStatement",
                  "src": "1736:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1789:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2541,
                  "id": 2598,
                  "nodeType": "Return",
                  "src": "1782:11:5"
                }
              ]
            },
            "documentation": "@notice Remueve el elemento del indice indicado\n@dev Hace un swap para no dejar espacios en blanco\n@param _index The owner address\n@return booleano diciendo si fue exitoso o no",
            "id": 2600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removePending",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2600,
                  "src": "1351:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1350:15:5"
            },
            "returnParameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 2600,
                  "src": "1381:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:14:5"
            },
            "scope": 2601,
            "src": "1328:473:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2602,
        "src": "63:1741:5"
      }
    ],
    "src": "0:1806:5"
  },
  "legacyAST": {
    "absolutePath": "/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/PendingRecords.sol",
    "exportedSymbols": {
      "PendingRecords": [
        2601
      ]
    },
    "id": 2602,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2484,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/D/Mega-AC1982/Develop/Angular/MedicalHistory-BlockChainProject/frontend/truffle/contracts/MedicsRegister.sol",
        "file": "./MedicsRegister.sol",
        "id": 2485,
        "nodeType": "ImportDirective",
        "scope": 2602,
        "sourceUnit": 1414,
        "src": "27:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2486,
              "name": "MedicsRegister",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1413,
              "src": "90:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MedicsRegister_$1413",
                "typeString": "contract MedicsRegister"
              }
            },
            "id": 2487,
            "nodeType": "InheritanceSpecifier",
            "src": "90:14:5"
          }
        ],
        "contractDependencies": [
          1413,
          3101
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2601,
        "linearizedBaseContracts": [
          2601,
          1413,
          3101
        ],
        "name": "PendingRecords",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2490,
            "name": "medicPending",
            "nodeType": "VariableDeclaration",
            "scope": 2601,
            "src": "112:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 2488,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "112:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 2489,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "112:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2494,
            "name": "NewMedicRecord",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2492,
                  "indexed": false,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2494,
                  "src": "168:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2491,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "168:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "167:14:5"
            },
            "src": "147:35:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2498,
            "name": "RemoveMedicRecord",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2496,
                  "indexed": false,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "212:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:14:5"
            },
            "src": "188:38:5"
          },
          {
            "body": {
              "id": 2513,
              "nodeType": "Block",
              "src": "442:92:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2506,
                        "name": "_hashString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "471:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2503,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "453:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "453:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "453:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2508,
                  "nodeType": "ExpressionStatement",
                  "src": "453:30:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2510,
                        "name": "_hashString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "514:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2509,
                      "name": "NewMedicRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "499:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2512,
                  "nodeType": "EmitStatement",
                  "src": "494:32:5"
                }
              ]
            },
            "documentation": "@notice Guarda el hash de un registro del medico\n@param _hashString cadena de IPFS que contiene el archivo de registro",
            "id": 2514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMedicRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2500,
                  "name": "_hashString",
                  "nodeType": "VariableDeclaration",
                  "scope": 2514,
                  "src": "408:25:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2499,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "407:27:5"
            },
            "returnParameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:5"
            },
            "scope": 2601,
            "src": "384:150:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2522,
              "nodeType": "Block",
              "src": "732:45:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2519,
                      "name": "medicPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "750:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "750:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2518,
                  "id": 2521,
                  "nodeType": "Return",
                  "src": "743:26:5"
                }
              ]
            },
            "documentation": "@notice Regresa la longitud del arreglo de solicitudes pendientes\n@return Longitud de MedicPending",
            "id": 2523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:5"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2517,
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "720:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2516,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:12:5"
            },
            "scope": 2601,
            "src": "672:105:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2534,
              "nodeType": "Block",
              "src": "1052:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2530,
                      "name": "medicPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "1070:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 2532,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2531,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2525,
                      "src": "1083:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1070:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2529,
                  "id": 2533,
                  "nodeType": "Return",
                  "src": "1063:27:5"
                }
              ]
            },
            "documentation": "@notice Regresa la cadena hash de un indice dado\n@param _index Indice a consultar\n@return Cadena dentro del indice indicado en MedicPending",
            "id": 2535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRequest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2525,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "990:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "989:15:5"
            },
            "returnParameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "name": "_hashString",
                  "nodeType": "VariableDeclaration",
                  "scope": 2535,
                  "src": "1025:25:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1024:27:5"
            },
            "scope": 2601,
            "src": "963:135:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2599,
              "nodeType": "Block",
              "src": "1395:406:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2542,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "1410:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2543,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "1420:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2544,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1420:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2548,
                  "nodeType": "IfStatement",
                  "src": "1406:47:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1448:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 2541,
                    "id": 2547,
                    "nodeType": "Return",
                    "src": "1441:12:5"
                  }
                },
                {
                  "assignments": [
                    2550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2550,
                      "name": "removedHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2599,
                      "src": "1466:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2549,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1466:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2554,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2551,
                      "name": "medicPending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "1494:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 2553,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2552,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "1507:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1494:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1466:48:5"
                },
                {
                  "body": {
                    "id": 2578,
                    "nodeType": "Block",
                    "src": "1579:62:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2568,
                              "name": "medicPending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2490,
                              "src": "1594:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 2570,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2569,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2556,
                              "src": "1607:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1594:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2571,
                              "name": "medicPending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2490,
                              "src": "1612:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 2575,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2572,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2556,
                                "src": "1625:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1627:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1625:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1612:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1594:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 2577,
                        "nodeType": "ExpressionStatement",
                        "src": "1594:35:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2559,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2556,
                      "src": "1547:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2560,
                          "name": "medicPending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2490,
                          "src": "1551:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 2561,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1551:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1571:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1551:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1547:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2579,
                  "initializationExpression": {
                    "assignments": [
                      2556
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2556,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "1530:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2555,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1530:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2558,
                    "initialValue": {
                      "argumentTypes": null,
                      "id": 2557,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "1539:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1530:15:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1574:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2565,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2556,
                        "src": "1574:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2567,
                    "nodeType": "ExpressionStatement",
                    "src": "1574:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1525:116:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1651:42:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2580,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "1658:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2585,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2581,
                            "name": "medicPending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "1671:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1671:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1691:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1671:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1658:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2587,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "1704:21:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2588,
                        "name": "medicPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "1704:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 2590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1704:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2592,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:21:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2594,
                        "name": "removedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "1759:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2593,
                      "name": "RemoveMedicRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "1741:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "EmitStatement",
                  "src": "1736:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1789:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2541,
                  "id": 2598,
                  "nodeType": "Return",
                  "src": "1782:11:5"
                }
              ]
            },
            "documentation": "@notice Remueve el elemento del indice indicado\n@dev Hace un swap para no dejar espacios en blanco\n@param _index The owner address\n@return booleano diciendo si fue exitoso o no",
            "id": 2600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removePending",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2600,
                  "src": "1351:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1350:15:5"
            },
            "returnParameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 2600,
                  "src": "1381:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:14:5"
            },
            "scope": 2601,
            "src": "1328:473:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2602,
        "src": "63:1741:5"
      }
    ],
    "src": "0:1806:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-29T01:07:47.965Z",
  "devdoc": {
    "methods": {
      "addAdmin(address)": {
        "details": "Función pública para asignar admin",
        "params": {
          "account": "Cuenta que será asignada como admin"
        }
      },
      "addAssistant(address)": {
        "details": "Función pública para asignar asistente",
        "params": {
          "account": "Cuenta que será asignada como asistente"
        }
      },
      "addMedic(address)": {
        "details": "Función pública para asignar médico",
        "params": {
          "account": "Cuenta que será asignada como médico"
        }
      },
      "addMedicRecord(string)": {
        "params": {
          "_hashString": "cadena de IPFS que contiene el archivo de registro"
        }
      },
      "addMedics(address,string,string,string,string,string)": {
        "details": "Función para agregar un médico. Esta función es realizada por un administrador.",
        "params": {
          "_account": "a",
          "_cedula": "a",
          "_email": "a",
          "_hashPicture": "a",
          "_name": "a",
          "_specialty": "a"
        },
        "return": "_success a"
      },
      "addPatient(address)": {
        "details": "Función pública para asignar paciente",
        "params": {
          "account": "Cuenta que será asignada como paciente"
        }
      },
      "deleteMedics(address,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "The owner address"
        },
        "return": "_date The uploaded timestamp"
      },
      "emergencyStop(bool)": {
        "params": {
          "_stop": "Switch del contrado de encendido/apagado"
        }
      },
      "getPendingLength()": {
        "return": "Longitud de MedicPending"
      },
      "getPendingRequest(uint32)": {
        "params": {
          "_index": "Indice a consultar"
        },
        "return": "Cadena dentro del indice indicado en MedicPending"
      },
      "isAdmin(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de admin"
      },
      "isAssistant(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de asistente"
      },
      "isMedic(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de médico"
      },
      "isPatient(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de paciente"
      },
      "removeAssistant(address)": {
        "details": "Remover a rol de asistente. Quien invoque al contrato no volverá a ser asistente."
      },
      "removeMedic(address)": {
        "details": "Función pública para remover médico",
        "params": {
          "account": "Cuenta que será removida de médico"
        }
      },
      "removePatient(address)": {
        "details": "Remover a rol de paciente. Quien invoque al contrato no volverá a ser paciente."
      },
      "removePending(uint32)": {
        "details": "Hace un swap para no dejar espacios en blanco",
        "params": {
          "_index": "The owner address"
        },
        "return": "booleano diciendo si fue exitoso o no"
      },
      "renounceAdmin()": {
        "details": "Renunciar a rol de administrador. Quien inque al contrato no volverá a ser admin."
      },
      "renounceMedic()": {
        "details": "Renunciar a rol de personal médico. Quien invoque al contrato no volverá a ser médico."
      },
      "updateMedics(address,string,string,string,string,string,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "Cuenta del médico"
        },
        "return": "a"
      },
      "viewMedics(address,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "The owner address"
        },
        "return": "_date The uploaded timestamp"
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMedicRecord(string)": {
        "notice": "Guarda el hash de un registro del medico"
      },
      "deleteMedics(address,uint256)": {
        "notice": "Returns el medico en el índice del propietario de la dirección."
      },
      "emergencyStop(bool)": {
        "notice": "Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera útil cuando nuevos errores sean descubiertos."
      },
      "getPendingLength()": {
        "notice": "Regresa la longitud del arreglo de solicitudes pendientes"
      },
      "getPendingRequest(uint32)": {
        "notice": "Regresa la cadena hash de un indice dado"
      },
      "removePending(uint32)": {
        "notice": "Remueve el elemento del indice indicado"
      },
      "updateMedics(address,string,string,string,string,string,uint256)": {
        "notice": "Returns el Medico en el índice del propietario de la dirección."
      },
      "viewMedics(address,uint256)": {
        "notice": "Returns el Medico en el índice del propietario de la dirección."
      }
    }
  }
}