import { OnInit, EventEmitter } from '@angular/core';
import { DropzoneDirective } from './dropzone.directive';
import { DropzoneConfigInterface } from './dropzone.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class DropzoneComponent implements OnInit {
    private platformId;
    disabled: boolean;
    config?: DropzoneConfigInterface;
    message: string;
    placeholder: string;
    useDropzoneClass: boolean;
    DZ_INIT: EventEmitter<any>;
    DZ_ERROR: EventEmitter<any>;
    DZ_SUCCESS: EventEmitter<any>;
    DZ_SENDING: EventEmitter<any>;
    DZ_CANCELED: EventEmitter<any>;
    DZ_COMPLETE: EventEmitter<any>;
    DZ_PROCESSING: EventEmitter<any>;
    DZ_DROP: EventEmitter<any>;
    DZ_DRAGSTART: EventEmitter<any>;
    DZ_DRAGEND: EventEmitter<any>;
    DZ_DRAGENTER: EventEmitter<any>;
    DZ_DRAGOVER: EventEmitter<any>;
    DZ_DRAGLEAVE: EventEmitter<any>;
    DZ_THUMBNAIL: EventEmitter<any>;
    DZ_ADDEDFILE: EventEmitter<any>;
    DZ_REMOVEDFILE: EventEmitter<any>;
    DZ_UPLOADPROGRESS: EventEmitter<any>;
    DZ_MAXFILESREACHED: EventEmitter<any>;
    DZ_MAXFILESEXCEEDED: EventEmitter<any>;
    DZ_SUCCESSMULTIPLE: EventEmitter<any>;
    DZ_SENDINGMULTIPLE: EventEmitter<any>;
    DZ_CANCELEDMULTIPLE: EventEmitter<any>;
    DZ_COMPLETEMULTIPLE: EventEmitter<any>;
    DZ_PROCESSINGMULTIPLE: EventEmitter<any>;
    DZ_RESET: EventEmitter<any>;
    DZ_QUEUECOMPLETE: EventEmitter<any>;
    DZ_TOTALUPLOADPROGRESS: EventEmitter<any>;
    directiveRef?: DropzoneDirective;
    constructor(platformId: Object);
    ngOnInit(): void;
    getPlaceholder(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DropzoneComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DropzoneComponent, "dropzone", ["ngxDropzone"], {
    "disabled": "disabled";
    "message": "message";
    "placeholder": "placeholder";
    "useDropzoneClass": "useDropzoneClass";
    "config": "config";
}, {
    "DZ_INIT": "init";
    "DZ_ERROR": "error";
    "DZ_SUCCESS": "success";
    "DZ_SENDING": "sending";
    "DZ_CANCELED": "canceled";
    "DZ_COMPLETE": "complete";
    "DZ_PROCESSING": "processing";
    "DZ_DROP": "drop";
    "DZ_DRAGSTART": "dragStart";
    "DZ_DRAGEND": "dragEnd";
    "DZ_DRAGENTER": "dragEnter";
    "DZ_DRAGOVER": "dragOver";
    "DZ_DRAGLEAVE": "dragLeave";
    "DZ_THUMBNAIL": "thumbnail";
    "DZ_ADDEDFILE": "addedFile";
    "DZ_REMOVEDFILE": "removedFile";
    "DZ_UPLOADPROGRESS": "uploadProgress";
    "DZ_MAXFILESREACHED": "maxFilesReached";
    "DZ_MAXFILESEXCEEDED": "maxFilesExceeded";
    "DZ_SUCCESSMULTIPLE": "successMultiple";
    "DZ_SENDINGMULTIPLE": "sendingMultiple";
    "DZ_CANCELEDMULTIPLE": "canceledMultiple";
    "DZ_COMPLETEMULTIPLE": "completeMultiple";
    "DZ_PROCESSINGMULTIPLE": "processingMultiple";
    "DZ_RESET": "reset";
    "DZ_QUEUECOMPLETE": "queueComplete";
    "DZ_TOTALUPLOADPROGRESS": "totalUploadProgress";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHpvbmUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImRyb3B6b25lLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERyb3B6b25lRGlyZWN0aXZlIH0gZnJvbSAnLi9kcm9wem9uZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRHJvcHpvbmVDb25maWdJbnRlcmZhY2UgfSBmcm9tICcuL2Ryb3B6b25lLmludGVyZmFjZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHJvcHpvbmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBjb25maWc/OiBEcm9wem9uZUNvbmZpZ0ludGVyZmFjZTtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICB1c2VEcm9wem9uZUNsYXNzOiBib29sZWFuO1xuICAgIERaX0lOSVQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0VSUk9SOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9TVUNDRVNTOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9TRU5ESU5HOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9DQU5DRUxFRDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfQ09NUExFVEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1BST0NFU1NJTkc6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0RST1A6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0RSQUdTVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfRFJBR0VORDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfRFJBR0VOVEVSOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9EUkFHT1ZFUjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfRFJBR0xFQVZFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9USFVNQk5BSUw6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0FEREVERklMRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfUkVNT1ZFREZJTEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1VQTE9BRFBST0dSRVNTOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9NQVhGSUxFU1JFQUNIRUQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX01BWEZJTEVTRVhDRUVERUQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1NVQ0NFU1NNVUxUSVBMRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfU0VORElOR01VTFRJUExFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9DQU5DRUxFRE1VTFRJUExFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9DT01QTEVURU1VTFRJUExFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9QUk9DRVNTSU5HTVVMVElQTEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1JFU0VUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9RVUVVRUNPTVBMRVRFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9UT1RBTFVQTE9BRFBST0dSRVNTOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkaXJlY3RpdmVSZWY/OiBEcm9wem9uZURpcmVjdGl2ZTtcbiAgICBjb25zdHJ1Y3RvcihwbGF0Zm9ybUlkOiBPYmplY3QpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgZ2V0UGxhY2Vob2xkZXIoKTogc3RyaW5nO1xufVxuIl19