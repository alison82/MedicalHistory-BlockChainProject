import { NgZone, ElementRef, Renderer2, OnInit, OnDestroy, DoCheck, OnChanges, EventEmitter, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { DropzoneConfigInterface } from './dropzone.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class DropzoneDirective implements OnInit, OnDestroy, DoCheck, OnChanges {
    private zone;
    private renderer;
    private elementRef;
    private differs;
    private platformId;
    private defaults;
    private instance;
    private configDiff;
    disabled: boolean;
    config?: DropzoneConfigInterface;
    DZ_INIT: EventEmitter<any>;
    DZ_ERROR: EventEmitter<any>;
    DZ_SUCCESS: EventEmitter<any>;
    DZ_SENDING: EventEmitter<any>;
    DZ_CANCELED: EventEmitter<any>;
    DZ_COMPLETE: EventEmitter<any>;
    DZ_PROCESSING: EventEmitter<any>;
    DZ_DROP: EventEmitter<any>;
    DZ_DRAGSTART: EventEmitter<any>;
    DZ_DRAGEND: EventEmitter<any>;
    DZ_DRAGENTER: EventEmitter<any>;
    DZ_DRAGOVER: EventEmitter<any>;
    DZ_DRAGLEAVE: EventEmitter<any>;
    DZ_THUMBNAIL: EventEmitter<any>;
    DZ_ADDEDFILE: EventEmitter<any>;
    DZ_REMOVEDFILE: EventEmitter<any>;
    DZ_UPLOADPROGRESS: EventEmitter<any>;
    DZ_MAXFILESREACHED: EventEmitter<any>;
    DZ_MAXFILESEXCEEDED: EventEmitter<any>;
    DZ_SUCCESSMULTIPLE: EventEmitter<any>;
    DZ_SENDINGMULTIPLE: EventEmitter<any>;
    DZ_CANCELEDMULTIPLE: EventEmitter<any>;
    DZ_COMPLETEMULTIPLE: EventEmitter<any>;
    DZ_PROCESSINGMULTIPLE: EventEmitter<any>;
    DZ_RESET: EventEmitter<any>;
    DZ_QUEUECOMPLETE: EventEmitter<any>;
    DZ_TOTALUPLOADPROGRESS: EventEmitter<any>;
    constructor(zone: NgZone, renderer: Renderer2, elementRef: ElementRef, differs: KeyValueDiffers, platformId: Object, defaults: DropzoneConfigInterface);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    dropzone(): any;
    reset(cancel?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DropzoneDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DropzoneDirective, "[dropzone]", ["ngxDropzone"], {
    "disabled": "disabled";
    "config": "dropzone";
}, {
    "DZ_INIT": "init";
    "DZ_ERROR": "error";
    "DZ_SUCCESS": "success";
    "DZ_SENDING": "sending";
    "DZ_CANCELED": "canceled";
    "DZ_COMPLETE": "complete";
    "DZ_PROCESSING": "processing";
    "DZ_DROP": "drop";
    "DZ_DRAGSTART": "dragStart";
    "DZ_DRAGEND": "dragEnd";
    "DZ_DRAGENTER": "dragEnter";
    "DZ_DRAGOVER": "dragOver";
    "DZ_DRAGLEAVE": "dragLeave";
    "DZ_THUMBNAIL": "thumbnail";
    "DZ_ADDEDFILE": "addedFile";
    "DZ_REMOVEDFILE": "removedFile";
    "DZ_UPLOADPROGRESS": "uploadProgress";
    "DZ_MAXFILESREACHED": "maxFilesReached";
    "DZ_MAXFILESEXCEEDED": "maxFilesExceeded";
    "DZ_SUCCESSMULTIPLE": "successMultiple";
    "DZ_SENDINGMULTIPLE": "sendingMultiple";
    "DZ_CANCELEDMULTIPLE": "canceledMultiple";
    "DZ_COMPLETEMULTIPLE": "completeMultiple";
    "DZ_PROCESSINGMULTIPLE": "processingMultiple";
    "DZ_RESET": "reset";
    "DZ_QUEUECOMPLETE": "queueComplete";
    "DZ_TOTALUPLOADPROGRESS": "totalUploadProgress";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHpvbmUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImRyb3B6b25lLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE9uSW5pdCwgT25EZXN0cm95LCBEb0NoZWNrLCBPbkNoYW5nZXMsIEV2ZW50RW1pdHRlciwgU2ltcGxlQ2hhbmdlcywgS2V5VmFsdWVEaWZmZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEcm9wem9uZUNvbmZpZ0ludGVyZmFjZSB9IGZyb20gJy4vZHJvcHpvbmUuaW50ZXJmYWNlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEcm9wem9uZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBEb0NoZWNrLCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGRpZmZlcnM7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHByaXZhdGUgZGVmYXVsdHM7XG4gICAgcHJpdmF0ZSBpbnN0YW5jZTtcbiAgICBwcml2YXRlIGNvbmZpZ0RpZmY7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgY29uZmlnPzogRHJvcHpvbmVDb25maWdJbnRlcmZhY2U7XG4gICAgRFpfSU5JVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfRVJST1I6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1NVQ0NFU1M6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1NFTkRJTkc6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0NBTkNFTEVEOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9DT01QTEVURTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfUFJPQ0VTU0lORzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfRFJPUDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfRFJBR1NUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9EUkFHRU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9EUkFHRU5URVI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0RSQUdPVkVSOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9EUkFHTEVBVkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1RIVU1CTkFJTDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfQURERURGSUxFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9SRU1PVkVERklMRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfVVBMT0FEUFJPR1JFU1M6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX01BWEZJTEVTUkVBQ0hFRDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfTUFYRklMRVNFWENFRURFRDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfU1VDQ0VTU01VTFRJUExFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBEWl9TRU5ESU5HTVVMVElQTEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0NBTkNFTEVETVVMVElQTEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX0NPTVBMRVRFTVVMVElQTEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1BST0NFU1NJTkdNVUxUSVBMRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgRFpfUkVTRVQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1FVRVVFQ09NUExFVEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIERaX1RPVEFMVVBMT0FEUFJPR1JFU1M6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHpvbmU6IE5nWm9uZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgZGlmZmVyczogS2V5VmFsdWVEaWZmZXJzLCBwbGF0Zm9ybUlkOiBPYmplY3QsIGRlZmF1bHRzOiBEcm9wem9uZUNvbmZpZ0ludGVyZmFjZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIGRyb3B6b25lKCk6IGFueTtcbiAgICByZXNldChjYW5jZWw/OiBib29sZWFuKTogdm9pZDtcbn1cbiJdfQ==