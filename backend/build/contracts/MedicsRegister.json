{
  "contractName": "MedicsRegister",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdm",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedAdm",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountRen",
          "type": "address"
        }
      ],
      "name": "AdminRenounce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAssistant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedAssistant",
          "type": "address"
        }
      ],
      "name": "AssistantAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAssistant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedAssistant",
          "type": "address"
        }
      ],
      "name": "AssistantRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_stop",
          "type": "bool"
        }
      ],
      "name": "LogSwitchStop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedMed",
          "type": "address"
        }
      ],
      "name": "MedicAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMed",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedMed",
          "type": "address"
        }
      ],
      "name": "MedicRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "medRen",
          "type": "address"
        }
      ],
      "name": "MedicRenounce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "MedicsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "MedicsDelete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_queryDate",
          "type": "uint256"
        }
      ],
      "name": "MedicsRetrieve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_medic",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_queryDate",
          "type": "uint256"
        }
      ],
      "name": "MedicsUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPat",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoAddedPat",
          "type": "address"
        }
      ],
      "name": "PatientAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPat",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "whoRemovedPat",
          "type": "address"
        }
      ],
      "name": "PatientRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAssistant",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fileToMedic",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hashPicture",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAssistant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMedic",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeAssistant",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMedic",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_stop",
          "type": "bool"
        }
      ],
      "name": "emergencyStop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        }
      ],
      "name": "addMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hashPicture",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "updateMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "viewMedics",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialty",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cedula",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hashPicture",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "deleteMedics",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAdm\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountRen\",\"type\":\"address\"}],\"name\":\"AdminRenounce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAssistant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAssistant\",\"type\":\"address\"}],\"name\":\"AssistantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAssistant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedAssistant\",\"type\":\"address\"}],\"name\":\"AssistantRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"LogSwitchStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedMed\",\"type\":\"address\"}],\"name\":\"MedicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedMed\",\"type\":\"address\"}],\"name\":\"MedicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"medRen\",\"type\":\"address\"}],\"name\":\"MedicRenounce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsRetrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedPat\",\"type\":\"address\"}],\"name\":\"PatientAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedPat\",\"type\":\"address\"}],\"name\":\"PatientRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAssistant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"}],\"name\":\"addMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"deleteMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"emergencyStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fileToMedic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAssistant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMedic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAssistant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"updateMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"viewMedics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Francisco Alem\\u00e1n\",\"details\":\"El contrato hereda las funciones del contrato de roles\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar admin\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como admin\"}},\"addAssistant(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar asistente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como asistente\"}},\"addMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como m\\u00e9dico\"}},\"addMedics(address,string,string,string,string,string)\":{\"details\":\"Funci\\u00f3n para agregar un m\\u00e9dico. Esta funci\\u00f3n es realizada por un administrador.\",\"params\":{\"_account\":\"a\",\"_cedula\":\"a\",\"_email\":\"a\",\"_hashPicture\":\"a\",\"_name\":\"a\",\"_specialty\":\"a\"},\"return\":\"_success a\"},\"addPatient(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar paciente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como paciente\"}},\"deleteMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"},\"emergencyStop(bool)\":{\"params\":{\"_stop\":\"Switch del contrado de encendido/apagado\"}},\"isAdmin(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de admin\"},\"isAssistant(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de asistente\"},\"isMedic(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de m\\u00e9dico\"},\"isPatient(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de paciente\"},\"removeAssistant(address)\":{\"details\":\"Remover a rol de asistente. Quien invoque al contrato no volver\\u00e1 a ser asistente.\"},\"removeMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para remover m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 removida de m\\u00e9dico\"}},\"removePatient(address)\":{\"details\":\"Remover a rol de paciente. Quien invoque al contrato no volver\\u00e1 a ser paciente.\"},\"renounceAdmin()\":{\"details\":\"Renunciar a rol de administrador. Quien inque al contrato no volver\\u00e1 a ser admin.\"},\"renounceMedic()\":{\"details\":\"Renunciar a rol de personal m\\u00e9dico. Quien invoque al contrato no volver\\u00e1 a ser m\\u00e9dico.\"},\"updateMedics(address,string,string,string,string,string,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"Cuenta del m\\u00e9dico\"},\"return\":\"a\"},\"viewMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"}},\"title\":\"Smart Contract de Registro de m\\u00e9dicos.\"},\"userdoc\":{\"methods\":{\"deleteMedics(address,uint256)\":{\"notice\":\"Returns el medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"emergencyStop(bool)\":{\"notice\":\"Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera \\u00fatil cuando nuevos errores sean descubiertos.\"},\"updateMedics(address,string,string,string,string,string,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"viewMedics(address,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"}},\"notice\":\"Este contrato representa el registro de los m\\u00e9dicos.\"}},\"settings\":{\"compilationTarget\":{\"/home/seno/Maestr\\u00eda/Distribuidos/Backend/backend/contracts/MedicsRegister.sol\":\"MedicsRegister\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/seno/Maestr\\u00eda/Distribuidos/Backend/backend/contracts/MedicsRegister.sol\":{\"keccak256\":\"0xda70b5e23c3273015437e98de51b32b5fc11400a0264d65ed105a9a2097b2c1d\",\"urls\":[\"bzz-raw://0d205d395d45d4245eb7b6edabe50ca2ac66d4ec6cf6ec08a2ddd3fe766bc9a6\",\"dweb:/ipfs/QmSyRm3wfEQiV8wo7eVgggUhbouFHzn7mD8wc8s9yFH5XQ\"]},\"/home/seno/Maestr\\u00eda/Distribuidos/Backend/backend/contracts/acceso/UserRoles.sol\":{\"keccak256\":\"0xcf3dcd18d3c5fa0cb263b4347d6ad207f61832bcf77d89e636759a21ba1cb0f4\",\"urls\":[\"bzz-raw://93622427f792709784e1d5e35e34f8838582f36faa85fe6a4ccee3e0e8dc7d6c\",\"dweb:/ipfs/QmcemFroxW9hA8Hby6qyrDSfWbAn3cF6gBqvirxLWBgAFV\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600560006101000a81548160ff02191690831515021790555062000030336200003660201b60201c565b62000272565b62000051816000620000ae60201b620037a11790919060201c565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b620000c082826200019260201b60201c565b1562000134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200021b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062003d2a6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613aa880620002826000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637d0d6257116100ad578063c6584bb811610071578063c6584bb8146107bd578063d6aac86914610819578063e765e73514610a97578063ea04f68f14610de6578063eae3ef8a1461105d57610121565b80637d0d62571461068b5780638bad0c0a146106cf5780638f9c79ed146106d9578063b0397ff814610735578063b8792f0b1461077957610121565b80635c8b67df116100f45780635c8b67df1461022257806362499d5c146102665780636d263ceb146105bf57806370480275146106035780637d01dbc21461064757610121565b80630ac62e021461012657806324d7806c1461015657806333645874146101b257806333dc0abd14610218575b600080fd5b6101546004803603602081101561013c57600080fd5b810190808035151590602001909291905050506110b9565b005b6101986004803603602081101561016c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611186565b604051808215151515815260200191505060405180910390f35b6101fe600480360360408110156101c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a3565b604051808215151515815260200191505060405180910390f35b61022061157e565b005b6102646004803603602081101561023857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e7565b005b6105a5600480360360e081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460018302840111640100000000831117156102ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035057600080fd5b82018360208201111561036257600080fd5b8035906020019184600183028401116401000000008311171561038457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e757600080fd5b8201836020820111156103f957600080fd5b8035906020019184600183028401116401000000008311171561041b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561047e57600080fd5b82018360208201111561049057600080fd5b803590602001918460018302840111640100000000831117156104b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561051557600080fd5b82018360208201111561052757600080fd5b8035906020019184600183028401116401000000008311171561054957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611651565b604051808215151515815260200191505060405180910390f35b610601600480360360208110156105d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea3565b005b6106456004803603602081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f1d565b005b6106896004803603602081101561065d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f87565b005b6106cd600480360360208110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ff1565b005b6106d761205b565b005b61071b600480360360208110156106ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612066565b604051808215151515815260200191505060405180910390f35b6107776004803603602081101561074b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612083565b005b6107bb6004803603602081101561078f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120ed565b005b6107ff600480360360208110156107d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612157565b604051808215151515815260200191505060405180910390f35b6108656004803603604081101561082f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612174565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156108bb5780820151818401526020810190506108a0565b50505050905090810190601f1680156108e85780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015610921578082015181840152602081019050610906565b50505050905090810190601f16801561094e5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561098757808201518184015260208101905061096c565b50505050905090810190601f1680156109b45780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156109ed5780820151818401526020810190506109d2565b50505050905090810190601f168015610a1a5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610a53578082015181840152602081019050610a38565b50505050905090810190601f168015610a805780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b610dcc600480360360c0811015610aad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610aea57600080fd5b820183602082011115610afc57600080fd5b80359060200191846001830284011164010000000083111715610b1e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b8157600080fd5b820183602082011115610b9357600080fd5b80359060200191846001830284011164010000000083111715610bb557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c1857600080fd5b820183602082011115610c2a57600080fd5b80359060200191846001830284011164010000000083111715610c4c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610caf57600080fd5b820183602082011115610cc157600080fd5b80359060200191846001830284011164010000000083111715610ce357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d4657600080fd5b820183602082011115610d5857600080fd5b80359060200191846001830284011164010000000083111715610d7a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124c2565b604051808215151515815260200191505060405180910390f35b610e3260048036036040811015610dfc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612997565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015610e82578082015181840152602081019050610e67565b50505050905090810190601f168015610eaf5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b83811015610ee8578082015181840152602081019050610ecd565b50505050905090810190601f168015610f155780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b83811015610f4e578082015181840152602081019050610f33565b50505050905090810190601f168015610f7b5780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015610fb4578082015181840152602081019050610f99565b50505050905090810190601f168015610fe15780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b8381101561101a578082015181840152602081019050610fff565b50505050905090810190601f1680156110475780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61109f6004803603602081101561107357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131d8565b604051808215151515815260200191505060405180910390f35b6110c233611186565b611117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b80600560006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b600061119c8260006131f590919063ffffffff16565b9050919050565b6000600560009054906101000a900460ff16156111bf57600080fd5b6111c833611186565b61121d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561125757600080fd5b6000821015801561128857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61129157600080fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116112e057600080fd5b600042905060006112f0856132d3565b905060008090505b818110156115715784600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061134b57fe5b9060005260206000209060060201600501541415611564573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106113fc57fe5b906000526020600020906006020160040186604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561149d5780601f106114725761010080835404028352916020019161149d565b820191906000526020600020905b81548152906001019060200180831161148057829003601f168201915b5050935050505060405180910390a3600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106114f657fe5b906000526020600020906006020160008082016000611515919061387c565b600182016000611525919061387c565b600282016000611535919061387c565b600382016000611545919061387c565b600482016000611555919061387c565b60058201600090555050611571565b80806001019150506112f8565b5060019250505092915050565b611587336131d8565b6115dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d9602d913960400191505060405180910390fd5b6115e533613373565b565b6115f033611186565b611645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b61164e816133e4565b50565b6000600560009054906101000a900460ff161561166d57600080fd5b61167633611186565b6116cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561170557600080fd5b608087511061171357600080fd5b601e86511061172157600080fd5b601e85511061172f57600080fd5b601e84511061173d57600080fd5b601e83511061174b57600080fd5b6000821015801561177c57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61178557600080fd5b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116117d457600080fd5b600042905060006117e48a6132d3565b90506117ee6138c4565b60008090505b82811015611bb357600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061184657fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118f85780601f106118cd576101008083540402835291602001916118f8565b820191906000526020600020905b8154815290600101906020018083116118db57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561199a5780601f1061196f5761010080835404028352916020019161199a565b820191906000526020600020905b81548152906001019060200180831161197d57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a3c5780601f10611a1157610100808354040283529160200191611a3c565b820191906000526020600020905b815481529060010190602001808311611a1f57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ade5780601f10611ab357610100808354040283529160200191611ade565b820191906000526020600020905b815481529060010190602001808311611ac157829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b805780601f10611b5557610100808354040283529160200191611b80565b820191906000526020600020905b815481529060010190602001808311611b6357829003601f168201915b505050505081526020016005820154815250509150858260a001511415611ba657611bb3565b80806001019150506117f4565b50898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a00181815250503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015611cb5578082015181840152602081019050611c9a565b50505050905090810190601f168015611ce25780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015611d1b578082015181840152602081019050611d00565b50505050905090810190601f168015611d485780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b83811015611d81578082015181840152602081019050611d66565b50505050905090810190601f168015611dae5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015611de7578082015181840152602081019050611dcc565b50505050905090810190601f168015611e145780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015611e4d578082015181840152602081019050611e32565b50505050905090810190601f168015611e7a5780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a360019350505050979650505050505050565b611eac33612157565b80611ebc5750611ebb336131d8565b5b611f11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806139a06039913960400191505060405180910390fd5b611f1a81613455565b50565b611f2633611186565b611f7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b611f84816134c6565b50565b611f9033611186565b611fe5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b611fee81613373565b50565b611ffa336131d8565b61204f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d9602d913960400191505060405180910390fd5b61205881613537565b50565b612064336135a8565b565b600061207c8260026131f590919063ffffffff16565b9050919050565b61208c33611186565b6120e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b6120ea81613602565b50565b6120f633611186565b61214b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b61215481613673565b50565b600061216d8260036131f590919063ffffffff16565b9050919050565b6004602052816000526040600020818154811061218d57fe5b906000526020600020906006020160009150915050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223a5780601f1061220f5761010080835404028352916020019161223a565b820191906000526020600020905b81548152906001019060200180831161221d57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122d85780601f106122ad576101008083540402835291602001916122d8565b820191906000526020600020905b8154815290600101906020018083116122bb57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123765780601f1061234b57610100808354040283529160200191612376565b820191906000526020600020905b81548152906001019060200180831161235957829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124145780601f106123e957610100808354040283529160200191612414565b820191906000526020600020905b8154815290600101906020018083116123f757829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124b25780601f10612487576101008083540402835291602001916124b2565b820191906000526020600020905b81548152906001019060200180831161249557829003601f168201915b5050505050908060050154905086565b6000600560009054906101000a900460ff16156124de57600080fd5b6124e733611186565b61253c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561257657600080fd5b608086511061258457600080fd5b601e85511061259257600080fd5b601e8451106125a057600080fd5b601e8351106125ae57600080fd5b601e8251106125bc57600080fd5b60004290506125c96138c4565b6040518060c00160405280898152602001888152602001878152602001868152602001858152602001838152509050600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001908051906020019061267f9291906138fa565b50602082015181600101908051906020019061269c9291906138fa565b5060408201518160020190805190602001906126b99291906138fa565b5060608201518160030190805190602001906126d69291906138fa565b5060808201518160040190805190602001906126f39291906138fa565b5060a082015181600501555050503373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156127ac578082015181840152602081019050612791565b50505050905090810190601f1680156127d95780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b838110156128125780820151818401526020810190506127f7565b50505050905090810190601f16801561283f5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561287857808201518184015260208101905061285d565b50505050905090810190601f1680156128a55780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156128de5780820151818401526020810190506128c3565b50505050905090810190601f16801561290b5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015612944578082015181840152602081019050612929565b50505050905090810190601f1680156129715780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b6060806060806060600560009054906101000a900460ff16156129b957600080fd5b6129c233611186565b612a17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b612a2033611186565b15612a5f578673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612a5e57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415612a9957600080fd5b60008610158015612aca57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611155b612ad357600080fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011612b2257600080fd5b60004290506000612b32896132d3565b9050612b3c6138c4565b60008090505b82811015612f0157600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110612b9457fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c465780601f10612c1b57610100808354040283529160200191612c46565b820191906000526020600020905b815481529060010190602001808311612c2957829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ce85780601f10612cbd57610100808354040283529160200191612ce8565b820191906000526020600020905b815481529060010190602001808311612ccb57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d8a5780601f10612d5f57610100808354040283529160200191612d8a565b820191906000526020600020905b815481529060010190602001808311612d6d57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e2c5780601f10612e0157610100808354040283529160200191612e2c565b820191906000526020600020905b815481529060010190602001808311612e0f57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ece5780601f10612ea357610100808354040283529160200191612ece565b820191906000526020600020905b815481529060010190602001808311612eb157829003601f168201915b505050505081526020016005820154815250509150898260a001511415612ef457612f01565b8080600101915050612b42565b503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015612fcc578082015181840152602081019050612fb1565b50505050905090810190601f168015612ff95780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015613032578082015181840152602081019050613017565b50505050905090810190601f16801561305f5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561309857808201518184015260208101905061307d565b50505050905090810190601f1680156130c55780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156130fe5780820151818401526020810190506130e3565b50505050905090810190601f16801561312b5780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015613164578082015181840152602081019050613149565b50505050905090810190601f1680156131915780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193505050509295509295909350565b60006131ee8260016131f590919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561327c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613a276022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560009054906101000a900460ff16156132ef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561332957600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6133878160016136e490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b6133f88160036137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec7060405160405180910390a350565b6134698160026137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf60405160405180910390a350565b6134da8160006137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b61354b8160026136e490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b6135bc8160006136e490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd60405160405180910390a250565b6136168160016137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b6136878160036136e490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af60405160405180910390a350565b6136ee82826131f5565b613743576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a066021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6137ab82826131f5565b1561381e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b50805460018160011615610100020316600290046000825580601f106138a257506138c1565b601f0160209004906000526020600020908101906138c0919061397a565b5b50565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061393b57805160ff1916838001178555613969565b82800160010185558215613969579182015b8281111561396857825182559160200191906001019061394d565b5b509050613976919061397a565b5090565b61399c91905b80821115613998576000816000905550600101613980565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284173697374656e7465206f206dc3a96469636f294e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e29a265627a7a723158202228a7c2d1e40bde239285d9ca97d31452f2aa210ff665b4ff4f95114c09b38b64736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80637d0d6257116100ad578063c6584bb811610071578063c6584bb8146107bd578063d6aac86914610819578063e765e73514610a97578063ea04f68f14610de6578063eae3ef8a1461105d57610121565b80637d0d62571461068b5780638bad0c0a146106cf5780638f9c79ed146106d9578063b0397ff814610735578063b8792f0b1461077957610121565b80635c8b67df116100f45780635c8b67df1461022257806362499d5c146102665780636d263ceb146105bf57806370480275146106035780637d01dbc21461064757610121565b80630ac62e021461012657806324d7806c1461015657806333645874146101b257806333dc0abd14610218575b600080fd5b6101546004803603602081101561013c57600080fd5b810190808035151590602001909291905050506110b9565b005b6101986004803603602081101561016c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611186565b604051808215151515815260200191505060405180910390f35b6101fe600480360360408110156101c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a3565b604051808215151515815260200191505060405180910390f35b61022061157e565b005b6102646004803603602081101561023857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e7565b005b6105a5600480360360e081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460018302840111640100000000831117156102ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035057600080fd5b82018360208201111561036257600080fd5b8035906020019184600183028401116401000000008311171561038457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e757600080fd5b8201836020820111156103f957600080fd5b8035906020019184600183028401116401000000008311171561041b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561047e57600080fd5b82018360208201111561049057600080fd5b803590602001918460018302840111640100000000831117156104b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561051557600080fd5b82018360208201111561052757600080fd5b8035906020019184600183028401116401000000008311171561054957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611651565b604051808215151515815260200191505060405180910390f35b610601600480360360208110156105d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea3565b005b6106456004803603602081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f1d565b005b6106896004803603602081101561065d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f87565b005b6106cd600480360360208110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ff1565b005b6106d761205b565b005b61071b600480360360208110156106ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612066565b604051808215151515815260200191505060405180910390f35b6107776004803603602081101561074b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612083565b005b6107bb6004803603602081101561078f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120ed565b005b6107ff600480360360208110156107d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612157565b604051808215151515815260200191505060405180910390f35b6108656004803603604081101561082f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612174565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156108bb5780820151818401526020810190506108a0565b50505050905090810190601f1680156108e85780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b83811015610921578082015181840152602081019050610906565b50505050905090810190601f16801561094e5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561098757808201518184015260208101905061096c565b50505050905090810190601f1680156109b45780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156109ed5780820151818401526020810190506109d2565b50505050905090810190601f168015610a1a5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610a53578082015181840152602081019050610a38565b50505050905090810190601f168015610a805780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b610dcc600480360360c0811015610aad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610aea57600080fd5b820183602082011115610afc57600080fd5b80359060200191846001830284011164010000000083111715610b1e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b8157600080fd5b820183602082011115610b9357600080fd5b80359060200191846001830284011164010000000083111715610bb557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c1857600080fd5b820183602082011115610c2a57600080fd5b80359060200191846001830284011164010000000083111715610c4c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610caf57600080fd5b820183602082011115610cc157600080fd5b80359060200191846001830284011164010000000083111715610ce357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d4657600080fd5b820183602082011115610d5857600080fd5b80359060200191846001830284011164010000000083111715610d7a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124c2565b604051808215151515815260200191505060405180910390f35b610e3260048036036040811015610dfc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612997565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015610e82578082015181840152602081019050610e67565b50505050905090810190601f168015610eaf5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b83811015610ee8578082015181840152602081019050610ecd565b50505050905090810190601f168015610f155780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b83811015610f4e578082015181840152602081019050610f33565b50505050905090810190601f168015610f7b5780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015610fb4578082015181840152602081019050610f99565b50505050905090810190601f168015610fe15780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b8381101561101a578082015181840152602081019050610fff565b50505050905090810190601f1680156110475780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61109f6004803603602081101561107357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131d8565b604051808215151515815260200191505060405180910390f35b6110c233611186565b611117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b80600560006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b600061119c8260006131f590919063ffffffff16565b9050919050565b6000600560009054906101000a900460ff16156111bf57600080fd5b6111c833611186565b61121d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561125757600080fd5b6000821015801561128857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61129157600080fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116112e057600080fd5b600042905060006112f0856132d3565b905060008090505b818110156115715784600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061134b57fe5b9060005260206000209060060201600501541415611564573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106113fc57fe5b906000526020600020906006020160040186604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561149d5780601f106114725761010080835404028352916020019161149d565b820191906000526020600020905b81548152906001019060200180831161148057829003601f168201915b5050935050505060405180910390a3600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106114f657fe5b906000526020600020906006020160008082016000611515919061387c565b600182016000611525919061387c565b600282016000611535919061387c565b600382016000611545919061387c565b600482016000611555919061387c565b60058201600090555050611571565b80806001019150506112f8565b5060019250505092915050565b611587336131d8565b6115dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d9602d913960400191505060405180910390fd5b6115e533613373565b565b6115f033611186565b611645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b61164e816133e4565b50565b6000600560009054906101000a900460ff161561166d57600080fd5b61167633611186565b6116cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561170557600080fd5b608087511061171357600080fd5b601e86511061172157600080fd5b601e85511061172f57600080fd5b601e84511061173d57600080fd5b601e83511061174b57600080fd5b6000821015801561177c57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61178557600080fd5b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116117d457600080fd5b600042905060006117e48a6132d3565b90506117ee6138c4565b60008090505b82811015611bb357600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061184657fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118f85780601f106118cd576101008083540402835291602001916118f8565b820191906000526020600020905b8154815290600101906020018083116118db57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561199a5780601f1061196f5761010080835404028352916020019161199a565b820191906000526020600020905b81548152906001019060200180831161197d57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a3c5780601f10611a1157610100808354040283529160200191611a3c565b820191906000526020600020905b815481529060010190602001808311611a1f57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ade5780601f10611ab357610100808354040283529160200191611ade565b820191906000526020600020905b815481529060010190602001808311611ac157829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b805780601f10611b5557610100808354040283529160200191611b80565b820191906000526020600020905b815481529060010190602001808311611b6357829003601f168201915b505050505081526020016005820154815250509150858260a001511415611ba657611bb3565b80806001019150506117f4565b50898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a00181815250503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015611cb5578082015181840152602081019050611c9a565b50505050905090810190601f168015611ce25780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015611d1b578082015181840152602081019050611d00565b50505050905090810190601f168015611d485780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b83811015611d81578082015181840152602081019050611d66565b50505050905090810190601f168015611dae5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015611de7578082015181840152602081019050611dcc565b50505050905090810190601f168015611e145780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015611e4d578082015181840152602081019050611e32565b50505050905090810190601f168015611e7a5780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a360019350505050979650505050505050565b611eac33612157565b80611ebc5750611ebb336131d8565b5b611f11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806139a06039913960400191505060405180910390fd5b611f1a81613455565b50565b611f2633611186565b611f7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b611f84816134c6565b50565b611f9033611186565b611fe5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b611fee81613373565b50565b611ffa336131d8565b61204f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d9602d913960400191505060405180910390fd5b61205881613537565b50565b612064336135a8565b565b600061207c8260026131f590919063ffffffff16565b9050919050565b61208c33611186565b6120e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b6120ea81613602565b50565b6120f633611186565b61214b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b61215481613673565b50565b600061216d8260036131f590919063ffffffff16565b9050919050565b6004602052816000526040600020818154811061218d57fe5b906000526020600020906006020160009150915050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223a5780601f1061220f5761010080835404028352916020019161223a565b820191906000526020600020905b81548152906001019060200180831161221d57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122d85780601f106122ad576101008083540402835291602001916122d8565b820191906000526020600020905b8154815290600101906020018083116122bb57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123765780601f1061234b57610100808354040283529160200191612376565b820191906000526020600020905b81548152906001019060200180831161235957829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124145780601f106123e957610100808354040283529160200191612414565b820191906000526020600020905b8154815290600101906020018083116123f757829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124b25780601f10612487576101008083540402835291602001916124b2565b820191906000526020600020905b81548152906001019060200180831161249557829003601f168201915b5050505050908060050154905086565b6000600560009054906101000a900460ff16156124de57600080fd5b6124e733611186565b61253c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561257657600080fd5b608086511061258457600080fd5b601e85511061259257600080fd5b601e8451106125a057600080fd5b601e8351106125ae57600080fd5b601e8251106125bc57600080fd5b60004290506125c96138c4565b6040518060c00160405280898152602001888152602001878152602001868152602001858152602001838152509050600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001908051906020019061267f9291906138fa565b50602082015181600101908051906020019061269c9291906138fa565b5060408201518160020190805190602001906126b99291906138fa565b5060608201518160030190805190602001906126d69291906138fa565b5060808201518160040190805190602001906126f39291906138fa565b5060a082015181600501555050503373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156127ac578082015181840152602081019050612791565b50505050905090810190601f1680156127d95780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b838110156128125780820151818401526020810190506127f7565b50505050905090810190601f16801561283f5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561287857808201518184015260208101905061285d565b50505050905090810190601f1680156128a55780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156128de5780820151818401526020810190506128c3565b50505050905090810190601f16801561290b5780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015612944578082015181840152602081019050612929565b50505050905090810190601f1680156129715780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b6060806060806060600560009054906101000a900460ff16156129b957600080fd5b6129c233611186565b612a17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a49602b913960400191505060405180910390fd5b612a2033611186565b15612a5f578673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612a5e57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415612a9957600080fd5b60008610158015612aca57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611155b612ad357600080fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011612b2257600080fd5b60004290506000612b32896132d3565b9050612b3c6138c4565b60008090505b82811015612f0157600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110612b9457fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c465780601f10612c1b57610100808354040283529160200191612c46565b820191906000526020600020905b815481529060010190602001808311612c2957829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ce85780601f10612cbd57610100808354040283529160200191612ce8565b820191906000526020600020905b815481529060010190602001808311612ccb57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d8a5780601f10612d5f57610100808354040283529160200191612d8a565b820191906000526020600020905b815481529060010190602001808311612d6d57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e2c5780601f10612e0157610100808354040283529160200191612e2c565b820191906000526020600020905b815481529060010190602001808311612e0f57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ece5780601f10612ea357610100808354040283529160200191612ece565b820191906000526020600020905b815481529060010190602001808311612eb157829003601f168201915b505050505081526020016005820154815250509150898260a001511415612ef457612f01565b8080600101915050612b42565b503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015612fcc578082015181840152602081019050612fb1565b50505050905090810190601f168015612ff95780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015613032578082015181840152602081019050613017565b50505050905090810190601f16801561305f5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561309857808201518184015260208101905061307d565b50505050905090810190601f1680156130c55780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156130fe5780820151818401526020810190506130e3565b50505050905090810190601f16801561312b5780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015613164578082015181840152602081019050613149565b50505050905090810190601f1680156131915780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193505050509295509295909350565b60006131ee8260016131f590919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561327c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613a276022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560009054906101000a900460ff16156132ef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561332957600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6133878160016136e490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b6133f88160036137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec7060405160405180910390a350565b6134698160026137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf60405160405180910390a350565b6134da8160006137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b61354b8160026136e490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b6135bc8160006136e490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd60405160405180910390a250565b6136168160016137a190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b6136878160036136e490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af60405160405180910390a350565b6136ee82826131f5565b613743576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a066021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6137ab82826131f5565b1561381e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b50805460018160011615610100020316600290046000825580601f106138a257506138c1565b601f0160209004906000526020600020908101906138c0919061397a565b5b50565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061393b57805160ff1916838001178555613969565b82800160010185558215613969579182015b8281111561396857825182559160200191906001019061394d565b5b509050613976919061397a565b5090565b61399c91905b80821115613998576000816000905550600101613980565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284173697374656e7465206f206dc3a96469636f294e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e29a265627a7a723158202228a7c2d1e40bde239285d9ca97d31452f2aa210ff665b4ff4f95114c09b38b64736f6c63430005100032",
  "sourceMap": "274:8184:1:-;;;766:5;743:28;;;;;;;;;;;;;;;;;;;;1687:21:6;1697:10;1687:9;;;:21;;:::i;:::-;274:8184:1;;6727:128:6;6782:20;6794:7;6782;:11;;;;;;:20;;;;:::i;:::-;6837:10;6817:31;;6828:7;6817:31;;;;;;;;;;;;6727:128;:::o;260:175:7:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;274:8184:1:-;;;;;;;",
  "deployedSourceMap": "274:8184:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:8184:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2387:131;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2387:131:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;2587:105:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2587:105:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7249:804:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7249:804:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3900:83:6;;;:::i;:::-;;4364:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4364:95:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;4053:1498:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4053:1498:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4053:1498:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4053:1498:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4053:1498:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4053:1498:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4053:1498:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4053:1498:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4053:1498:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4053:1498:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4053:1498:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4053:1498:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4053:1498:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4053:1498:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4053:1498:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4053:1498:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4053:1498:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4053:1498:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4053:1498:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4053:1498:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4053:1498:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4053:1498:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4833:95:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4833:95:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2822:87;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2822:87:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;3685:93;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3685:93:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;5041:97;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5041:97:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;3024:75;;;:::i;:::-;;4589:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4589:108:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3466:87;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3466:87:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;5253:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5253:101:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;4114:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4114:112:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;617:48:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;617:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;617:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;617:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;617:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;617:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;617:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2794:1065;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2794:1065:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2794:1065:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2794:1065:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2794:1065:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2794:1065:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2794:1065:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2794:1065:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2794:1065:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2794:1065:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2794:1065:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2794:1065:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2794:1065:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2794:1065:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2794:1065:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2794:1065:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2794:1065:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2794:1065:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2794:1065:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2794:1065:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2794:1065:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2794:1065:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5771:1258;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5771:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5771:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5771:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5771:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5771:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5771:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:104:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3228:104:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2387:131:1;1882:19:6;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:5:1;2449:7;;:15;;;;;;;;;;;;;;;;;;2493:10;2479:32;;;2505:5;2479:32;;;;;;;;;;;;;;;;;;;;;;2387:131;:::o;2587:105:6:-;2642:4;2665:20;2677:7;2665;:11;;:20;;;;:::i;:::-;2658:27;;2587:105;;;:::o;7249:804:1:-;7343:13;2134:7;;;;;;;;;;;2133:8;2125:17;;;;;;1882:19:6;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:42:1;7376:54;;:8;:54;;;;7368:63;;;;;;7458:1;7449:5;:10;;:33;;;;;7472:10;7463:5;:19;;7449:33;7441:42;;;;;;7532:1;7501:11;:21;7513:8;7501:21;;;;;;;;;;;;;;;:28;;;;:32;7493:41;;;;;;7545:18;7566:3;7545:24;;7579:11;7593:24;7608:8;7593:14;:24::i;:::-;7579:38;;7633:9;7645:1;7633:13;;7628:394;7652:3;7648:1;:7;7628:394;;;7713:5;7680:11;:21;7692:8;7680:21;;;;;;;;;;;;;;;7702:1;7680:24;;;;;;;;;;;;;;;;;;:29;;;:38;7676:336;;;7807:10;7743:182;;7777:8;7743:182;;;7839:11;:21;7851:8;7839:21;;;;;;;;;;;;;;;7861:1;7839:24;;;;;;;;;;;;;;;;;;:36;;7897:10;7743:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7950:11;:21;7962:8;7950:21;;;;;;;;;;;;;;;7972:1;7950:24;;;;;;;;;;;;;;;;;;;7943:31;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;7992:5;;7676:336;7657:3;;;;;;;7628:394;;;;8042:4;8031:15;;1959:1:6;;7249:804:1;;;;:::o;3900:83:6:-;2012:19;2020:10;2012:7;:19::i;:::-;2004:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3952:24;3965:10;3952:12;:24::i;:::-;3900:83::o;4364:95::-;1882:19;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:22;4444:7;4430:13;:22::i;:::-;4364:95;:::o;4053:1498:1:-;4328:13;2134:7;;;;;;;;;;;2133:8;2125:17;;;;;;1882:19:6;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4373:42:1;4361:54;;:8;:54;;;;4353:63;;;;;;4456:3;4440:5;4434:19;:25;4426:34;;;;;;4505:2;4484:10;4478:24;:29;4470:38;;;;;;4550:2;4532:7;4526:21;:26;4518:35;;;;;;4594:2;4577:6;4571:20;:25;4563:34;;;;;;4644:2;4621:12;4615:26;:31;4607:40;;;;;;4674:1;4665:5;:10;;:33;;;;;4688:10;4679:5;:19;;4665:33;4657:42;;;;;;4748:1;4717:11;:21;4729:8;4717:21;;;;;;;;;;;;;;;:28;;;;:32;4709:41;;;;;;4761:18;4782:3;4761:24;;4795:11;4809:24;4824:8;4809:14;:24::i;:::-;4795:38;;4843:20;;:::i;:::-;4878:9;4890:1;4878:13;;4873:169;4897:3;4893:1;:7;4873:169;;;4930:11;:21;4942:8;4930:21;;;;;;;;;;;;;;;4952:1;4930:24;;;;;;;;;;;;;;;;;;4921:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4987:5;4972:6;:11;;;:20;4968:64;;;5012:5;;4968:64;4902:3;;;;;;;4873:169;;;;5066:5;5052:6;:11;;:19;;;;5100:10;5081:6;:16;;:29;;;;5136:7;5120:6;:13;;:23;;;;5168:6;5153;:12;;:21;;;;5205:12;5184:6;:18;;:33;;;;5241:5;5227:6;:11;;:19;;;;;5310:10;5262:257;;5288:8;5262:257;;;5334:6;:11;;;5359:6;:16;;;5389:6;:13;;;5416:6;:12;;;5442:6;:18;;;5474:6;:11;;;5499:10;5262:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5262:257:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5262:257:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5262:257:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5262:257:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5262:257:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5540:4;5529:15;;1959:1:6;;;4053:1498:1;;;;;;;;;:::o;4833:95:6:-;2326:23;2338:10;2326:11;:23::i;:::-;:46;;;;2353:19;2361:10;2353:7;:19::i;:::-;2326:46;2318:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4901:20;4913:7;4901:11;:20::i;:::-;4833:95;:::o;2822:87::-;1882:19;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2884:18;2894:7;2884:9;:18::i;:::-;2822:87;:::o;3685:93::-;1882:19;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3750:21;3763:7;3750:12;:21::i;:::-;3685:93;:::o;5041:97::-;2012:19;2020:10;2012:7;:19::i;:::-;2004:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:23;5123:7;5108:14;:23::i;:::-;5041:97;:::o;3024:75::-;3066:26;3081:10;3066:14;:26::i;:::-;3024:75::o;4589:108::-;4646:4;4669:21;4682:7;4669:8;:12;;:21;;;;:::i;:::-;4662:28;;4589:108;;;:::o;3466:87::-;1882:19;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3528:18;3538:7;3528:9;:18::i;:::-;3466:87;:::o;5253:101::-;1882:19;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5322:25;5339:7;5322:16;:25::i;:::-;5253:101;:::o;4114:112::-;4173:4;4196:23;4211:7;4196:10;:14;;:23;;;;:::i;:::-;4189:30;;4114:112;;;:::oo;2794:1065::-;3043:13;2134:7;;;;;;;;;;;2133:8;2125:17;;;;;;1882:19:6;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3088:42:1;3076:54;;:8;:54;;;;3068:63;;;;;;3171:3;3155:5;3149:19;:25;3141:34;;;;;;3220:2;3199:10;3193:24;:29;3185:38;;;;;;3265:2;3247:7;3241:21;:26;3233:35;;;;;;3309:2;3292:6;3286:20;:25;3278:34;;;;;;3359:2;3336:12;3330:26;:31;3322:40;;;;;;3373:13;3389:3;3373:19;;3402:20;;:::i;:::-;3425:145;;;;;;;;3445:5;3425:145;;;;3464:10;3425:145;;;;3488:7;3425:145;;;;3509:6;3425:145;;;;3529:12;3425:145;;;;3555:5;3425:145;;;3402:168;;3581:11;:21;3593:8;3581:21;;;;;;;;;;;;;;;3608:6;3581:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3581:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3678:10;3631:196;;3656:8;3631:196;;;3702:5;3721:10;3745:7;3766:6;3786:12;3812:5;3631:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:196:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3848:4;3837:15;;1959:1:6;;2794:1065:1;;;;;;;;:::o;5771:1258::-;5872:18;5900:23;5933:20;5963:19;5992:25;2134:7;;;;;;;;;;;2133:8;2125:17;;;;;;1882:19:6;1890:10;1882:7;:19::i;:::-;1874:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6033:19:1;6041:10;6033:7;:19::i;:::-;6029:81;;;6090:8;6076:22;;:10;:22;;;;6068:31;;;;;;6029:81;6139:42;6127:54;;:8;:54;;;;6119:63;;;;;;6209:1;6200:5;:10;;:33;;;;;6223:10;6214:5;:19;;6200:33;6192:42;;;;;;6283:1;6252:11;:21;6264:8;6252:21;;;;;;;;;;;;;;;:28;;;;:32;6244:41;;;;;;6296:18;6317:3;6296:24;;6330:11;6344:24;6359:8;6344:14;:24::i;:::-;6330:38;;6378:20;;:::i;:::-;6414:9;6426:1;6414:13;;6409:169;6433:3;6429:1;:7;6409:169;;;6466:11;:21;6478:8;6466:21;;;;;;;;;;;;;;;6488:1;6466:24;;;;;;;;;;;;;;;;;;6457:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6523:5;6508:6;:11;;;:20;6504:64;;;6548:5;;6504:64;6438:3;;;;;;;6409:169;;;;6643:10;6593:259;;6621:8;6593:259;;;6667:6;:11;;;6692:6;:16;;;6722:6;:13;;;6749:6;:12;;;6775:6;:18;;;6807:6;:11;;;6832:10;6593:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6593:259:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6593:259:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6593:259:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6593:259:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6593:259:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6869:6;:11;;;6862:18;;6902:6;:16;;;6890:28;;6937:6;:13;;;6928:22;;6968:6;:12;;;6960:20;;7004:6;:18;;;6990:32;;1959:1:6;;;5771:1258:1;;;;;;;;:::o;3228:104:6:-;3283:4;3306:19;3317:7;3306:6;:10;;:19;;;;:::i;:::-;3299:26;;3228:104;;;:::o;779:200:7:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8250:206:1:-;8326:7;2134;;;;;;;;;;;2133:8;2125:17;;;;;;8363:42;8353:52;;:6;:52;;;;8345:61;;;;;;8423:11;:19;8435:6;8423:19;;;;;;;;;;;;;;;:26;;;;8416:33;;8250:206;;;:::o;7585:135:6:-;7643:22;7657:7;7643:6;:13;;:22;;;;:::i;:::-;7702:10;7680:33;;7693:7;7680:33;;;;;;;;;;;;7585:135;:::o;5514:139::-;5573:23;5588:7;5573:10;:14;;:23;;;;:::i;:::-;5635:10;5611:35;;5626:7;5611:35;;;;;;;;;;;;5514:139;:::o;6131:133::-;6188:21;6201:7;6188:8;:12;;:21;;;;:::i;:::-;6246:10;6224:33;;6237:7;6224:33;;;;;;;;;;;;6131:133;:::o;6727:128::-;6782:20;6794:7;6782;:11;;:20;;;;:::i;:::-;6837:10;6817:31;;6828:7;6817:31;;;;;;;;;;;;6727:128;:::o;6433:141::-;6493:24;6509:7;6493:8;:15;;:24;;;;:::i;:::-;6556:10;6532:35;;6547:7;6532:35;;;;;;;;;;;;6433:141;:::o;7017:127::-;7077:23;7092:7;7077;:14;;:23;;;;:::i;:::-;7129:7;7115:22;;;;;;;;;;;;7017:127;:::o;7301:::-;7356:19;7367:7;7356:6;:10;;:19;;;;:::i;:::-;7410:10;7390:31;;7401:7;7390:31;;;;;;;;;;;;7301:127;:::o;5825:147::-;5887:26;5905:7;5887:10;:17;;:26;;;;:::i;:::-;5954:10;5928:37;;5945:7;5928:37;;;;;;;;;;;;5825:147;:::o;510:180:7:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;274:8184:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\nimport \"./acceso/UserRoles.sol\";\n\n/**\n * @title Smart Contract de Registro de médicos.\n * @author Francisco Alemán\n * @notice Este contrato representa el registro de los médicos.\n * @dev El contrato hereda las funciones del contrato de roles\n */\n\ncontract MedicsRegister is UserRoles {\n\n     /**\n     * @title Representan los datos del médico.\n     */\n    struct Medico {\n        string name;\n        string specialty;\n        string cedula;\n        string email;\n        string hashPicture;\n        uint256 date;\n    }\n\n    /**\n     * @notice Mapea la dirección al médico..\n     */\n    mapping (address => Medico[]) public fileToMedic;\n\n     /**\n     * @notice Patrón de switch para encender/apagar\n     */\n    bool private stopped = false;\n\n     /**\n     * @dev Eventos que serán registrados en la blockchain.\n     */\n    event MedicsAdded(\n        address indexed _medic,\n        address indexed _admin,\n        string _name,\n        string _specialty,\n        string _cedula,\n        string _email,\n        string _hashPicture,\n        uint256 _date);\n\n    event MedicsUpdate(\n        address indexed _medic,\n        address indexed _admin,\n        string _name,\n        string _specialty,\n        string _cedula,\n        string _email,\n        string _hashPicture,\n        uint256 _date,\n        uint256 _queryDate);\n\n    event MedicsRetrieve(\n        address indexed _medic,\n        address indexed _admin,\n        string _name,\n        string _specialty,\n        string _cedula,\n        string  _email,\n        string  _hashPicture,\n        uint256 _date,\n        uint256 _queryDate);\n\n    event MedicsDelete(\n        address indexed _medic,\n        address indexed _admin,\n        string _hashPicture,\n        uint256 _date);\n\n    /**\n    * @dev Indica que se ha puesto el contrato en pausa.\n    * @param _admin Un administrador\n    * @param _stop Indica cuando hay una pausa o una reanudación.\n    */\n    event LogSwitchStop(\n        address indexed _admin,\n        bool _stop\n    );\n\n    /**\n    * @dev Previene de ejecución del contrato\n    */\n    modifier nonlyStopped {\n        require(!stopped);\n        _;\n    }\n\n    /**\n    * @notice Pausar el contrato\n    * Se detiene el contrato bajo ciertas condiciones.\n    * Sera útil cuando nuevos errores sean descubiertos.\n    * @param _stop Switch del contrado de encendido/apagado\n    */\n    function emergencyStop(bool _stop) public onlyAdmin {\n        stopped = _stop;\n        emit LogSwitchStop(msg.sender, _stop);\n    }\n\n     /**\n   * @dev Función para agregar un médico. Esta función es realizada por un administrador.\n   * @param _account a\n   * @param _name a\n   * @param _specialty a\n   * @param _cedula a\n   * @param _email a\n   * @param _hashPicture a\n   * @return _success a\n   */\n    function addMedics(\n        address _account,\n        string memory _name,\n        string memory _specialty,\n        string memory _cedula,\n        string memory _email,\n        string memory _hashPicture)\n    public nonlyStopped onlyAdmin returns (bool _success) {\n        require(_account != 0x0000000000000000000000000000000000000000);\n        require(bytes(_name).length < 128);\n        require(bytes(_specialty).length < 30);\n        require(bytes(_cedula).length < 30);\n        require(bytes(_email).length < 30);\n        require(bytes(_hashPicture).length < 30);\n\n        uint256 _date = now;\n        Medico memory medico = Medico(\n            _name,\n            _specialty,\n            _cedula,\n            _email,\n            _hashPicture,\n            _date\n        );\n\n        fileToMedic[_account].push(medico);\n\n        emit MedicsAdded(\n            _account,\n            msg.sender,\n            _name,\n            _specialty,\n            _cedula,\n            _email,\n            _hashPicture,\n            _date\n        );\n        _success = true;\n    }\n\n    /**\n    * @notice Returns el Medico en el índice del propietario de la dirección.\n    * @dev Controlado por el switch\n    * @param _account Cuenta del médico\n    * @return a\n    */\n    function updateMedics(\n        address _account,\n        string memory _name,\n        string memory _specialty,\n        string memory _cedula,\n        string memory _email,\n        string memory _hashPicture,\n        uint256 _date)\n    public nonlyStopped onlyAdmin returns (bool _success) {\n        require(_account != 0x0000000000000000000000000000000000000000);\n        require(bytes(_name).length < 128);\n        require(bytes(_specialty).length < 30);\n        require(bytes(_cedula).length < 30);\n        require(bytes(_email).length < 30);\n        require(bytes(_hashPicture).length < 30);\n        require(_date >= 0 && _date <= 2**256 - 1);\n        require(fileToMedic[_account].length > 0);\n\n        uint256 _queryDate = now;\n        uint256 len = getMedicsCount(_account);\n        Medico memory medico;\n        for (uint256 i = 0; i < len; i++) {\n            medico = fileToMedic[_account][i];\n            if (medico.date == _date) {\n                break;\n            }\n        }\n\n        medico.name = _name;\n        medico.specialty = _specialty;\n        medico.cedula = _cedula;\n        medico.email = _email;\n        medico.hashPicture = _hashPicture;\n        medico.date = _date;\n\n        emit MedicsUpdate(\n            _account,\n            msg.sender,\n            medico.name,\n            medico.specialty,\n            medico.cedula,\n            medico.email,\n            medico.hashPicture,\n            medico.date,\n            _queryDate\n        );\n        _success = true;\n    }\n\n    /**\n    * @notice Returns el Medico en el índice del propietario de la dirección.\n    * @dev Controlado por el switch\n    * @param _account The owner address\n    * @return _date The uploaded timestamp\n    */\n    function viewMedics(address _account, uint256 _date) public nonlyStopped onlyAdmin returns (\n        string memory name,\n        string memory specialty,\n        string memory cedula,\n        string memory email,\n        string memory hashPicture) {\n        if (isAdmin(msg.sender)) {\n            require(msg.sender != _account);\n        }\n        require(_account != 0x0000000000000000000000000000000000000000);\n        require(_date >= 0 && _date <= 2**256 - 1);\n        require(fileToMedic[_account].length > 0);\n\n        uint256 _queryDate = now;\n        uint256 len = getMedicsCount(_account);\n        Medico memory medico;\n\n        for (uint256 i = 0; i < len; i++) {\n            medico = fileToMedic[_account][i];\n            if (medico.date == _date) {\n                break;\n            }\n        }\n\n        emit MedicsRetrieve(\n            _account,\n            msg.sender,\n            medico.name,\n            medico.specialty,\n            medico.cedula,\n            medico.email,\n            medico.hashPicture,\n            medico.date,\n            _queryDate\n        );\n        name = medico.name;\n        specialty = medico.specialty;\n        cedula = medico.cedula;\n        email = medico.email;\n        hashPicture = medico.hashPicture;\n    }\n\n    /**\n    * @notice Returns el medico en el índice del propietario de la dirección.\n    * @dev Controlado por el switch\n    * @param _account The owner address\n    * @return _date The uploaded timestamp\n    */\n    function deleteMedics(address _account, uint256 _date) public nonlyStopped onlyAdmin returns (bool _success) {\n        require(_account != 0x0000000000000000000000000000000000000000);\n        require(_date >= 0 && _date <= 2**256 - 1);\n        require(fileToMedic[_account].length > 0);\n\n        uint256 _queryDate = now;\n        uint256 len = getMedicsCount(_account);\n\n        for (uint256 i = 0; i < len; i++) {\n            if (fileToMedic[_account][i].date == _date) {\n                emit MedicsDelete(\n                    _account,\n                    msg.sender,\n                    fileToMedic[_account][i].hashPicture,\n                    _queryDate\n                );\n                delete fileToMedic[_account][i];\n                break;\n            }\n        }\n        _success = true;\n    }\n\n    /**\n    * @notice Retorna el numero de medicos de esa direccion\n    * @dev Controlado por el switch\n    * @param _medic El dueño de la dirección\n    * @return Retorna el médico\n    */\n    function getMedicsCount(address _medic) internal view nonlyStopped returns (uint256) {\n        require(_medic != 0x0000000000000000000000000000000000000000);\n        return fileToMedic[_medic].length;\n    }\n}\n",
  "sourcePath": "/home/seno/Maestría/Distribuidos/Backend/backend/contracts/MedicsRegister.sol",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAdm\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountRen\",\"type\":\"address\"}],\"name\":\"AdminRenounce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAssistant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedAssistant\",\"type\":\"address\"}],\"name\":\"AssistantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAssistant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedAssistant\",\"type\":\"address\"}],\"name\":\"AssistantRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"LogSwitchStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedMed\",\"type\":\"address\"}],\"name\":\"MedicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedMed\",\"type\":\"address\"}],\"name\":\"MedicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"medRen\",\"type\":\"address\"}],\"name\":\"MedicRenounce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"MedicsDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsRetrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_medic\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_queryDate\",\"type\":\"uint256\"}],\"name\":\"MedicsUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoAddedPat\",\"type\":\"address\"}],\"name\":\"PatientAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPat\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoRemovedPat\",\"type\":\"address\"}],\"name\":\"PatientRemoved\",\"type\":\"event\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAssistant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"}],\"name\":\"addMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"deleteMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stop\",\"type\":\"bool\"}],\"name\":\"emergencyStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fileToMedic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAssistant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMedic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAssistant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMedic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hashPicture\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"updateMedics\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"viewMedics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cedula\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hashPicture\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Francisco Alem\\u00e1n\",\"details\":\"El contrato hereda las funciones del contrato de roles\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar admin\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como admin\"}},\"addAssistant(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar asistente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como asistente\"}},\"addMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como m\\u00e9dico\"}},\"addMedics(address,string,string,string,string,string)\":{\"details\":\"Funci\\u00f3n para agregar un m\\u00e9dico. Esta funci\\u00f3n es realizada por un administrador.\",\"params\":{\"_account\":\"a\",\"_cedula\":\"a\",\"_email\":\"a\",\"_hashPicture\":\"a\",\"_name\":\"a\",\"_specialty\":\"a\"},\"return\":\"_success a\"},\"addPatient(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para asignar paciente\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 asignada como paciente\"}},\"deleteMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"},\"emergencyStop(bool)\":{\"params\":{\"_stop\":\"Switch del contrado de encendido/apagado\"}},\"isAdmin(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de admin\"},\"isAssistant(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de asistente\"},\"isMedic(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de m\\u00e9dico\"},\"isPatient(address)\":{\"params\":{\"account\":\"Cuenta donde se validar\\u00e1 el rol.\"},\"return\":\"true si la cuenta tiene rol de paciente\"},\"removeAssistant(address)\":{\"details\":\"Remover a rol de asistente. Quien invoque al contrato no volver\\u00e1 a ser asistente.\"},\"removeMedic(address)\":{\"details\":\"Funci\\u00f3n p\\u00fablica para remover m\\u00e9dico\",\"params\":{\"account\":\"Cuenta que ser\\u00e1 removida de m\\u00e9dico\"}},\"removePatient(address)\":{\"details\":\"Remover a rol de paciente. Quien invoque al contrato no volver\\u00e1 a ser paciente.\"},\"renounceAdmin()\":{\"details\":\"Renunciar a rol de administrador. Quien inque al contrato no volver\\u00e1 a ser admin.\"},\"renounceMedic()\":{\"details\":\"Renunciar a rol de personal m\\u00e9dico. Quien invoque al contrato no volver\\u00e1 a ser m\\u00e9dico.\"},\"updateMedics(address,string,string,string,string,string,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"Cuenta del m\\u00e9dico\"},\"return\":\"a\"},\"viewMedics(address,uint256)\":{\"details\":\"Controlado por el switch\",\"params\":{\"_account\":\"The owner address\"},\"return\":\"_date The uploaded timestamp\"}},\"title\":\"Smart Contract de Registro de m\\u00e9dicos.\"},\"userdoc\":{\"methods\":{\"deleteMedics(address,uint256)\":{\"notice\":\"Returns el medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"emergencyStop(bool)\":{\"notice\":\"Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera \\u00fatil cuando nuevos errores sean descubiertos.\"},\"updateMedics(address,string,string,string,string,string,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"},\"viewMedics(address,uint256)\":{\"notice\":\"Returns el Medico en el \\u00edndice del propietario de la direcci\\u00f3n.\"}},\"notice\":\"Este contrato representa el registro de los m\\u00e9dicos.\"}},\"settings\":{\"compilationTarget\":{\"/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/MedicsRegister.sol\":\"MedicsRegister\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/MedicsRegister.sol\":{\"keccak256\":\"0x07a79fd0d66d14dc89c400c95804b58fd94490c6de102de86be2bf6bb211d8c1\",\"urls\":[\"bzz-raw://63822609883d6182a5c12cd75b9e561e5fc6ce6af41edb0c1497583fad9ab177\",\"dweb:/ipfs/QmNrRnU8NmZaFeMaMfQS7McJQ5mDzxwJ4bmKFgAq4SQZof\"]},\"/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/acceso/UserRoles.sol\":{\"keccak256\":\"0xc9e66aacae0c6ec201d49bd5c77f854b916a7158629f0d43c18110771f5a1d1f\",\"urls\":[\"bzz-raw://1af0ed62b654769f0755b68dec1fd5c3729e79a7655865af26eda92e312e6e3c\",\"dweb:/ipfs/Qmct8qtuHzcP3FuSXPfQjw2k7UFtCzU8whPjovQbDWn2hi\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600560006101000a81548160ff02191690831515021790555062000030336200003660201b60201c565b62000272565b62000051816000620000ae60201b6200379e1790919060201c565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b620000c082826200019260201b60201c565b1562000134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200021b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062003d276022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613aa580620002826000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637d0d6257116100ad578063c6584bb811610071578063c6584bb8146107ba578063d6aac86914610816578063e765e73514610a94578063ea04f68f14610de3578063eae3ef8a1461105a57610121565b80637d0d6257146106885780638bad0c0a146106cc5780638f9c79ed146106d6578063b0397ff814610732578063b8792f0b1461077657610121565b80635c8b67df116100f45780635c8b67df1461021f57806362499d5c146102635780636d263ceb146105bc57806370480275146106005780637d01dbc21461064457610121565b80630ac62e021461012357806324d7806c1461015357806333645874146101af57806333dc0abd14610215575b005b6101516004803603602081101561013957600080fd5b810190808035151590602001909291905050506110b6565b005b6101956004803603602081101561016957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611183565b604051808215151515815260200191505060405180910390f35b6101fb600480360360408110156101c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a0565b604051808215151515815260200191505060405180910390f35b61021d61157b565b005b6102616004803603602081101561023557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e4565b005b6105a2600480360360e081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b657600080fd5b8201836020820111156102c857600080fd5b803590602001918460018302840111640100000000831117156102ea57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034d57600080fd5b82018360208201111561035f57600080fd5b8035906020019184600183028401116401000000008311171561038157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184600183028401116401000000008311171561041857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561047b57600080fd5b82018360208201111561048d57600080fd5b803590602001918460018302840111640100000000831117156104af57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561051257600080fd5b82018360208201111561052457600080fd5b8035906020019184600183028401116401000000008311171561054657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061164e565b604051808215151515815260200191505060405180910390f35b6105fe600480360360208110156105d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea0565b005b6106426004803603602081101561061657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f1a565b005b6106866004803603602081101561065a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f84565b005b6106ca6004803603602081101561069e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fee565b005b6106d4612058565b005b610718600480360360208110156106ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612063565b604051808215151515815260200191505060405180910390f35b6107746004803603602081101561074857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612080565b005b6107b86004803603602081101561078c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120ea565b005b6107fc600480360360208110156107d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612154565b604051808215151515815260200191505060405180910390f35b6108626004803603604081101561082c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612171565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156108b857808201518184015260208101905061089d565b50505050905090810190601f1680156108e55780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b8381101561091e578082015181840152602081019050610903565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015610984578082015181840152602081019050610969565b50505050905090810190601f1680156109b15780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156109ea5780820151818401526020810190506109cf565b50505050905090810190601f168015610a175780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610a50578082015181840152602081019050610a35565b50505050905090810190601f168015610a7d5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b610dc9600480360360c0811015610aaa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ae757600080fd5b820183602082011115610af957600080fd5b80359060200191846001830284011164010000000083111715610b1b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b7e57600080fd5b820183602082011115610b9057600080fd5b80359060200191846001830284011164010000000083111715610bb257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c1557600080fd5b820183602082011115610c2757600080fd5b80359060200191846001830284011164010000000083111715610c4957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610cac57600080fd5b820183602082011115610cbe57600080fd5b80359060200191846001830284011164010000000083111715610ce057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d4357600080fd5b820183602082011115610d5557600080fd5b80359060200191846001830284011164010000000083111715610d7757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124bf565b604051808215151515815260200191505060405180910390f35b610e2f60048036036040811015610df957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612994565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015610e7f578082015181840152602081019050610e64565b50505050905090810190601f168015610eac5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b83811015610f4b578082015181840152602081019050610f30565b50505050905090810190601f168015610f785780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015610fb1578082015181840152602081019050610f96565b50505050905090810190601f168015610fde5780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b83811015611017578082015181840152602081019050610ffc565b50505050905090810190601f1680156110445780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61109c6004803603602081101561107057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131d5565b604051808215151515815260200191505060405180910390f35b6110bf33611183565b611114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b80600560006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b60006111998260006131f290919063ffffffff16565b9050919050565b6000600560009054906101000a900460ff16156111bc57600080fd5b6111c533611183565b61121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561125457600080fd5b6000821015801561128557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61128e57600080fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116112dd57600080fd5b600042905060006112ed856132d0565b905060008090505b8181101561156e5784600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061134857fe5b9060005260206000209060060201600501541415611561573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106113f957fe5b906000526020600020906006020160040186604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561149a5780601f1061146f5761010080835404028352916020019161149a565b820191906000526020600020905b81548152906001019060200180831161147d57829003601f168201915b5050935050505060405180910390a3600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106114f357fe5b9060005260206000209060060201600080820160006115129190613879565b6001820160006115229190613879565b6002820160006115329190613879565b6003820160006115429190613879565b6004820160006115529190613879565b6005820160009055505061156e565b80806001019150506112f5565b5060019250505092915050565b611584336131d5565b6115d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d6602d913960400191505060405180910390fd5b6115e233613370565b565b6115ed33611183565b611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b61164b816133e1565b50565b6000600560009054906101000a900460ff161561166a57600080fd5b61167333611183565b6116c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561170257600080fd5b608087511061171057600080fd5b601e86511061171e57600080fd5b601e85511061172c57600080fd5b601e84511061173a57600080fd5b601e83511061174857600080fd5b6000821015801561177957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61178257600080fd5b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116117d157600080fd5b600042905060006117e18a6132d0565b90506117eb6138c1565b60008090505b82811015611bb057600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061184357fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118f55780601f106118ca576101008083540402835291602001916118f5565b820191906000526020600020905b8154815290600101906020018083116118d857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119975780601f1061196c57610100808354040283529160200191611997565b820191906000526020600020905b81548152906001019060200180831161197a57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a395780601f10611a0e57610100808354040283529160200191611a39565b820191906000526020600020905b815481529060010190602001808311611a1c57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611adb5780601f10611ab057610100808354040283529160200191611adb565b820191906000526020600020905b815481529060010190602001808311611abe57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b7d5780601f10611b5257610100808354040283529160200191611b7d565b820191906000526020600020905b815481529060010190602001808311611b6057829003601f168201915b505050505081526020016005820154815250509150858260a001511415611ba357611bb0565b80806001019150506117f1565b50898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a00181815250503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015611cb2578082015181840152602081019050611c97565b50505050905090810190601f168015611cdf5780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015611d18578082015181840152602081019050611cfd565b50505050905090810190601f168015611d455780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b83811015611d7e578082015181840152602081019050611d63565b50505050905090810190601f168015611dab5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015611de4578082015181840152602081019050611dc9565b50505050905090810190601f168015611e115780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015611e4a578082015181840152602081019050611e2f565b50505050905090810190601f168015611e775780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a360019350505050979650505050505050565b611ea933612154565b80611eb95750611eb8336131d5565b5b611f0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061399d6039913960400191505060405180910390fd5b611f1781613452565b50565b611f2333611183565b611f78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b611f81816134c3565b50565b611f8d33611183565b611fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b611feb81613370565b50565b611ff7336131d5565b61204c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d6602d913960400191505060405180910390fd5b61205581613534565b50565b612061336135a5565b565b60006120798260026131f290919063ffffffff16565b9050919050565b61208933611183565b6120de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b6120e7816135ff565b50565b6120f333611183565b612148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b61215181613670565b50565b600061216a8260036131f290919063ffffffff16565b9050919050565b6004602052816000526040600020818154811061218a57fe5b906000526020600020906006020160009150915050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122375780601f1061220c57610100808354040283529160200191612237565b820191906000526020600020905b81548152906001019060200180831161221a57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122d55780601f106122aa576101008083540402835291602001916122d5565b820191906000526020600020905b8154815290600101906020018083116122b857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123735780601f1061234857610100808354040283529160200191612373565b820191906000526020600020905b81548152906001019060200180831161235657829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124115780601f106123e657610100808354040283529160200191612411565b820191906000526020600020905b8154815290600101906020018083116123f457829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124af5780601f10612484576101008083540402835291602001916124af565b820191906000526020600020905b81548152906001019060200180831161249257829003601f168201915b5050505050908060050154905086565b6000600560009054906101000a900460ff16156124db57600080fd5b6124e433611183565b612539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561257357600080fd5b608086511061258157600080fd5b601e85511061258f57600080fd5b601e84511061259d57600080fd5b601e8351106125ab57600080fd5b601e8251106125b957600080fd5b60004290506125c66138c1565b6040518060c00160405280898152602001888152602001878152602001868152602001858152602001838152509050600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001908051906020019061267c9291906138f7565b5060208201518160010190805190602001906126999291906138f7565b5060408201518160020190805190602001906126b69291906138f7565b5060608201518160030190805190602001906126d39291906138f7565b5060808201518160040190805190602001906126f09291906138f7565b5060a082015181600501555050503373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156127a957808201518184015260208101905061278e565b50505050905090810190601f1680156127d65780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b8381101561280f5780820151818401526020810190506127f4565b50505050905090810190601f16801561283c5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561287557808201518184015260208101905061285a565b50505050905090810190601f1680156128a25780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156128db5780820151818401526020810190506128c0565b50505050905090810190601f1680156129085780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015612941578082015181840152602081019050612926565b50505050905090810190601f16801561296e5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b6060806060806060600560009054906101000a900460ff16156129b657600080fd5b6129bf33611183565b612a14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b612a1d33611183565b15612a5c578673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612a5b57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415612a9657600080fd5b60008610158015612ac757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611155b612ad057600080fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011612b1f57600080fd5b60004290506000612b2f896132d0565b9050612b396138c1565b60008090505b82811015612efe57600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110612b9157fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c435780601f10612c1857610100808354040283529160200191612c43565b820191906000526020600020905b815481529060010190602001808311612c2657829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ce55780601f10612cba57610100808354040283529160200191612ce5565b820191906000526020600020905b815481529060010190602001808311612cc857829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d875780601f10612d5c57610100808354040283529160200191612d87565b820191906000526020600020905b815481529060010190602001808311612d6a57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e295780601f10612dfe57610100808354040283529160200191612e29565b820191906000526020600020905b815481529060010190602001808311612e0c57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ecb5780601f10612ea057610100808354040283529160200191612ecb565b820191906000526020600020905b815481529060010190602001808311612eae57829003601f168201915b505050505081526020016005820154815250509150898260a001511415612ef157612efe565b8080600101915050612b3f565b503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015612fc9578082015181840152602081019050612fae565b50505050905090810190601f168015612ff65780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b8381101561302f578082015181840152602081019050613014565b50505050905090810190601f16801561305c5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561309557808201518184015260208101905061307a565b50505050905090810190601f1680156130c25780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156130fb5780820151818401526020810190506130e0565b50505050905090810190601f1680156131285780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015613161578082015181840152602081019050613146565b50505050905090810190601f16801561318e5780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193505050509295509295909350565b60006131eb8260016131f290919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613a246022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560009054906101000a900460ff16156132ec57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561332657600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6133848160016136e190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b6133f581600361379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec7060405160405180910390a350565b61346681600261379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf60405160405180910390a350565b6134d781600061379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b6135488160026136e190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b6135b98160006136e190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd60405160405180910390a250565b61361381600161379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b6136848160036136e190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af60405160405180910390a350565b6136eb82826131f2565b613740576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a036021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6137a882826131f2565b1561381b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b50805460018160011615610100020316600290046000825580601f1061389f57506138be565b601f0160209004906000526020600020908101906138bd9190613977565b5b50565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061393857805160ff1916838001178555613966565b82800160010185558215613966579182015b8281111561396557825182559160200191906001019061394a565b5b5090506139739190613977565b5090565b61399991905b8082111561399557600081600090555060010161397d565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284173697374656e7465206f206dc3a96469636f294e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e29a265627a7a72315820b2dbd5dc8eb3cd03ca8fae1e44984ab0398e720ca81fde803dcf7186a02fd00a64736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80637d0d6257116100ad578063c6584bb811610071578063c6584bb8146107ba578063d6aac86914610816578063e765e73514610a94578063ea04f68f14610de3578063eae3ef8a1461105a57610121565b80637d0d6257146106885780638bad0c0a146106cc5780638f9c79ed146106d6578063b0397ff814610732578063b8792f0b1461077657610121565b80635c8b67df116100f45780635c8b67df1461021f57806362499d5c146102635780636d263ceb146105bc57806370480275146106005780637d01dbc21461064457610121565b80630ac62e021461012357806324d7806c1461015357806333645874146101af57806333dc0abd14610215575b005b6101516004803603602081101561013957600080fd5b810190808035151590602001909291905050506110b6565b005b6101956004803603602081101561016957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611183565b604051808215151515815260200191505060405180910390f35b6101fb600480360360408110156101c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111a0565b604051808215151515815260200191505060405180910390f35b61021d61157b565b005b6102616004803603602081101561023557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e4565b005b6105a2600480360360e081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b657600080fd5b8201836020820111156102c857600080fd5b803590602001918460018302840111640100000000831117156102ea57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034d57600080fd5b82018360208201111561035f57600080fd5b8035906020019184600183028401116401000000008311171561038157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184600183028401116401000000008311171561041857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561047b57600080fd5b82018360208201111561048d57600080fd5b803590602001918460018302840111640100000000831117156104af57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561051257600080fd5b82018360208201111561052457600080fd5b8035906020019184600183028401116401000000008311171561054657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505061164e565b604051808215151515815260200191505060405180910390f35b6105fe600480360360208110156105d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea0565b005b6106426004803603602081101561061657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f1a565b005b6106866004803603602081101561065a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f84565b005b6106ca6004803603602081101561069e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fee565b005b6106d4612058565b005b610718600480360360208110156106ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612063565b604051808215151515815260200191505060405180910390f35b6107746004803603602081101561074857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612080565b005b6107b86004803603602081101561078c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120ea565b005b6107fc600480360360208110156107d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612154565b604051808215151515815260200191505060405180910390f35b6108626004803603604081101561082c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612171565b60405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156108b857808201518184015260208101905061089d565b50505050905090810190601f1680156108e55780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b8381101561091e578082015181840152602081019050610903565b50505050905090810190601f16801561094b5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b83811015610984578082015181840152602081019050610969565b50505050905090810190601f1680156109b15780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156109ea5780820151818401526020810190506109cf565b50505050905090810190601f168015610a175780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015610a50578082015181840152602081019050610a35565b50505050905090810190601f168015610a7d5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b610dc9600480360360c0811015610aaa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ae757600080fd5b820183602082011115610af957600080fd5b80359060200191846001830284011164010000000083111715610b1b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b7e57600080fd5b820183602082011115610b9057600080fd5b80359060200191846001830284011164010000000083111715610bb257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610c1557600080fd5b820183602082011115610c2757600080fd5b80359060200191846001830284011164010000000083111715610c4957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610cac57600080fd5b820183602082011115610cbe57600080fd5b80359060200191846001830284011164010000000083111715610ce057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d4357600080fd5b820183602082011115610d5557600080fd5b80359060200191846001830284011164010000000083111715610d7757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124bf565b604051808215151515815260200191505060405180910390f35b610e2f60048036036040811015610df957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612994565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015610e7f578082015181840152602081019050610e64565b50505050905090810190601f168015610eac5780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b83811015610f4b578082015181840152602081019050610f30565b50505050905090810190601f168015610f785780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015610fb1578082015181840152602081019050610f96565b50505050905090810190601f168015610fde5780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b83811015611017578082015181840152602081019050610ffc565b50505050905090810190601f1680156110445780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61109c6004803603602081101561107057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131d5565b604051808215151515815260200191505060405180910390f35b6110bf33611183565b611114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b80600560006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e82604051808215151515815260200191505060405180910390a250565b60006111998260006131f290919063ffffffff16565b9050919050565b6000600560009054906101000a900460ff16156111bc57600080fd5b6111c533611183565b61121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561125457600080fd5b6000821015801561128557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61128e57600080fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116112dd57600080fd5b600042905060006112ed856132d0565b905060008090505b8181101561156e5784600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061134857fe5b9060005260206000209060060201600501541415611561573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106113f957fe5b906000526020600020906006020160040186604051808060200183815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561149a5780601f1061146f5761010080835404028352916020019161149a565b820191906000526020600020905b81548152906001019060200180831161147d57829003601f168201915b5050935050505060405180910390a3600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106114f357fe5b9060005260206000209060060201600080820160006115129190613879565b6001820160006115229190613879565b6002820160006115329190613879565b6003820160006115429190613879565b6004820160006115529190613879565b6005820160009055505061156e565b80806001019150506112f5565b5060019250505092915050565b611584336131d5565b6115d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d6602d913960400191505060405180910390fd5b6115e233613370565b565b6115ed33611183565b611642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b61164b816133e1565b50565b6000600560009054906101000a900460ff161561166a57600080fd5b61167333611183565b6116c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561170257600080fd5b608087511061171057600080fd5b601e86511061171e57600080fd5b601e85511061172c57600080fd5b601e84511061173a57600080fd5b601e83511061174857600080fd5b6000821015801561177957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211155b61178257600080fd5b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050116117d157600080fd5b600042905060006117e18a6132d0565b90506117eb6138c1565b60008090505b82811015611bb057600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061184357fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118f55780601f106118ca576101008083540402835291602001916118f5565b820191906000526020600020905b8154815290600101906020018083116118d857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119975780601f1061196c57610100808354040283529160200191611997565b820191906000526020600020905b81548152906001019060200180831161197a57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a395780601f10611a0e57610100808354040283529160200191611a39565b820191906000526020600020905b815481529060010190602001808311611a1c57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611adb5780601f10611ab057610100808354040283529160200191611adb565b820191906000526020600020905b815481529060010190602001808311611abe57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b7d5780601f10611b5257610100808354040283529160200191611b7d565b820191906000526020600020905b815481529060010190602001808311611b6057829003601f168201915b505050505081526020016005820154815250509150858260a001511415611ba357611bb0565b80806001019150506117f1565b50898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a00181815250503373ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015611cb2578082015181840152602081019050611c97565b50505050905090810190601f168015611cdf5780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b83811015611d18578082015181840152602081019050611cfd565b50505050905090810190601f168015611d455780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b83811015611d7e578082015181840152602081019050611d63565b50505050905090810190601f168015611dab5780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b83811015611de4578082015181840152602081019050611dc9565b50505050905090810190601f168015611e115780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015611e4a578082015181840152602081019050611e2f565b50505050905090810190601f168015611e775780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a360019350505050979650505050505050565b611ea933612154565b80611eb95750611eb8336131d5565b5b611f0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061399d6039913960400191505060405180910390fd5b611f1781613452565b50565b611f2333611183565b611f78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b611f81816134c3565b50565b611f8d33611183565b611fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b611feb81613370565b50565b611ff7336131d5565b61204c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806139d6602d913960400191505060405180910390fd5b61205581613534565b50565b612061336135a5565b565b60006120798260026131f290919063ffffffff16565b9050919050565b61208933611183565b6120de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b6120e7816135ff565b50565b6120f333611183565b612148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b61215181613670565b50565b600061216a8260036131f290919063ffffffff16565b9050919050565b6004602052816000526040600020818154811061218a57fe5b906000526020600020906006020160009150915050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122375780601f1061220c57610100808354040283529160200191612237565b820191906000526020600020905b81548152906001019060200180831161221a57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122d55780601f106122aa576101008083540402835291602001916122d5565b820191906000526020600020905b8154815290600101906020018083116122b857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123735780601f1061234857610100808354040283529160200191612373565b820191906000526020600020905b81548152906001019060200180831161235657829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124115780601f106123e657610100808354040283529160200191612411565b820191906000526020600020905b8154815290600101906020018083116123f457829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124af5780601f10612484576101008083540402835291602001916124af565b820191906000526020600020905b81548152906001019060200180831161249257829003601f168201915b5050505050908060050154905086565b6000600560009054906101000a900460ff16156124db57600080fd5b6124e433611183565b612539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561257357600080fd5b608086511061258157600080fd5b601e85511061258f57600080fd5b601e84511061259d57600080fd5b601e8351106125ab57600080fd5b601e8251106125b957600080fd5b60004290506125c66138c1565b6040518060c00160405280898152602001888152602001878152602001868152602001858152602001838152509050600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001908051906020019061267c9291906138f7565b5060208201518160010190805190602001906126999291906138f7565b5060408201518160020190805190602001906126b69291906138f7565b5060608201518160030190805190602001906126d39291906138f7565b5060808201518160040190805190602001906126f09291906138f7565b5060a082015181600501555050503373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a08a8a8a8a8a8960405180806020018060200180602001806020018060200187815260200186810386528c818151815260200191508051906020019080838360005b838110156127a957808201518184015260208101905061278e565b50505050905090810190601f1680156127d65780820380516001836020036101000a031916815260200191505b5086810385528b818151815260200191508051906020019080838360005b8381101561280f5780820151818401526020810190506127f4565b50505050905090810190601f16801561283c5780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561287557808201518184015260208101905061285a565b50505050905090810190601f1680156128a25780820380516001836020036101000a031916815260200191505b50868103835289818151815260200191508051906020019080838360005b838110156128db5780820151818401526020810190506128c0565b50505050905090810190601f1680156129085780820380516001836020036101000a031916815260200191505b50868103825288818151815260200191508051906020019080838360005b83811015612941578082015181840152602081019050612926565b50505050905090810190601f16801561296e5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a36001925050509695505050505050565b6060806060806060600560009054906101000a900460ff16156129b657600080fd5b6129bf33611183565b612a14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613a46602b913960400191505060405180910390fd5b612a1d33611183565b15612a5c578673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612a5b57600080fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415612a9657600080fd5b60008610158015612ac757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8611155b612ad057600080fd5b6000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011612b1f57600080fd5b60004290506000612b2f896132d0565b9050612b396138c1565b60008090505b82811015612efe57600460008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110612b9157fe5b90600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c435780601f10612c1857610100808354040283529160200191612c43565b820191906000526020600020905b815481529060010190602001808311612c2657829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ce55780601f10612cba57610100808354040283529160200191612ce5565b820191906000526020600020905b815481529060010190602001808311612cc857829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d875780601f10612d5c57610100808354040283529160200191612d87565b820191906000526020600020905b815481529060010190602001808311612d6a57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e295780601f10612dfe57610100808354040283529160200191612e29565b820191906000526020600020905b815481529060010190602001808311612e0c57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ecb5780601f10612ea057610100808354040283529160200191612ecb565b820191906000526020600020905b815481529060010190602001808311612eae57829003601f168201915b505050505081526020016005820154815250509150898260a001511415612ef157612efe565b8080600101915050612b3f565b503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232836000015184602001518560400151866060015187608001518860a001518b60405180806020018060200180602001806020018060200188815260200187815260200186810386528d818151815260200191508051906020019080838360005b83811015612fc9578082015181840152602081019050612fae565b50505050905090810190601f168015612ff65780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b8381101561302f578082015181840152602081019050613014565b50505050905090810190601f16801561305c5780820380516001836020036101000a031916815260200191505b5086810384528b818151815260200191508051906020019080838360005b8381101561309557808201518184015260208101905061307a565b50505050905090810190601f1680156130c25780820380516001836020036101000a031916815260200191505b5086810383528a818151815260200191508051906020019080838360005b838110156130fb5780820151818401526020810190506130e0565b50505050905090810190601f1680156131285780820380516001836020036101000a031916815260200191505b50868103825289818151815260200191508051906020019080838360005b83811015613161578082015181840152602081019050613146565b50505050905090810190601f16801561318e5780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390a380600001519750806020015196508060400151955080606001519450806080015193505050509295509295909350565b60006131eb8260016131f290919063ffffffff16565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613a246022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600560009054906101000a900460ff16156132ec57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561332657600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6133848160016136e190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc60405160405180910390a350565b6133f581600361379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec7060405160405180910390a350565b61346681600261379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf60405160405180910390a350565b6134d781600061379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b60405160405180910390a350565b6135488160026136e190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed94060405160405180910390a350565b6135b98160006136e190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd60405160405180910390a250565b61361381600161379e90919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a60405160405180910390a350565b6136848160036136e190919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af60405160405180910390a350565b6136eb82826131f2565b613740576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613a036021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6137a882826131f2565b1561381b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b50805460018160011615610100020316600290046000825580601f1061389f57506138be565b601f0160209004906000526020600020908101906138bd9190613977565b5b50565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061393857805160ff1916838001178555613966565b82800160010185558215613966579182015b8281111561396557825182559160200191906001019061394a565b5b5090506139739190613977565b5090565b61399991905b8082111561399557600081600090555060010161397d565b5090565b9056fe4e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284173697374656e7465206f206dc3a96469636f294e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f284dc3a96469636f29526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734e6f207365206375656e746120636f6e20656c20726f6c2065737065636966696361646f2841646d696e29a265627a7a72315820b2dbd5dc8eb3cd03ca8fae1e44984ab0398e720ca81fde803dcf7186a02fd00a64736f6c63430005100032",
  "sourceMap": "284:8738:1:-;;;798:5;775:28;;;;;;;;;;;;;;;;;;;;1752:21:6;1762:10;1752:9;;;:21;;:::i;:::-;284:8738:1;;7228:131:6;7284:20;7296:7;7284;:11;;;;;;:20;;;;:::i;:::-;7340:10;7320:31;;7331:7;7320:31;;;;;;;;;;;;7228:131;:::o;260:175:7:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;284:8738:1:-;;;;;;;",
  "deployedSourceMap": "284:8738:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:8738:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2754:134:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;2952:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2952:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7780:825:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7780:825:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4311:85:6;;;:::i;:::-;;4791:97;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4791:97:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;4481:1545:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4481:1545:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4481:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4481:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4481:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4481:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4481:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4481:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4481:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4481:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4481:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4481:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4481:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4481:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4481:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4481:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4481:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4481:1545:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4481:1545:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4481:1545:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4481:1545:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4481:1545:1;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5276:97:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5276:97:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;3195:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3195:89:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;4089:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4089:95:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;5491:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5491:99:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;3404:77;;;:::i;:::-;;5024:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5024:110:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3862:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3862:89:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;5710:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5710:103:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;4533:114;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4533:114:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;644:48:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;644:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3176:1103;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3176:1103:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3176:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3176:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3176:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3176:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3176:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3176:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3176:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3176:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3176:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3176:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3176:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3176:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3176:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3176:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3176:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3176:1103:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3176:1103:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3176:1103:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3176:1103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3176:1103:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6254:1298;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6254:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:1298:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:106:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3616:106:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2754:134:1;1954:19:6;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2827:5:1;2817:7;;:15;;;;;;;;;;;;;;;;;;2862:10;2848:32;;;2874:5;2848:32;;;;;;;;;;;;;;;;;;;;;;2754:134;:::o;2952:107:6:-;3007:4;3031:20;3043:7;3031;:11;;:20;;;;:::i;:::-;3024:27;;2952:107;;;:::o;7780:825:1:-;7874:13;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1954:19:6;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7920:42:1;7908:54;;:8;:54;;;;7900:63;;;;;;7991:1;7982:5;:10;;:33;;;;;8005:10;7996:5;:19;;7982:33;7974:42;;;;;;8066:1;8035:11;:21;8047:8;8035:21;;;;;;;;;;;;;;;:28;;;;:32;8027:41;;;;;;8081:18;8102:3;8081:24;;8116:11;8130:24;8145:8;8130:14;:24::i;:::-;8116:38;;8172:9;8184:1;8172:13;;8167:405;8191:3;8187:1;:7;8167:405;;;8253:5;8220:11;:21;8232:8;8220:21;;;;;;;;;;;;;;;8242:1;8220:24;;;;;;;;;;;;;;;;;;:29;;;:38;8216:345;;;8350:10;8284:187;;8319:8;8284:187;;;8383:11;:21;8395:8;8383:21;;;;;;;;;;;;;;;8405:1;8383:24;;;;;;;;;;;;;;;;;;:36;;8442:10;8284:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8497:11;:21;8509:8;8497:21;;;;;;;;;;;;;;;8519:1;8497:24;;;;;;;;;;;;;;;;;;;8490:31;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;8540:5;;8216:345;8196:3;;;;;;;8167:405;;;;8593:4;8582:15;;2032:1:6;;7780:825:1;;;;:::o;4311:85:6:-;2089:19;2097:10;2089:7;:19::i;:::-;2081:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4364:24;4377:10;4364:12;:24::i;:::-;4311:85::o;4791:97::-;1954:19;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:22;4872:7;4858:13;:22::i;:::-;4791:97;:::o;4481:1545:1:-;4764:13;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1954:19:6;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4810:42:1;4798:54;;:8;:54;;;;4790:63;;;;;;4894:3;4878:5;4872:19;:25;4864:34;;;;;;4944:2;4923:10;4917:24;:29;4909:38;;;;;;4990:2;4972:7;4966:21;:26;4958:35;;;;;;5035:2;5018:6;5012:20;:25;5004:34;;;;;;5086:2;5063:12;5057:26;:31;5049:40;;;;;;5117:1;5108:5;:10;;:33;;;;;5131:10;5122:5;:19;;5108:33;5100:42;;;;;;5192:1;5161:11;:21;5173:8;5161:21;;;;;;;;;;;;;;;:28;;;;:32;5153:41;;;;;;5207:18;5228:3;5207:24;;5242:11;5256:24;5271:8;5256:14;:24::i;:::-;5242:38;;5291:20;;:::i;:::-;5327:9;5339:1;5327:13;;5322:174;5346:3;5342:1;:7;5322:174;;;5380:11;:21;5392:8;5380:21;;;;;;;;;;;;;;;5402:1;5380:24;;;;;;;;;;;;;;;;;;5371:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5438:5;5423:6;:11;;;:20;5419:66;;;5464:5;;5419:66;5351:3;;;;;;;5322:174;;;;5522:5;5508:6;:11;;:19;;;;5557:10;5538:6;:16;;:29;;;;5594:7;5578:6;:13;;:23;;;;5627:6;5612;:12;;:21;;;;5665:12;5644:6;:18;;:33;;;;5702:5;5688:6;:11;;:19;;;;;5775:10;5725:267;;5752:8;5725:267;;;5800:6;:11;;;5826:6;:16;;;5857:6;:13;;;5885:6;:12;;;5912:6;:18;;;5945:6;:11;;;5971:10;5725:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5725:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5725:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5725:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5725:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5725:267:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6014:4;6003:15;;2032:1:6;;;4481:1545:1;;;;;;;;;:::o;5276:97:6:-;2414:23;2426:10;2414:11;:23::i;:::-;:46;;;;2441:19;2449:10;2441:7;:19::i;:::-;2414:46;2406:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5345:20;5357:7;5345:11;:20::i;:::-;5276:97;:::o;3195:89::-;1954:19;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3258:18;3268:7;3258:9;:18::i;:::-;3195:89;:::o;4089:95::-;1954:19;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4155:21;4168:7;4155:12;:21::i;:::-;4089:95;:::o;5491:99::-;2089:19;2097:10;2089:7;:19::i;:::-;2081:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:23;5574:7;5559:14;:23::i;:::-;5491:99;:::o;3404:77::-;3447:26;3462:10;3447:14;:26::i;:::-;3404:77::o;5024:110::-;5081:4;5105:21;5118:7;5105:8;:12;;:21;;;;:::i;:::-;5098:28;;5024:110;;;:::o;3862:89::-;1954:19;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:18;3935:7;3925:9;:18::i;:::-;3862:89;:::o;5710:103::-;1954:19;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5780:25;5797:7;5780:16;:25::i;:::-;5710:103;:::o;4533:114::-;4592:4;4616:23;4631:7;4616:10;:14;;:23;;;;:::i;:::-;4609:30;;4533:114;;;:::o;644:48:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3176:1103::-;3432:13;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1954:19:6;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:42:1;3466:54;;:8;:54;;;;3458:63;;;;;;3562:3;3546:5;3540:19;:25;3532:34;;;;;;3612:2;3591:10;3585:24;:29;3577:38;;;;;;3658:2;3640:7;3634:21;:26;3626:35;;;;;;3703:2;3686:6;3680:20;:25;3672:34;;;;;;3754:2;3731:12;3725:26;:31;3717:40;;;;;;3770:13;3786:3;3770:19;;3800:20;;:::i;:::-;3823:152;;;;;;;;3844:5;3823:152;;;;3864:10;3823:152;;;;3889:7;3823:152;;;;3911:6;3823:152;;;;3932:12;3823:152;;;;3959:5;3823:152;;;3800:175;;3988:11;:21;4000:8;3988:21;;;;;;;;;;;;;;;4015:6;3988:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3988:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4089:10;4040:205;;4066:8;4040:205;;;4114:5;4134:10;4159:7;4181:6;4202:12;4229:5;4040:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4040:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4040:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4040:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4040:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4040:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:4;4256:15;;2032:1:6;;3176:1103:1;;;;;;;;:::o;6254:1298::-;6356:18;6385:23;6419:20;6450:19;6480:25;2223:7;;;;;;;;;;;2222:8;2214:17;;;;;;1954:19:6;1962:10;1954:7;:19::i;:::-;1946:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6522:19:1;6530:10;6522:7;:19::i;:::-;6518:83;;;6580:8;6566:22;;:10;:22;;;;6558:31;;;;;;6518:83;6631:42;6619:54;;:8;:54;;;;6611:63;;;;;;6702:1;6693:5;:10;;:33;;;;;6716:10;6707:5;:19;;6693:33;6685:42;;;;;;6777:1;6746:11;:21;6758:8;6746:21;;;;;;;;;;;;;;;:28;;;;:32;6738:41;;;;;;6792:18;6813:3;6792:24;;6827:11;6841:24;6856:8;6841:14;:24::i;:::-;6827:38;;6876:20;;:::i;:::-;6914:9;6926:1;6914:13;;6909:174;6933:3;6929:1;:7;6909:174;;;6967:11;:21;6979:8;6967:21;;;;;;;;;;;;;;;6989:1;6967:24;;;;;;;;;;;;;;;;;;6958:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:5;7010:6;:11;;;:20;7006:66;;;7051:5;;7006:66;6938:3;;;;;;;6909:174;;;;7152:10;7100:269;;7129:8;7100:269;;;7177:6;:11;;;7203:6;:16;;;7234:6;:13;;;7262:6;:12;;;7289:6;:18;;;7322:6;:11;;;7348:10;7100:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7100:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7100:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7100:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7100:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7100:269:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7387:6;:11;;;7380:18;;7421:6;:16;;;7409:28;;7457:6;:13;;;7448:22;;7489:6;:12;;;7481:20;;7526:6;:18;;;7512:32;;2032:1:6;;;6254:1298:1;;;;;;;;:::o;3616:106:6:-;3671:4;3695:19;3706:7;3695:6;:10;;:19;;;;:::i;:::-;3688:26;;3616:106;;;:::o;779:200:7:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;8810:209:1:-;8886:7;2223;;;;;;;;;;;2222:8;2214:17;;;;;;8924:42;8914:52;;:6;:52;;;;8906:61;;;;;;8985:11;:19;8997:6;8985:19;;;;;;;;;;;;;;;:26;;;;8978:33;;8810:209;;;:::o;8113:138:6:-;8172:22;8186:7;8172:6;:13;;:22;;;;:::i;:::-;8232:10;8210:33;;8223:7;8210:33;;;;;;;;;;;;8113:138;:::o;5979:142::-;6039:23;6054:7;6039:10;:14;;:23;;;;:::i;:::-;6102:10;6078:35;;6093:7;6078:35;;;;;;;;;;;;5979:142;:::o;6614:136::-;6672:21;6685:7;6672:8;:12;;:21;;;;:::i;:::-;6731:10;6709:33;;6722:7;6709:33;;;;;;;;;;;;6614:136;:::o;7228:131::-;7284:20;7296:7;7284;:11;;:20;;;;:::i;:::-;7340:10;7320:31;;7331:7;7320:31;;;;;;;;;;;;7228:131;:::o;6925:144::-;6986:24;7002:7;6986:8;:15;;:24;;;;:::i;:::-;7050:10;7026:35;;7041:7;7026:35;;;;;;;;;;;;6925:144;:::o;7527:130::-;7588:23;7603:7;7588;:14;;:23;;;;:::i;:::-;7641:7;7627:22;;;;;;;;;;;;7527:130;:::o;7820:::-;7876:19;7887:7;7876:6;:10;;:19;;;;:::i;:::-;7931:10;7911:31;;7922:7;7911:31;;;;;;;;;;;;7820:130;:::o;6299:150::-;6362:26;6380:7;6362:10;:17;;:26;;;;:::i;:::-;6430:10;6404:37;;6421:7;6404:37;;;;;;;;;;;;6299:150;:::o;510:180:7:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;284:8738:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\r\nimport \"./acceso/UserRoles.sol\";\r\n\r\n/**\r\n * @title Smart Contract de Registro de médicos.\r\n * @author Francisco Alemán\r\n * @notice Este contrato representa el registro de los médicos.\r\n * @dev El contrato hereda las funciones del contrato de roles\r\n */\r\n\r\ncontract MedicsRegister is UserRoles {\r\n\r\n     /**\r\n     * @title Representan los datos del médico.\r\n     */\r\n    struct Medico {\r\n        string name;\r\n        string specialty;\r\n        string cedula;\r\n        string email;\r\n        string hashPicture;\r\n        uint256 date;\r\n    }\r\n\r\n    /**\r\n     * @notice Mapea la dirección al médico..\r\n     */\r\n    mapping (address => Medico[]) public fileToMedic;\r\n\r\n     /**\r\n     * @notice Patrón de switch para encender/apagar\r\n     */\r\n    bool private stopped = false;\r\n\r\n     /**\r\n     * @dev Eventos que serán registrados en la blockchain.\r\n     */\r\n    event MedicsAdded(\r\n        address indexed _medic,\r\n        address indexed _admin,\r\n        string _name,\r\n        string _specialty,\r\n        string _cedula,\r\n        string _email,\r\n        string _hashPicture,\r\n        uint256 _date);\r\n\r\n    event MedicsUpdate(\r\n        address indexed _medic,\r\n        address indexed _admin,\r\n        string _name,\r\n        string _specialty,\r\n        string _cedula,\r\n        string _email,\r\n        string _hashPicture,\r\n        uint256 _date,\r\n        uint256 _queryDate);\r\n\r\n    event MedicsRetrieve(\r\n        address indexed _medic,\r\n        address indexed _admin,\r\n        string _name,\r\n        string _specialty,\r\n        string _cedula,\r\n        string  _email,\r\n        string  _hashPicture,\r\n        uint256 _date,\r\n        uint256 _queryDate);\r\n\r\n    event MedicsDelete(\r\n        address indexed _medic,\r\n        address indexed _admin,\r\n        string _hashPicture,\r\n        uint256 _date);\r\n\r\n    /**\r\n    * @dev Indica que se ha puesto el contrato en pausa.\r\n    * @param _admin Un administrador\r\n    * @param _stop Indica cuando hay una pausa o una reanudación.\r\n    */\r\n    event LogSwitchStop(\r\n        address indexed _admin,\r\n        bool _stop\r\n    );\r\n\r\n    /**\r\n    * @dev Previene de ejecución del contrato\r\n    */\r\n    modifier nonlyStopped {\r\n        require(!stopped);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Está función será llamada para todos los mensajes que sean enviados a este contrado.\r\n    * Enviar Ether a este contrato ocasionará una excepción, dado que las funciones no tienen un modificador de pago.\r\n    */\r\n    function() external {}\r\n\r\n    /**\r\n    * @notice Pausar el contrato\r\n    * Se detiene el contrato bajo ciertas condiciones.\r\n    * Sera útil cuando nuevos errores sean descubiertos.\r\n    * @param _stop Switch del contrado de encendido/apagado\r\n    */\r\n    function emergencyStop(bool _stop) public onlyAdmin {\r\n        stopped = _stop;\r\n        emit LogSwitchStop(msg.sender, _stop);\r\n    }\r\n\r\n     /**\r\n   * @dev Función para agregar un médico. Esta función es realizada por un administrador.\r\n   * @param _account a\r\n   * @param _name a\r\n   * @param _specialty a\r\n   * @param _cedula a\r\n   * @param _email a\r\n   * @param _hashPicture a\r\n   * @return _success a\r\n   */\r\n    function addMedics(\r\n        address _account,\r\n        string memory _name,\r\n        string memory _specialty,\r\n        string memory _cedula,\r\n        string memory _email,\r\n        string memory _hashPicture)\r\n    public nonlyStopped onlyAdmin returns (bool _success) {\r\n        require(_account != 0x0000000000000000000000000000000000000000);\r\n        require(bytes(_name).length < 128);\r\n        require(bytes(_specialty).length < 30);\r\n        require(bytes(_cedula).length < 30);\r\n        require(bytes(_email).length < 30);\r\n        require(bytes(_hashPicture).length < 30);\r\n\r\n        uint256 _date = now;\r\n        Medico memory medico = Medico(\r\n            _name,\r\n            _specialty,\r\n            _cedula,\r\n            _email,\r\n            _hashPicture,\r\n            _date\r\n        );\r\n\r\n        fileToMedic[_account].push(medico);\r\n\r\n        emit MedicsAdded(\r\n            _account,\r\n            msg.sender,\r\n            _name,\r\n            _specialty,\r\n            _cedula,\r\n            _email,\r\n            _hashPicture,\r\n            _date\r\n        );\r\n        _success = true;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns el Medico en el índice del propietario de la dirección.\r\n    * @dev Controlado por el switch\r\n    * @param _account Cuenta del médico\r\n    * @return a\r\n    */\r\n    function updateMedics(\r\n        address _account,\r\n        string memory _name,\r\n        string memory _specialty,\r\n        string memory _cedula,\r\n        string memory _email,\r\n        string memory _hashPicture,\r\n        uint256 _date)\r\n    public nonlyStopped onlyAdmin returns (bool _success) {\r\n        require(_account != 0x0000000000000000000000000000000000000000);\r\n        require(bytes(_name).length < 128);\r\n        require(bytes(_specialty).length < 30);\r\n        require(bytes(_cedula).length < 30);\r\n        require(bytes(_email).length < 30);\r\n        require(bytes(_hashPicture).length < 30);\r\n        require(_date >= 0 && _date <= 2**256 - 1);\r\n        require(fileToMedic[_account].length > 0);\r\n\r\n        uint256 _queryDate = now;\r\n        uint256 len = getMedicsCount(_account);\r\n        Medico memory medico;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            medico = fileToMedic[_account][i];\r\n            if (medico.date == _date) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        medico.name = _name;\r\n        medico.specialty = _specialty;\r\n        medico.cedula = _cedula;\r\n        medico.email = _email;\r\n        medico.hashPicture = _hashPicture;\r\n        medico.date = _date;\r\n\r\n        emit MedicsUpdate(\r\n            _account,\r\n            msg.sender,\r\n            medico.name,\r\n            medico.specialty,\r\n            medico.cedula,\r\n            medico.email,\r\n            medico.hashPicture,\r\n            medico.date,\r\n            _queryDate\r\n        );\r\n        _success = true;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns el Medico en el índice del propietario de la dirección.\r\n    * @dev Controlado por el switch\r\n    * @param _account The owner address\r\n    * @return _date The uploaded timestamp\r\n    */\r\n    function viewMedics(address _account, uint256 _date) public nonlyStopped onlyAdmin returns (\r\n        string memory name,\r\n        string memory specialty,\r\n        string memory cedula,\r\n        string memory email,\r\n        string memory hashPicture) {\r\n        if (isAdmin(msg.sender)) {\r\n            require(msg.sender != _account);\r\n        }\r\n        require(_account != 0x0000000000000000000000000000000000000000);\r\n        require(_date >= 0 && _date <= 2**256 - 1);\r\n        require(fileToMedic[_account].length > 0);\r\n\r\n        uint256 _queryDate = now;\r\n        uint256 len = getMedicsCount(_account);\r\n        Medico memory medico;\r\n\r\n        for (uint256 i = 0; i < len; i++) {\r\n            medico = fileToMedic[_account][i];\r\n            if (medico.date == _date) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        emit MedicsRetrieve(\r\n            _account,\r\n            msg.sender,\r\n            medico.name,\r\n            medico.specialty,\r\n            medico.cedula,\r\n            medico.email,\r\n            medico.hashPicture,\r\n            medico.date,\r\n            _queryDate\r\n        );\r\n        name = medico.name;\r\n        specialty = medico.specialty;\r\n        cedula = medico.cedula;\r\n        email = medico.email;\r\n        hashPicture = medico.hashPicture;\r\n    }\r\n\r\n    /**\r\n    * @notice Returns el medico en el índice del propietario de la dirección.\r\n    * @dev Controlado por el switch\r\n    * @param _account The owner address\r\n    * @return _date The uploaded timestamp\r\n    */\r\n    function deleteMedics(address _account, uint256 _date) public nonlyStopped onlyAdmin returns (bool _success) {\r\n        require(_account != 0x0000000000000000000000000000000000000000);\r\n        require(_date >= 0 && _date <= 2**256 - 1);\r\n        require(fileToMedic[_account].length > 0);\r\n\r\n        uint256 _queryDate = now;\r\n        uint256 len = getMedicsCount(_account);\r\n\r\n        for (uint256 i = 0; i < len; i++) {\r\n            if (fileToMedic[_account][i].date == _date) {\r\n                emit MedicsDelete(\r\n                    _account,\r\n                    msg.sender,\r\n                    fileToMedic[_account][i].hashPicture,\r\n                    _queryDate\r\n                );\r\n                delete fileToMedic[_account][i];\r\n                break;\r\n            }\r\n        }\r\n        _success = true;\r\n    }\r\n\r\n    /**\r\n    * @notice Retorna el numero de medicos de esa direccion\r\n    * @dev Controlado por el switch\r\n    * @param _medic El dueño de la dirección\r\n    * @return Retorna el médico\r\n    */\r\n    function getMedicsCount(address _medic) internal view nonlyStopped returns (uint256) {\r\n        require(_medic != 0x0000000000000000000000000000000000000000);\r\n        return fileToMedic[_medic].length;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Lili\\Documents\\GitHub\\Medical_Block\\MedicalHistory-BlockChainProject\\backend\\contracts\\MedicsRegister.sol",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
  "ast": {
    "absolutePath": "/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/MedicsRegister.sol",
    "exportedSymbols": {
      "MedicsRegister": [
        1413
      ]
    },
    "id": 1414,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 710,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/acceso/UserRoles.sol",
        "file": "./acceso/UserRoles.sol",
        "id": 711,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 1414,
        "sourceUnit": 2993,
        "src": "24:32:1",
=======
        "scope": 1418,
        "sourceUnit": 3112,
        "src": "25:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 712,
              "name": "UserRoles",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 2992,
              "src": "301:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserRoles_$2992",
=======
              "referencedDeclaration": 3111,
              "src": "311:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserRoles_$3111",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                "typeString": "contract UserRoles"
              }
            },
            "id": 713,
            "nodeType": "InheritanceSpecifier",
            "src": "311:9:1"
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          2992
=======
          3111
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
        ],
        "contractKind": "contract",
        "documentation": "@title Smart Contract de Registro de médicos.\n@author Francisco Alemán\n@notice Este contrato representa el registro de los médicos.\n@dev El contrato hereda las funciones del contrato de roles",
        "fullyImplemented": true,
        "id": 1413,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          1413,
          2992
=======
          1417,
          3111
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
        ],
        "name": "MedicsRegister",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MedicsRegister.Medico",
            "id": 726,
            "members": [
              {
                "constant": false,
                "id": 715,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "424:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 714,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "424:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 717,
                "name": "specialty",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "446:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 716,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 719,
                "name": "cedula",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "473:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 718,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 721,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "497:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 720,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 723,
                "name": "hashPicture",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "520:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 722,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 725,
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "549:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 724,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "549:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Medico",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 1413,
            "src": "384:163:1",
=======
            "scope": 1417,
            "src": "399:170:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 731,
            "name": "fileToMedic",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "scope": 1413,
            "src": "617:48:1",
=======
            "scope": 1417,
            "src": "644:48:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct MedicsRegister.Medico[])"
            },
            "typeName": {
              "id": 730,
              "keyType": {
                "id": 727,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "644:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct MedicsRegister.Medico[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 728,
                  "name": "Medico",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 726,
                  "src": "664:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                    "typeString": "struct MedicsRegister.Medico"
                  }
                },
                "id": 729,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "664:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage_ptr",
                  "typeString": "struct MedicsRegister.Medico[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 734,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "scope": 1413,
            "src": "743:28:1",
=======
            "scope": 1417,
            "src": "775:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 732,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "775:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 733,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "798:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Eventos que serán registrados en la blockchain.",
            "id": 752,
            "name": "MedicsAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "921:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "954:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "indexed": false,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "987:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "indexed": false,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1010:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "indexed": false,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1038:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "indexed": false,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1063:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1087:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1117:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "910:221:1"
            },
            "src": "893:239:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 772,
            "name": "MedicsUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1169:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1202:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "indexed": false,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1235:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "indexed": false,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1258:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "indexed": false,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1286:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "indexed": false,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1311:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1335:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1365:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "indexed": false,
                  "name": "_queryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1389:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1158:250:1"
            },
            "src": "1140:269:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 792,
            "name": "MedicsRetrieve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1448:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1481:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "indexed": false,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1514:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "indexed": false,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1537:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "indexed": false,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1565:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "indexed": false,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1590:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1615:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 788,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1646:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "indexed": false,
                  "name": "_queryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1670:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1437:252:1"
            },
            "src": "1417:273:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 802,
            "name": "MedicsDelete",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1727:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1760:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1793:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1823:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1716:121:1"
            },
            "src": "1698:140:1"
          },
          {
            "anonymous": false,
            "documentation": "@dev Indica que se ha puesto el contrato en pausa.\n@param _admin Un administrador\n@param _stop Indica cuando hay una pausa o una reanudación.",
            "id": 808,
            "name": "LogSwitchStop",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "2057:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "indexed": false,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "2090:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2046:61:1"
            },
            "src": "2027:81:1"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "2203:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2222:8:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 811,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "2223:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2125:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "2214:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:17:1"
                },
                {
                  "id": 815,
                  "nodeType": "PlaceholderStatement",
                  "src": "2242:1:1"
                }
              ]
            },
            "documentation": "@dev Previene de ejecución del contrato",
            "id": 817,
            "name": "nonlyStopped",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2203:0:1"
            },
            "src": "2181:70:1",
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 834,
              "nodeType": "Block",
              "src": "2439:79:1",
=======
              "id": 820,
              "nodeType": "Block",
              "src": "2517:2:1",
              "statements": []
            },
            "documentation": "@dev Está función será llamada para todos los mensajes que sean enviados a este contrado.\nEnviar Ether a este contrato ocasionará una excepción, dado que las funciones no tienen un modificador de pago.",
            "id": 821,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2505:2:1"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:0:1"
            },
            "scope": 1417,
            "src": "2497:22:1",
            "stateMutability": "nonpayable",
            "superFunction": 2796,
            "visibility": "external"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "2806:82:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 824,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
<<<<<<< HEAD
                      "src": "2449:7:1",
=======
                      "src": "2817:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 825,
                      "name": "_stop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 819,
                      "src": "2459:5:1",
=======
                      "referencedDeclaration": 823,
                      "src": "2827:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "2449:15:1",
=======
                    "src": "2817:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2449:15:1"
=======
                  "src": "2817:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 829,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "2493:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "2862:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "2493:10:1",
=======
                        "src": "2862:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "_stop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 819,
                        "src": "2505:5:1",
=======
                        "referencedDeclaration": 823,
                        "src": "2874:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 828,
                      "name": "LogSwitchStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
<<<<<<< HEAD
                      "src": "2479:13:1",
=======
                      "src": "2848:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2479:32:1",
=======
                    "src": "2848:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "2474:37:1"
=======
                  "src": "2843:37:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Pausar el contrato\nSe detiene el contrato bajo ciertas condiciones.\nSera útil cuando nuevos errores sean descubiertos.\n@param _stop Switch del contrado de encendido/apagado",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 822,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 821,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "2429:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "2796:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2429:9:1"
=======
                "src": "2796:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "emergencyStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 819,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 835,
                  "src": "2410:10:1",
=======
                  "scope": 839,
                  "src": "2777:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2410:4:1",
=======
                    "src": "2777:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2409:12:1"
=======
              "src": "2776:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2439:0:1"
            },
            "scope": 1413,
            "src": "2387:131:1",
=======
              "src": "2806:0:1"
            },
            "scope": 1417,
            "src": "2754:134:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3058:801:1",
=======
              "src": "3447:832:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 857,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 837,
                          "src": "3076:8:1",
=======
                          "referencedDeclaration": 841,
                          "src": "3466:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3088:42:1",
=======
                          "src": "3478:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "3076:54:1",
=======
                        "src": "3466:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3068:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3458:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3068:63:1",
=======
                    "src": "3458:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3068:63:1"
=======
                  "src": "3458:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 864,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 839,
                                "src": "3155:5:1",
=======
                                "referencedDeclaration": 843,
                                "src": "3546:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3149:5:1",
=======
                              "src": "3540:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3149:12:1",
=======
                            "src": "3540:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3149:19:1",
=======
                          "src": "3540:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313238",
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3171:3:1",
=======
                          "src": "3562:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_128_by_1",
                            "typeString": "int_const 128"
                          },
                          "value": "128"
                        },
<<<<<<< HEAD
                        "src": "3149:25:1",
=======
                        "src": "3540:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3141:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3532:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3141:34:1",
=======
                    "src": "3532:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3141:34:1"
=======
                  "src": "3532:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 873,
                                "name": "_specialty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 841,
                                "src": "3199:10:1",
=======
                                "referencedDeclaration": 845,
                                "src": "3591:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3193:5:1",
=======
                              "src": "3585:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3193:17:1",
=======
                            "src": "3585:17:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3193:24:1",
=======
                          "src": "3585:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3220:2:1",
=======
                          "src": "3612:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3193:29:1",
=======
                        "src": "3585:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3185:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3577:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3185:38:1",
=======
                    "src": "3577:38:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3185:38:1"
=======
                  "src": "3577:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 882,
                                "name": "_cedula",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 843,
                                "src": "3247:7:1",
=======
                                "referencedDeclaration": 847,
                                "src": "3640:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3241:5:1",
=======
                              "src": "3634:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3241:14:1",
=======
                            "src": "3634:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3241:21:1",
=======
                          "src": "3634:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3265:2:1",
=======
                          "src": "3658:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3241:26:1",
=======
                        "src": "3634:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3233:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3626:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3233:35:1",
=======
                    "src": "3626:35:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3233:35:1"
=======
                  "src": "3626:35:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 891,
                                "name": "_email",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 845,
                                "src": "3292:6:1",
=======
                                "referencedDeclaration": 849,
                                "src": "3686:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3286:5:1",
=======
                              "src": "3680:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3286:13:1",
=======
                            "src": "3680:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3286:20:1",
=======
                          "src": "3680:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3309:2:1",
=======
                          "src": "3703:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3286:25:1",
=======
                        "src": "3680:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3278:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3672:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3278:34:1",
=======
                    "src": "3672:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3278:34:1"
=======
                  "src": "3672:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 900,
                                "name": "_hashPicture",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 847,
                                "src": "3336:12:1",
=======
                                "referencedDeclaration": 851,
                                "src": "3731:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3330:5:1",
=======
                              "src": "3725:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3330:19:1",
=======
                            "src": "3725:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3330:26:1",
=======
                          "src": "3725:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3359:2:1",
=======
                          "src": "3754:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3330:31:1",
=======
                        "src": "3725:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3322:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3717:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3322:40:1",
=======
                    "src": "3717:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3322:40:1"
=======
                  "src": "3717:40:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 908,
                      "name": "_date",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 945,
                      "src": "3373:13:1",
=======
                      "scope": 949,
                      "src": "3770:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "3373:7:1",
=======
                        "src": "3770:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 910,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 909,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "3389:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "3786:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3373:19:1"
=======
                  "src": "3770:19:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 912,
                      "name": "medico",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 945,
                      "src": "3402:20:1",
=======
                      "scope": 949,
                      "src": "3800:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                        "typeString": "struct MedicsRegister.Medico"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 911,
                        "name": "Medico",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 726,
<<<<<<< HEAD
                        "src": "3402:6:1",
=======
                        "src": "3800:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                          "typeString": "struct MedicsRegister.Medico"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 921,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 914,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 839,
                        "src": "3445:5:1",
=======
                        "referencedDeclaration": 843,
                        "src": "3844:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 915,
                        "name": "_specialty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 841,
                        "src": "3464:10:1",
=======
                        "referencedDeclaration": 845,
                        "src": "3864:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 916,
                        "name": "_cedula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 843,
                        "src": "3488:7:1",
=======
                        "referencedDeclaration": 847,
                        "src": "3889:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 845,
                        "src": "3509:6:1",
=======
                        "referencedDeclaration": 849,
                        "src": "3911:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 918,
                        "name": "_hashPicture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 847,
                        "src": "3529:12:1",
=======
                        "referencedDeclaration": 851,
                        "src": "3932:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 919,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 908,
                        "src": "3555:5:1",
=======
                        "referencedDeclaration": 912,
                        "src": "3959:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 913,
                      "name": "Medico",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
<<<<<<< HEAD
                      "src": "3425:6:1",
=======
                      "src": "3823:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Medico_$726_storage_ptr_$",
                        "typeString": "type(struct MedicsRegister.Medico storage pointer)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3425:145:1",
=======
                    "src": "3823:152:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Medico_$726_memory",
                      "typeString": "struct MedicsRegister.Medico memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3402:168:1"
=======
                  "src": "3800:175:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 926,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 912,
                        "src": "3608:6:1",
=======
                        "referencedDeclaration": 916,
                        "src": "4015:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "fileToMedic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
<<<<<<< HEAD
                          "src": "3581:11:1",
=======
                          "src": "3988:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                          }
                        },
                        "id": 924,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 923,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 837,
                          "src": "3593:8:1",
=======
                          "referencedDeclaration": 841,
                          "src": "4000:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "3581:21:1",
=======
                        "src": "3988:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                          "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "3581:26:1",
=======
                      "src": "3988:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Medico_$726_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct MedicsRegister.Medico storage ref) returns (uint256)"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3581:34:1",
=======
                    "src": "3988:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3581:34:1"
=======
                  "src": "3988:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 930,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 837,
                        "src": "3656:8:1",
=======
                        "referencedDeclaration": 841,
                        "src": "4066:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 931,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "3678:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "4089:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "3678:10:1",
=======
                        "src": "4089:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 933,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 839,
                        "src": "3702:5:1",
=======
                        "referencedDeclaration": 843,
                        "src": "4114:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "_specialty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 841,
                        "src": "3721:10:1",
=======
                        "referencedDeclaration": 845,
                        "src": "4134:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 935,
                        "name": "_cedula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 843,
                        "src": "3745:7:1",
=======
                        "referencedDeclaration": 847,
                        "src": "4159:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 936,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 845,
                        "src": "3766:6:1",
=======
                        "referencedDeclaration": 849,
                        "src": "4181:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 937,
                        "name": "_hashPicture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 847,
                        "src": "3786:12:1",
=======
                        "referencedDeclaration": 851,
                        "src": "4202:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 938,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 908,
                        "src": "3812:5:1",
=======
                        "referencedDeclaration": 912,
                        "src": "4229:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 929,
                      "name": "MedicsAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
<<<<<<< HEAD
                      "src": "3631:11:1",
=======
                      "src": "4040:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,string memory,uint256)"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3631:196:1",
=======
                    "src": "4040:205:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "3626:201:1"
=======
                  "src": "4035:210:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 941,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 854,
                      "src": "3837:8:1",
=======
                      "referencedDeclaration": 858,
                      "src": "4256:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3848:4:1",
=======
                      "src": "4267:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "3837:15:1",
=======
                    "src": "4256:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3837:15:1"
=======
                  "src": "4256:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@dev Función para agregar un médico. Esta función es realizada por un administrador.\n@param _account a\n@param _name a\n@param _specialty a\n@param _cedula a\n@param _email a\n@param _hashPicture a\n@return _success a",
            "id": 946,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 850,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 849,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "3011:12:1",
=======
                  "src": "3400:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3011:12:1"
=======
                "src": "3400:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 852,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 851,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "3024:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "3413:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3024:9:1"
=======
                "src": "3413:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "addMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2822:16:1",
=======
                  "scope": 950,
                  "src": "3205:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2822:7:1",
=======
                    "src": "3205:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2848:19:1",
=======
                  "scope": 950,
                  "src": "3232:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2848:6:1",
=======
                    "src": "3232:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2877:24:1",
=======
                  "scope": 950,
                  "src": "3262:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2877:6:1",
=======
                    "src": "3262:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2911:21:1",
=======
                  "scope": 950,
                  "src": "3297:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2911:6:1",
=======
                    "src": "3297:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2942:20:1",
=======
                  "scope": 950,
                  "src": "3329:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2942:6:1",
=======
                    "src": "3329:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2972:26:1",
=======
                  "scope": 950,
                  "src": "3360:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2972:6:1",
=======
                    "src": "3360:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2812:187:1"
=======
              "src": "3194:193:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "3043:13:1",
=======
                  "scope": 950,
                  "src": "3432:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3043:4:1",
=======
                    "src": "3432:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3042:15:1"
            },
            "scope": 1413,
            "src": "2794:1065:1",
=======
              "src": "3431:15:1"
            },
            "scope": 1417,
            "src": "3176:1103:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1142,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "4343:1208:1",
=======
              "src": "4779:1247:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 970,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 948,
                          "src": "4361:8:1",
=======
                          "referencedDeclaration": 952,
                          "src": "4798:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4373:42:1",
=======
                          "src": "4810:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "4361:54:1",
=======
                        "src": "4798:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4353:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4790:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4353:63:1",
=======
                    "src": "4790:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4353:63:1"
=======
                  "src": "4790:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 977,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 950,
                                "src": "4440:5:1",
=======
                                "referencedDeclaration": 954,
                                "src": "4878:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4434:5:1",
=======
                              "src": "4872:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4434:12:1",
=======
                            "src": "4872:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4434:19:1",
=======
                          "src": "4872:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313238",
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4456:3:1",
=======
                          "src": "4894:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_128_by_1",
                            "typeString": "int_const 128"
                          },
                          "value": "128"
                        },
<<<<<<< HEAD
                        "src": "4434:25:1",
=======
                        "src": "4872:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4426:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4864:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4426:34:1",
=======
                    "src": "4864:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4426:34:1"
=======
                  "src": "4864:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 986,
                                "name": "_specialty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 952,
                                "src": "4484:10:1",
=======
                                "referencedDeclaration": 956,
                                "src": "4923:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4478:5:1",
=======
                              "src": "4917:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4478:17:1",
=======
                            "src": "4917:17:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4478:24:1",
=======
                          "src": "4917:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4505:2:1",
=======
                          "src": "4944:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4478:29:1",
=======
                        "src": "4917:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4470:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4909:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4470:38:1",
=======
                    "src": "4909:38:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4470:38:1"
=======
                  "src": "4909:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 995,
                                "name": "_cedula",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 954,
                                "src": "4532:7:1",
=======
                                "referencedDeclaration": 958,
                                "src": "4972:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4526:5:1",
=======
                              "src": "4966:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4526:14:1",
=======
                            "src": "4966:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4526:21:1",
=======
                          "src": "4966:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4550:2:1",
=======
                          "src": "4990:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4526:26:1",
=======
                        "src": "4966:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4518:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4958:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4518:35:1",
=======
                    "src": "4958:35:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4518:35:1"
=======
                  "src": "4958:35:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1004,
                                "name": "_email",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 956,
                                "src": "4577:6:1",
=======
                                "referencedDeclaration": 960,
                                "src": "5018:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4571:5:1",
=======
                              "src": "5012:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4571:13:1",
=======
                            "src": "5012:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4571:20:1",
=======
                          "src": "5012:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4594:2:1",
=======
                          "src": "5035:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4571:25:1",
=======
                        "src": "5012:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4563:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5004:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4563:34:1",
=======
                    "src": "5004:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4563:34:1"
=======
                  "src": "5004:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1013,
                                "name": "_hashPicture",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 958,
                                "src": "4621:12:1",
=======
                                "referencedDeclaration": 962,
                                "src": "5063:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4615:5:1",
=======
                              "src": "5057:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4615:19:1",
=======
                            "src": "5057:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4615:26:1",
=======
                          "src": "5057:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4644:2:1",
=======
                          "src": "5086:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4615:31:1",
=======
                        "src": "5057:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4607:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5049:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4607:40:1",
=======
                    "src": "5049:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4607:40:1"
=======
                  "src": "5049:40:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1021,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 960,
                            "src": "4665:5:1",
=======
                            "referencedDeclaration": 964,
                            "src": "5108:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4674:1:1",
=======
                            "src": "5117:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "4665:10:1",
=======
                          "src": "5108:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1024,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 960,
                            "src": "4679:5:1",
=======
                            "referencedDeclaration": 964,
                            "src": "5122:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "4688:1:1",
=======
                                "src": "5131:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323536",
                                "id": 1026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "4691:3:1",
=======
                                "src": "5134:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
<<<<<<< HEAD
                              "src": "4688:6:1",
=======
                              "src": "5131:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4697:1:1",
=======
                              "src": "5140:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "4688:10:1",
=======
                            "src": "5131:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            }
                          },
<<<<<<< HEAD
                          "src": "4679:19:1",
=======
                          "src": "5122:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "4665:33:1",
=======
                        "src": "5108:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4657:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5100:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4657:42:1",
=======
                    "src": "5100:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4657:42:1"
=======
                  "src": "5100:42:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1035,
                              "name": "fileToMedic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
<<<<<<< HEAD
                              "src": "4717:11:1",
=======
                              "src": "5161:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                              }
                            },
                            "id": 1037,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1036,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 948,
                              "src": "4729:8:1",
=======
                              "referencedDeclaration": 952,
                              "src": "5173:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "4717:21:1",
=======
                            "src": "5161:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4717:28:1",
=======
                          "src": "5161:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4748:1:1",
=======
                          "src": "5192:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "4717:32:1",
=======
                        "src": "5161:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4709:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5153:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4709:41:1",
=======
                    "src": "5153:41:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4709:41:1"
=======
                  "src": "5153:41:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1044,
                      "name": "_queryDate",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1142,
                      "src": "4761:18:1",
=======
                      "scope": 1146,
                      "src": "5207:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1043,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "4761:7:1",
=======
                        "src": "5207:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1046,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1045,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "4782:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "5228:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4761:24:1"
=======
                  "src": "5207:24:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1048,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1142,
                      "src": "4795:11:1",
=======
                      "scope": 1146,
                      "src": "5242:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1047,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "4795:7:1",
=======
                        "src": "5242:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 948,
                        "src": "4824:8:1",
=======
                        "referencedDeclaration": 952,
                        "src": "5271:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1049,
                      "name": "getMedicsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1412,
                      "src": "4809:14:1",
=======
                      "referencedDeclaration": 1416,
                      "src": "5256:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4809:24:1",
=======
                    "src": "5256:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4795:38:1"
=======
                  "src": "5242:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1054,
                      "name": "medico",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1142,
                      "src": "4843:20:1",
=======
                      "scope": 1146,
                      "src": "5291:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                        "typeString": "struct MedicsRegister.Medico"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1053,
                        "name": "Medico",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 726,
<<<<<<< HEAD
                        "src": "4843:6:1",
=======
                        "src": "5291:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                          "typeString": "struct MedicsRegister.Medico"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1055,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4843:20:1"
=======
                  "src": "5291:20:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "body": {
                    "id": 1081,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "4907:135:1",
=======
                    "src": "5356:140:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1066,
                            "name": "medico",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1054,
                            "src": "4921:6:1",
=======
                            "referencedDeclaration": 1058,
                            "src": "5371:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                              "typeString": "struct MedicsRegister.Medico memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1067,
                                "name": "fileToMedic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
<<<<<<< HEAD
                                "src": "4930:11:1",
=======
                                "src": "5380:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                }
                              },
                              "id": 1069,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1068,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 948,
                                "src": "4942:8:1",
=======
                                "referencedDeclaration": 952,
                                "src": "5392:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "4930:21:1",
=======
                              "src": "5380:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                              }
                            },
                            "id": 1071,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1070,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1057,
                              "src": "4952:1:1",
=======
                              "referencedDeclaration": 1061,
                              "src": "5402:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "4930:24:1",
=======
                            "src": "5380:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref"
                            }
                          },
<<<<<<< HEAD
                          "src": "4921:33:1",
=======
                          "src": "5371:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1073,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "4921:33:1"
=======
                        "src": "5371:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1074,
                              "name": "medico",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1054,
                              "src": "4972:6:1",
=======
                              "referencedDeclaration": 1058,
                              "src": "5423:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                                "typeString": "struct MedicsRegister.Medico memory"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
<<<<<<< HEAD
                            "src": "4972:11:1",
=======
                            "src": "5423:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1076,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 960,
                            "src": "4987:5:1",
=======
                            "referencedDeclaration": 964,
                            "src": "5438:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "4972:20:1",
=======
                          "src": "5423:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1080,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "4968:64:1",
=======
                        "src": "5419:66:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "trueBody": {
                          "id": 1079,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "4994:38:1",
=======
                          "src": "5445:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "statements": [
                            {
                              "id": 1078,
                              "nodeType": "Break",
<<<<<<< HEAD
                              "src": "5012:5:1"
=======
                              "src": "5464:5:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1060,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1057,
                      "src": "4893:1:1",
=======
                      "referencedDeclaration": 1061,
                      "src": "5342:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1061,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1048,
                      "src": "4897:3:1",
=======
                      "referencedDeclaration": 1052,
                      "src": "5346:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "4893:7:1",
=======
                    "src": "5342:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1082,
                  "initializationExpression": {
                    "assignments": [
                      1057
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1057,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 1082,
                        "src": "4878:9:1",
=======
                        "scope": 1086,
                        "src": "5327:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "4878:7:1",
=======
                          "src": "5327:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1059,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4890:1:1",
=======
                      "src": "5339:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "4878:13:1"
=======
                    "src": "5327:13:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "4902:3:1",
=======
                      "src": "5351:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1057,
                        "src": "4902:1:1",
=======
                        "referencedDeclaration": 1061,
                        "src": "5351:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1065,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "4902:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4873:169:1"
=======
                    "src": "5351:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "5322:174:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5052:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5508:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 715,
<<<<<<< HEAD
                      "src": "5052:11:1",
=======
                      "src": "5508:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1086,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 950,
                      "src": "5066:5:1",
=======
                      "referencedDeclaration": 954,
                      "src": "5522:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5052:19:1",
=======
                    "src": "5508:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5052:19:1"
=======
                  "src": "5508:19:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1089,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5081:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5538:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "specialty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
<<<<<<< HEAD
                      "src": "5081:16:1",
=======
                      "src": "5538:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1092,
                      "name": "_specialty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 952,
                      "src": "5100:10:1",
=======
                      "referencedDeclaration": 956,
                      "src": "5557:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5081:29:1",
=======
                    "src": "5538:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5081:29:1"
=======
                  "src": "5538:29:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5120:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5578:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cedula",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
<<<<<<< HEAD
                      "src": "5120:13:1",
=======
                      "src": "5578:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1098,
                      "name": "_cedula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 954,
                      "src": "5136:7:1",
=======
                      "referencedDeclaration": 958,
                      "src": "5594:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5120:23:1",
=======
                    "src": "5578:23:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5120:23:1"
=======
                  "src": "5578:23:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1101,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5153:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5612:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
<<<<<<< HEAD
                      "src": "5153:12:1",
=======
                      "src": "5612:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1104,
                      "name": "_email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 956,
                      "src": "5168:6:1",
=======
                      "referencedDeclaration": 960,
                      "src": "5627:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5153:21:1",
=======
                    "src": "5612:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1106,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5153:21:1"
=======
                  "src": "5612:21:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5184:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5644:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hashPicture",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
<<<<<<< HEAD
                      "src": "5184:18:1",
=======
                      "src": "5644:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1110,
                      "name": "_hashPicture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 958,
                      "src": "5205:12:1",
=======
                      "referencedDeclaration": 962,
                      "src": "5665:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5184:33:1",
=======
                    "src": "5644:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5184:33:1"
=======
                  "src": "5644:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1113,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5227:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5688:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 725,
<<<<<<< HEAD
                      "src": "5227:11:1",
=======
                      "src": "5688:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1116,
                      "name": "_date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 960,
                      "src": "5241:5:1",
=======
                      "referencedDeclaration": 964,
                      "src": "5702:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "5227:19:1",
=======
                    "src": "5688:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5227:19:1"
=======
                  "src": "5688:19:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1120,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 948,
                        "src": "5288:8:1",
=======
                        "referencedDeclaration": 952,
                        "src": "5752:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "5310:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "5775:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "5310:10:1",
=======
                        "src": "5775:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1123,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5334:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5800:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 715,
<<<<<<< HEAD
                        "src": "5334:11:1",
=======
                        "src": "5800:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1125,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5359:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5826:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "specialty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 717,
<<<<<<< HEAD
                        "src": "5359:16:1",
=======
                        "src": "5826:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1127,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5389:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5857:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cedula",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 719,
<<<<<<< HEAD
                        "src": "5389:13:1",
=======
                        "src": "5857:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1129,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5416:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5885:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "email",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
<<<<<<< HEAD
                        "src": "5416:12:1",
=======
                        "src": "5885:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1131,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5442:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5912:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashPicture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
<<<<<<< HEAD
                        "src": "5442:18:1",
=======
                        "src": "5912:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1133,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5474:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5945:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
<<<<<<< HEAD
                        "src": "5474:11:1",
=======
                        "src": "5945:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "_queryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1044,
                        "src": "5499:10:1",
=======
                        "referencedDeclaration": 1048,
                        "src": "5971:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1119,
                      "name": "MedicsUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
<<<<<<< HEAD
                      "src": "5262:12:1",
=======
                      "src": "5725:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5262:257:1",
=======
                    "src": "5725:267:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "5257:262:1"
=======
                  "src": "5720:272:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1138,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 967,
                      "src": "5529:8:1",
=======
                      "referencedDeclaration": 971,
                      "src": "6003:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5540:4:1",
=======
                      "src": "6014:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "5529:15:1",
=======
                    "src": "6003:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5529:15:1"
=======
                  "src": "6003:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Returns el Medico en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account Cuenta del médico\n@return a",
            "id": 1143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 963,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 962,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "4296:12:1",
=======
                  "src": "4732:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4296:12:1"
=======
                "src": "4732:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 964,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "4309:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "4745:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4309:9:1"
=======
                "src": "4745:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "updateMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4084:16:1",
=======
                  "scope": 1147,
                  "src": "4513:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4084:7:1",
=======
                    "src": "4513:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4110:19:1",
=======
                  "scope": 1147,
                  "src": "4540:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4110:6:1",
=======
                    "src": "4540:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 952,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4139:24:1",
=======
                  "scope": 1147,
                  "src": "4570:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4139:6:1",
=======
                    "src": "4570:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 954,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4173:21:1",
=======
                  "scope": 1147,
                  "src": "4605:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4173:6:1",
=======
                    "src": "4605:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4204:20:1",
=======
                  "scope": 1147,
                  "src": "4637:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4204:6:1",
=======
                    "src": "4637:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4234:26:1",
=======
                  "scope": 1147,
                  "src": "4668:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4234:6:1",
=======
                    "src": "4668:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 960,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4270:13:1",
=======
                  "scope": 1147,
                  "src": "4705:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4270:7:1",
=======
                    "src": "4705:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4074:210:1"
=======
              "src": "4502:217:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4328:13:1",
=======
                  "scope": 1147,
                  "src": "4764:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4328:4:1",
=======
                    "src": "4764:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4327:15:1"
            },
            "scope": 1413,
            "src": "4053:1498:1",
=======
              "src": "4763:15:1"
            },
            "scope": 1417,
            "src": "4481:1545:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1290,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "6019:1010:1",
=======
              "src": "6507:1045:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "6041:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "6530:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "6041:10:1",
=======
                        "src": "6530:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1164,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 2690,
                      "src": "6033:7:1",
=======
                      "referencedDeclaration": 2809,
                      "src": "6522:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6033:19:1",
=======
                    "src": "6522:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1176,
                  "nodeType": "IfStatement",
<<<<<<< HEAD
                  "src": "6029:81:1",
=======
                  "src": "6518:83:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "trueBody": {
                    "id": 1175,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6054:56:1",
=======
                    "src": "6543:58:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1169,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 3088,
                                  "src": "6076:3:1",
=======
                                  "referencedDeclaration": 3207,
                                  "src": "6566:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
<<<<<<< HEAD
                                "src": "6076:10:1",
=======
                                "src": "6566:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1171,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1145,
                                "src": "6090:8:1",
=======
                                "referencedDeclaration": 1149,
                                "src": "6580:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "6076:22:1",
=======
                              "src": "6566:22:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1168,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
<<<<<<< HEAD
                              3091,
                              3092
                            ],
                            "referencedDeclaration": 3091,
                            "src": "6068:7:1",
=======
                              3210,
                              3211
                            ],
                            "referencedDeclaration": 3210,
                            "src": "6558:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6068:31:1",
=======
                          "src": "6558:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6068:31:1"
=======
                        "src": "6558:31:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1178,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1145,
                          "src": "6127:8:1",
=======
                          "referencedDeclaration": 1149,
                          "src": "6619:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6139:42:1",
=======
                          "src": "6631:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "6127:54:1",
=======
                        "src": "6619:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "6119:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "6611:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6119:63:1",
=======
                    "src": "6611:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6119:63:1"
=======
                  "src": "6611:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1184,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1147,
                            "src": "6200:5:1",
=======
                            "referencedDeclaration": 1151,
                            "src": "6693:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "6209:1:1",
=======
                            "src": "6702:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "6200:10:1",
=======
                          "src": "6693:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1187,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1147,
                            "src": "6214:5:1",
=======
                            "referencedDeclaration": 1151,
                            "src": "6707:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            },
                            "id": 1192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "6223:1:1",
=======
                                "src": "6716:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323536",
                                "id": 1189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "6226:3:1",
=======
                                "src": "6719:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
<<<<<<< HEAD
                              "src": "6223:6:1",
=======
                              "src": "6716:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "6232:1:1",
=======
                              "src": "6725:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "6223:10:1",
=======
                            "src": "6716:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            }
                          },
<<<<<<< HEAD
                          "src": "6214:19:1",
=======
                          "src": "6707:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "6200:33:1",
=======
                        "src": "6693:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "6192:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "6685:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6192:42:1",
=======
                    "src": "6685:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6192:42:1"
=======
                  "src": "6685:42:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1198,
                              "name": "fileToMedic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
<<<<<<< HEAD
                              "src": "6252:11:1",
=======
                              "src": "6746:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                              }
                            },
                            "id": 1200,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1199,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1145,
                              "src": "6264:8:1",
=======
                              "referencedDeclaration": 1149,
                              "src": "6758:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "6252:21:1",
=======
                            "src": "6746:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                            }
                          },
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "6252:28:1",
=======
                          "src": "6746:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6283:1:1",
=======
                          "src": "6777:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "6252:32:1",
=======
                        "src": "6746:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "6244:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "6738:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6244:41:1",
=======
                    "src": "6738:41:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6244:41:1"
=======
                  "src": "6738:41:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "name": "_queryDate",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1290,
                      "src": "6296:18:1",
=======
                      "scope": 1294,
                      "src": "6792:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6296:7:1",
=======
                        "src": "6792:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1209,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1208,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "6317:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "6813:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6296:24:1"
=======
                  "src": "6792:24:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1211,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1290,
                      "src": "6330:11:1",
=======
                      "scope": 1294,
                      "src": "6827:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6330:7:1",
=======
                        "src": "6827:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1215,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1213,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1145,
                        "src": "6359:8:1",
=======
                        "referencedDeclaration": 1149,
                        "src": "6856:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1212,
                      "name": "getMedicsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1412,
                      "src": "6344:14:1",
=======
                      "referencedDeclaration": 1416,
                      "src": "6841:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6344:24:1",
=======
                    "src": "6841:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6330:38:1"
=======
                  "src": "6827:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1217,
                      "name": "medico",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1290,
                      "src": "6378:20:1",
=======
                      "scope": 1294,
                      "src": "6876:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                        "typeString": "struct MedicsRegister.Medico"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1216,
                        "name": "Medico",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 726,
<<<<<<< HEAD
                        "src": "6378:6:1",
=======
                        "src": "6876:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                          "typeString": "struct MedicsRegister.Medico"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6378:20:1"
=======
                  "src": "6876:20:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "body": {
                    "id": 1244,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6443:135:1",
=======
                    "src": "6943:140:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1229,
                            "name": "medico",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1217,
                            "src": "6457:6:1",
=======
                            "referencedDeclaration": 1221,
                            "src": "6958:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                              "typeString": "struct MedicsRegister.Medico memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1230,
                                "name": "fileToMedic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
<<<<<<< HEAD
                                "src": "6466:11:1",
=======
                                "src": "6967:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                }
                              },
                              "id": 1232,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1231,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1145,
                                "src": "6478:8:1",
=======
                                "referencedDeclaration": 1149,
                                "src": "6979:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "6466:21:1",
=======
                              "src": "6967:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                              }
                            },
                            "id": 1234,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1220,
                              "src": "6488:1:1",
=======
                              "referencedDeclaration": 1224,
                              "src": "6989:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "6466:24:1",
=======
                            "src": "6967:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref"
                            }
                          },
<<<<<<< HEAD
                          "src": "6457:33:1",
=======
                          "src": "6958:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6457:33:1"
=======
                        "src": "6958:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1237,
                              "name": "medico",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1217,
                              "src": "6508:6:1",
=======
                              "referencedDeclaration": 1221,
                              "src": "7010:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                                "typeString": "struct MedicsRegister.Medico memory"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
<<<<<<< HEAD
                            "src": "6508:11:1",
=======
                            "src": "7010:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1239,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1147,
                            "src": "6523:5:1",
=======
                            "referencedDeclaration": 1151,
                            "src": "7025:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "6508:20:1",
=======
                          "src": "7010:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1243,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "6504:64:1",
=======
                        "src": "7006:66:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "trueBody": {
                          "id": 1242,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "6530:38:1",
=======
                          "src": "7032:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "statements": [
                            {
                              "id": 1241,
                              "nodeType": "Break",
<<<<<<< HEAD
                              "src": "6548:5:1"
=======
                              "src": "7051:5:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1220,
                      "src": "6429:1:1",
=======
                      "referencedDeclaration": 1224,
                      "src": "6929:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1224,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1211,
                      "src": "6433:3:1",
=======
                      "referencedDeclaration": 1215,
                      "src": "6933:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6429:7:1",
=======
                    "src": "6929:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1245,
                  "initializationExpression": {
                    "assignments": [
                      1220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1220,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 1245,
                        "src": "6414:9:1",
=======
                        "scope": 1249,
                        "src": "6914:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "6414:7:1",
=======
                          "src": "6914:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1222,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6426:1:1",
=======
                      "src": "6926:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6414:13:1"
=======
                    "src": "6914:13:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "6438:3:1",
=======
                      "src": "6938:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1226,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1220,
                        "src": "6438:1:1",
=======
                        "referencedDeclaration": 1224,
                        "src": "6938:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1228,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "6438:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6409:169:1"
=======
                    "src": "6938:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6909:174:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1247,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1145,
                        "src": "6621:8:1",
=======
                        "referencedDeclaration": 1149,
                        "src": "7129:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "6643:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "7152:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "6643:10:1",
=======
                        "src": "7152:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1250,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6667:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7177:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 715,
<<<<<<< HEAD
                        "src": "6667:11:1",
=======
                        "src": "7177:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1252,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6692:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7203:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "specialty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 717,
<<<<<<< HEAD
                        "src": "6692:16:1",
=======
                        "src": "7203:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1254,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6722:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7234:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cedula",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 719,
<<<<<<< HEAD
                        "src": "6722:13:1",
=======
                        "src": "7234:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1256,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6749:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7262:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "email",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
<<<<<<< HEAD
                        "src": "6749:12:1",
=======
                        "src": "7262:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1258,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6775:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7289:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashPicture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
<<<<<<< HEAD
                        "src": "6775:18:1",
=======
                        "src": "7289:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1260,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6807:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7322:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
<<<<<<< HEAD
                        "src": "6807:11:1",
=======
                        "src": "7322:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "_queryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1207,
                        "src": "6832:10:1",
=======
                        "referencedDeclaration": 1211,
                        "src": "7348:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1246,
                      "name": "MedicsRetrieve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
<<<<<<< HEAD
                      "src": "6593:14:1",
=======
                      "src": "7100:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6593:259:1",
=======
                    "src": "7100:269:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "6588:264:1"
=======
                  "src": "7095:274:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1265,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1154,
                      "src": "6862:4:1",
=======
                      "referencedDeclaration": 1158,
                      "src": "7380:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6869:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7387:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 715,
<<<<<<< HEAD
                      "src": "6869:11:1",
=======
                      "src": "7387:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6862:18:1",
=======
                    "src": "7380:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6862:18:1"
=======
                  "src": "7380:18:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1270,
                      "name": "specialty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1156,
                      "src": "6890:9:1",
=======
                      "referencedDeclaration": 1160,
                      "src": "7409:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1271,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6902:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7421:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "specialty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
<<<<<<< HEAD
                      "src": "6902:16:1",
=======
                      "src": "7421:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6890:28:1",
=======
                    "src": "7409:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6890:28:1"
=======
                  "src": "7409:28:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1275,
                      "name": "cedula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1158,
                      "src": "6928:6:1",
=======
                      "referencedDeclaration": 1162,
                      "src": "7448:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1276,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6937:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7457:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cedula",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
<<<<<<< HEAD
                      "src": "6937:13:1",
=======
                      "src": "7457:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6928:22:1",
=======
                    "src": "7448:22:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6928:22:1"
=======
                  "src": "7448:22:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1280,
                      "name": "email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1160,
                      "src": "6960:5:1",
=======
                      "referencedDeclaration": 1164,
                      "src": "7481:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1281,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6968:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7489:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
<<<<<<< HEAD
                      "src": "6968:12:1",
=======
                      "src": "7489:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6960:20:1",
=======
                    "src": "7481:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6960:20:1"
=======
                  "src": "7481:20:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1285,
                      "name": "hashPicture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1162,
                      "src": "6990:11:1",
=======
                      "referencedDeclaration": 1166,
                      "src": "7512:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1286,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "7004:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7526:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashPicture",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
<<<<<<< HEAD
                      "src": "7004:18:1",
=======
                      "src": "7526:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6990:32:1",
=======
                    "src": "7512:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6990:32:1"
=======
                  "src": "7512:32:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Returns el Medico en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account The owner address\n@return _date The uploaded timestamp",
            "id": 1291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1149,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "5831:12:1",
=======
                  "src": "6314:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5831:12:1"
=======
                "src": "6314:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 1152,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1151,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "5844:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "6327:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5844:9:1"
=======
                "src": "6327:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "viewMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1145,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5791:16:1",
=======
                  "scope": 1295,
                  "src": "6274:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5791:7:1",
=======
                    "src": "6274:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5809:13:1",
=======
                  "scope": 1295,
                  "src": "6292:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5809:7:1",
=======
                    "src": "6292:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5790:33:1"
=======
              "src": "6273:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5872:18:1",
=======
                  "scope": 1295,
                  "src": "6356:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5872:6:1",
=======
                    "src": "6356:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "name": "specialty",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5900:23:1",
=======
                  "scope": 1295,
                  "src": "6385:23:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5900:6:1",
=======
                    "src": "6385:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "name": "cedula",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5933:20:1",
=======
                  "scope": 1295,
                  "src": "6419:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5933:6:1",
=======
                    "src": "6419:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "name": "email",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5963:19:1",
=======
                  "scope": 1295,
                  "src": "6450:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5963:6:1",
=======
                    "src": "6450:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "hashPicture",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5992:25:1",
=======
                  "scope": 1295,
                  "src": "6480:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5992:6:1",
=======
                    "src": "6480:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5862:156:1"
            },
            "scope": 1413,
            "src": "5771:1258:1",
=======
              "src": "6345:161:1"
            },
            "scope": 1417,
            "src": "6254:1298:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1390,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "7358:695:1",
=======
              "src": "7889:716:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1305,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1293,
                          "src": "7376:8:1",
=======
                          "referencedDeclaration": 1297,
                          "src": "7908:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7388:42:1",
=======
                          "src": "7920:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "7376:54:1",
=======
                        "src": "7908:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7368:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "7900:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7368:63:1",
=======
                    "src": "7900:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "7368:63:1"
=======
                  "src": "7900:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1311,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1295,
                            "src": "7449:5:1",
=======
                            "referencedDeclaration": 1299,
                            "src": "7982:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "7458:1:1",
=======
                            "src": "7991:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "7449:10:1",
=======
                          "src": "7982:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1314,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1295,
                            "src": "7463:5:1",
=======
                            "referencedDeclaration": 1299,
                            "src": "7996:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              },
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "7472:1:1",
=======
                                "src": "8005:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323536",
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "7475:3:1",
=======
                                "src": "8008:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
<<<<<<< HEAD
                              "src": "7472:6:1",
=======
                              "src": "8005:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "7481:1:1",
=======
                              "src": "8014:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "7472:10:1",
=======
                            "src": "8005:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            }
                          },
<<<<<<< HEAD
                          "src": "7463:19:1",
=======
                          "src": "7996:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "7449:33:1",
=======
                        "src": "7982:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7441:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "7974:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7441:42:1",
=======
                    "src": "7974:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "7441:42:1"
=======
                  "src": "7974:42:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1325,
                              "name": "fileToMedic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
<<<<<<< HEAD
                              "src": "7501:11:1",
=======
                              "src": "8035:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                              }
                            },
                            "id": 1327,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1326,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1293,
                              "src": "7513:8:1",
=======
                              "referencedDeclaration": 1297,
                              "src": "8047:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "7501:21:1",
=======
                            "src": "8035:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "7501:28:1",
=======
                          "src": "8035:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7532:1:1",
=======
                          "src": "8066:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "7501:32:1",
=======
                        "src": "8035:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7493:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "8027:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7493:41:1",
=======
                    "src": "8027:41:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "7493:41:1"
=======
                  "src": "8027:41:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1334,
                      "name": "_queryDate",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1390,
                      "src": "7545:18:1",
=======
                      "scope": 1394,
                      "src": "8081:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "7545:7:1",
=======
                        "src": "8081:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1336,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1335,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "7566:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "8102:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "7545:24:1"
=======
                  "src": "8081:24:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1338,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1390,
                      "src": "7579:11:1",
=======
                      "scope": 1394,
                      "src": "8116:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "7579:7:1",
=======
                        "src": "8116:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1342,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1293,
                        "src": "7608:8:1",
=======
                        "referencedDeclaration": 1297,
                        "src": "8145:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1339,
                      "name": "getMedicsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1412,
                      "src": "7593:14:1",
=======
                      "referencedDeclaration": 1416,
                      "src": "8130:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7593:24:1",
=======
                    "src": "8130:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "7579:38:1"
=======
                  "src": "8116:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "body": {
                    "id": 1384,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "7662:360:1",
=======
                    "src": "8201:371:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1353,
                                  "name": "fileToMedic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
<<<<<<< HEAD
                                  "src": "7680:11:1",
=======
                                  "src": "8220:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                  }
                                },
                                "id": 1355,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1354,
                                  "name": "_account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 1293,
                                  "src": "7692:8:1",
=======
                                  "referencedDeclaration": 1297,
                                  "src": "8232:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
<<<<<<< HEAD
                                "src": "7680:21:1",
=======
                                "src": "8220:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                  "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                                }
                              },
                              "id": 1357,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1356,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1344,
                                "src": "7702:1:1",
=======
                                "referencedDeclaration": 1348,
                                "src": "8242:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "7680:24:1",
=======
                              "src": "8220:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Medico_$726_storage",
                                "typeString": "struct MedicsRegister.Medico storage ref"
                              }
                            },
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
<<<<<<< HEAD
                            "src": "7680:29:1",
=======
                            "src": "8220:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1359,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1295,
                            "src": "7713:5:1",
=======
                            "referencedDeclaration": 1299,
                            "src": "8253:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "7680:38:1",
=======
                          "src": "8220:38:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1383,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "7676:336:1",
=======
                        "src": "8216:345:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "trueBody": {
                          "id": 1382,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "7720:292:1",
=======
                          "src": "8260:301:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "statements": [
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1362,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                    "referencedDeclaration": 1293,
                                    "src": "7777:8:1",
=======
                                    "referencedDeclaration": 1297,
                                    "src": "8319:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1363,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
<<<<<<< HEAD
                                      "referencedDeclaration": 3088,
                                      "src": "7807:3:1",
=======
                                      "referencedDeclaration": 3207,
                                      "src": "8350:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                    "src": "7807:10:1",
=======
                                    "src": "8350:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1365,
                                          "name": "fileToMedic",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 731,
<<<<<<< HEAD
                                          "src": "7839:11:1",
=======
                                          "src": "8383:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1367,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1366,
                                          "name": "_account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
<<<<<<< HEAD
                                          "referencedDeclaration": 1293,
                                          "src": "7851:8:1",
=======
                                          "referencedDeclaration": 1297,
                                          "src": "8395:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "7839:21:1",
=======
                                        "src": "8383:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                          "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1369,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1368,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
<<<<<<< HEAD
                                        "referencedDeclaration": 1344,
                                        "src": "7861:1:1",
=======
                                        "referencedDeclaration": 1348,
                                        "src": "8405:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                                      "src": "7839:24:1",
=======
                                      "src": "8383:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Medico_$726_storage",
                                        "typeString": "struct MedicsRegister.Medico storage ref"
                                      }
                                    },
                                    "id": 1370,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hashPicture",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 723,
<<<<<<< HEAD
                                    "src": "7839:36:1",
=======
                                    "src": "8383:36:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1371,
                                    "name": "_queryDate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                    "referencedDeclaration": 1334,
                                    "src": "7897:10:1",
=======
                                    "referencedDeclaration": 1338,
                                    "src": "8442:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1361,
                                  "name": "MedicsDelete",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
<<<<<<< HEAD
                                  "src": "7743:12:1",
=======
                                  "src": "8284:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,string memory,uint256)"
                                  }
                                },
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "7743:182:1",
=======
                                "src": "8284:187:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1373,
                              "nodeType": "EmitStatement",
<<<<<<< HEAD
                              "src": "7738:187:1"
=======
                              "src": "8279:192:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "7943:31:1",
=======
                                "src": "8490:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1374,
                                      "name": "fileToMedic",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 731,
<<<<<<< HEAD
                                      "src": "7950:11:1",
=======
                                      "src": "8497:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 1376,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1375,
                                      "name": "_account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
<<<<<<< HEAD
                                      "referencedDeclaration": 1293,
                                      "src": "7962:8:1",
=======
                                      "referencedDeclaration": 1297,
                                      "src": "8509:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "7950:21:1",
=======
                                    "src": "8497:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                      "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1378,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1377,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                    "referencedDeclaration": 1344,
                                    "src": "7972:1:1",
=======
                                    "referencedDeclaration": 1348,
                                    "src": "8519:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "7950:24:1",
=======
                                  "src": "8497:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Medico_$726_storage",
                                    "typeString": "struct MedicsRegister.Medico storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1380,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "7943:31:1"
=======
                              "src": "8490:31:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            },
                            {
                              "id": 1381,
                              "nodeType": "Break",
<<<<<<< HEAD
                              "src": "7992:5:1"
=======
                              "src": "8540:5:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1347,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1344,
                      "src": "7648:1:1",
=======
                      "referencedDeclaration": 1348,
                      "src": "8187:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1348,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1338,
                      "src": "7652:3:1",
=======
                      "referencedDeclaration": 1342,
                      "src": "8191:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "7648:7:1",
=======
                    "src": "8187:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1385,
                  "initializationExpression": {
                    "assignments": [
                      1344
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1344,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 1385,
                        "src": "7633:9:1",
=======
                        "scope": 1389,
                        "src": "8172:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "7633:7:1",
=======
                          "src": "8172:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1346,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "7645:1:1",
=======
                      "src": "8184:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "7633:13:1"
=======
                    "src": "8172:13:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "7657:3:1",
=======
                      "src": "8196:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1350,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1344,
                        "src": "7657:1:1",
=======
                        "referencedDeclaration": 1348,
                        "src": "8196:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1352,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "7657:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "7628:394:1"
=======
                    "src": "8196:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "8167:405:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1386,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1302,
                      "src": "8031:8:1",
=======
                      "referencedDeclaration": 1306,
                      "src": "8582:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "8042:4:1",
=======
                      "src": "8593:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "8031:15:1",
=======
                    "src": "8582:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "8031:15:1"
=======
                  "src": "8582:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Returns el medico en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account The owner address\n@return _date The uploaded timestamp",
            "id": 1391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1298,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1297,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "7311:12:1",
=======
                  "src": "7842:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "7311:12:1"
=======
                "src": "7842:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 1300,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1299,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "7324:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "7855:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "7324:9:1"
=======
                "src": "7855:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "deleteMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1293,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1391,
                  "src": "7271:16:1",
=======
                  "scope": 1395,
                  "src": "7802:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "7271:7:1",
=======
                    "src": "7802:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1391,
                  "src": "7289:13:1",
=======
                  "scope": 1395,
                  "src": "7820:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "7289:7:1",
=======
                    "src": "7820:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7270:33:1"
=======
              "src": "7801:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1391,
                  "src": "7343:13:1",
=======
                  "scope": 1395,
                  "src": "7874:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "7343:4:1",
=======
                    "src": "7874:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7342:15:1"
            },
            "scope": 1413,
            "src": "7249:804:1",
=======
              "src": "7873:15:1"
            },
            "scope": 1417,
            "src": "7780:825:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1411,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "8335:121:1",
=======
              "src": "8895:124:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1401,
                          "name": "_medic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1393,
                          "src": "8353:6:1",
=======
                          "referencedDeclaration": 1397,
                          "src": "8914:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "8363:42:1",
=======
                          "src": "8924:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "8353:52:1",
=======
                        "src": "8914:52:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "8345:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "8906:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8345:61:1",
=======
                    "src": "8906:61:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "8345:61:1"
=======
                  "src": "8906:61:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1406,
                        "name": "fileToMedic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
<<<<<<< HEAD
                        "src": "8423:11:1",
=======
                        "src": "8985:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                        }
                      },
                      "id": 1408,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1407,
                        "name": "_medic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1393,
                        "src": "8435:6:1",
=======
                        "referencedDeclaration": 1397,
                        "src": "8997:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "8423:19:1",
=======
                      "src": "8985:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                        "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "8423:26:1",
=======
                    "src": "8985:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1399,
                  "id": 1410,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "8416:33:1"
=======
                  "src": "8978:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Retorna el numero de medicos de esa direccion\n@dev Controlado por el switch\n@param _medic El dueño de la dirección\n@return Retorna el médico",
            "id": 1412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1395,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "8304:12:1",
=======
                  "src": "8864:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "8304:12:1"
=======
                "src": "8864:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "getMedicsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1412,
                  "src": "8274:14:1",
=======
                  "scope": 1416,
                  "src": "8834:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "8274:7:1",
=======
                    "src": "8834:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8273:16:1"
=======
              "src": "8833:16:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1398,
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1412,
                  "src": "8326:7:1",
=======
                  "scope": 1416,
                  "src": "8886:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "8326:7:1",
=======
                    "src": "8886:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8325:9:1"
            },
            "scope": 1413,
            "src": "8250:206:1",
=======
              "src": "8885:9:1"
            },
            "scope": 1417,
            "src": "8810:209:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 1414,
        "src": "274:8184:1"
      }
    ],
    "src": "0:8459:1"
=======
        "scope": 1418,
        "src": "284:8738:1"
      }
    ],
    "src": "0:9024:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/MedicsRegister.sol",
    "exportedSymbols": {
      "MedicsRegister": [
        1413
      ]
    },
    "id": 1414,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 710,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/C/Users/Lili/Documents/GitHub/Medical_Block/MedicalHistory-BlockChainProject/backend/contracts/acceso/UserRoles.sol",
        "file": "./acceso/UserRoles.sol",
        "id": 711,
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 1414,
        "sourceUnit": 2993,
        "src": "24:32:1",
=======
        "scope": 1418,
        "sourceUnit": 3112,
        "src": "25:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 712,
              "name": "UserRoles",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 2992,
              "src": "301:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserRoles_$2992",
=======
              "referencedDeclaration": 3111,
              "src": "311:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UserRoles_$3111",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                "typeString": "contract UserRoles"
              }
            },
            "id": 713,
            "nodeType": "InheritanceSpecifier",
            "src": "311:9:1"
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          2992
=======
          3111
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
        ],
        "contractKind": "contract",
        "documentation": "@title Smart Contract de Registro de médicos.\n@author Francisco Alemán\n@notice Este contrato representa el registro de los médicos.\n@dev El contrato hereda las funciones del contrato de roles",
        "fullyImplemented": true,
        "id": 1413,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          1413,
          2992
=======
          1417,
          3111
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
        ],
        "name": "MedicsRegister",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MedicsRegister.Medico",
            "id": 726,
            "members": [
              {
                "constant": false,
                "id": 715,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "424:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 714,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "424:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 717,
                "name": "specialty",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "446:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 716,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 719,
                "name": "cedula",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "473:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 718,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 721,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "497:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 720,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 723,
                "name": "hashPicture",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "520:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 722,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 725,
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 726,
                "src": "549:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 724,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "549:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Medico",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 1413,
            "src": "384:163:1",
=======
            "scope": 1417,
            "src": "399:170:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 731,
            "name": "fileToMedic",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "scope": 1413,
            "src": "617:48:1",
=======
            "scope": 1417,
            "src": "644:48:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct MedicsRegister.Medico[])"
            },
            "typeName": {
              "id": 730,
              "keyType": {
                "id": 727,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "644:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct MedicsRegister.Medico[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 728,
                  "name": "Medico",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 726,
                  "src": "664:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                    "typeString": "struct MedicsRegister.Medico"
                  }
                },
                "id": 729,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "664:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage_ptr",
                  "typeString": "struct MedicsRegister.Medico[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 734,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "scope": 1413,
            "src": "743:28:1",
=======
            "scope": 1417,
            "src": "775:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 732,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "775:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 733,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "798:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@dev Eventos que serán registrados en la blockchain.",
            "id": 752,
            "name": "MedicsAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "921:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "954:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "indexed": false,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "987:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "indexed": false,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1010:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 744,
                  "indexed": false,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1038:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "indexed": false,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1063:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1087:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1117:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "910:221:1"
            },
            "src": "893:239:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 772,
            "name": "MedicsUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1169:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1202:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "indexed": false,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1235:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "indexed": false,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1258:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "indexed": false,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1286:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "indexed": false,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1311:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1335:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1365:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "indexed": false,
                  "name": "_queryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "1389:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1158:250:1"
            },
            "src": "1140:269:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 792,
            "name": "MedicsRetrieve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1448:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1481:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "indexed": false,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1514:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "indexed": false,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1537:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "indexed": false,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1565:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "indexed": false,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1590:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1615:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 788,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1646:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "indexed": false,
                  "name": "_queryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 792,
                  "src": "1670:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1437:252:1"
            },
            "src": "1417:273:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 802,
            "name": "MedicsDelete",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "indexed": true,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1727:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1760:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "indexed": false,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1793:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "indexed": false,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "1823:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1716:121:1"
            },
            "src": "1698:140:1"
          },
          {
            "anonymous": false,
            "documentation": "@dev Indica que se ha puesto el contrato en pausa.\n@param _admin Un administrador\n@param _stop Indica cuando hay una pausa o una reanudación.",
            "id": 808,
            "name": "LogSwitchStop",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "2057:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "indexed": false,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "2090:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2046:61:1"
            },
            "src": "2027:81:1"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "2203:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2222:8:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 811,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "2223:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "2125:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "2214:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:17:1"
                },
                {
                  "id": 815,
                  "nodeType": "PlaceholderStatement",
                  "src": "2242:1:1"
                }
              ]
            },
            "documentation": "@dev Previene de ejecución del contrato",
            "id": 817,
            "name": "nonlyStopped",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2203:0:1"
            },
            "src": "2181:70:1",
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 834,
              "nodeType": "Block",
              "src": "2439:79:1",
=======
              "id": 820,
              "nodeType": "Block",
              "src": "2517:2:1",
              "statements": []
            },
            "documentation": "@dev Está función será llamada para todos los mensajes que sean enviados a este contrado.\nEnviar Ether a este contrato ocasionará una excepción, dado que las funciones no tienen un modificador de pago.",
            "id": 821,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2505:2:1"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:0:1"
            },
            "scope": 1417,
            "src": "2497:22:1",
            "stateMutability": "nonpayable",
            "superFunction": 2796,
            "visibility": "external"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "2806:82:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 824,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
<<<<<<< HEAD
                      "src": "2449:7:1",
=======
                      "src": "2817:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 825,
                      "name": "_stop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 819,
                      "src": "2459:5:1",
=======
                      "referencedDeclaration": 823,
                      "src": "2827:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "2449:15:1",
=======
                    "src": "2817:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2449:15:1"
=======
                  "src": "2817:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 829,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "2493:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "2862:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "2493:10:1",
=======
                        "src": "2862:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "_stop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 819,
                        "src": "2505:5:1",
=======
                        "referencedDeclaration": 823,
                        "src": "2874:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 828,
                      "name": "LogSwitchStop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
<<<<<<< HEAD
                      "src": "2479:13:1",
=======
                      "src": "2848:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2479:32:1",
=======
                    "src": "2848:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "2474:37:1"
=======
                  "src": "2843:37:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Pausar el contrato\nSe detiene el contrato bajo ciertas condiciones.\nSera útil cuando nuevos errores sean descubiertos.\n@param _stop Switch del contrado de encendido/apagado",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 822,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 821,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "2429:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "2796:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2429:9:1"
=======
                "src": "2796:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "emergencyStop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 819,
                  "name": "_stop",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 835,
                  "src": "2410:10:1",
=======
                  "scope": 839,
                  "src": "2777:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2410:4:1",
=======
                    "src": "2777:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2409:12:1"
=======
              "src": "2776:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2439:0:1"
            },
            "scope": 1413,
            "src": "2387:131:1",
=======
              "src": "2806:0:1"
            },
            "scope": 1417,
            "src": "2754:134:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3058:801:1",
=======
              "src": "3447:832:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 857,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 837,
                          "src": "3076:8:1",
=======
                          "referencedDeclaration": 841,
                          "src": "3466:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3088:42:1",
=======
                          "src": "3478:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "3076:54:1",
=======
                        "src": "3466:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3068:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3458:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3068:63:1",
=======
                    "src": "3458:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3068:63:1"
=======
                  "src": "3458:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 864,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 839,
                                "src": "3155:5:1",
=======
                                "referencedDeclaration": 843,
                                "src": "3546:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3149:5:1",
=======
                              "src": "3540:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3149:12:1",
=======
                            "src": "3540:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3149:19:1",
=======
                          "src": "3540:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313238",
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3171:3:1",
=======
                          "src": "3562:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_128_by_1",
                            "typeString": "int_const 128"
                          },
                          "value": "128"
                        },
<<<<<<< HEAD
                        "src": "3149:25:1",
=======
                        "src": "3540:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3141:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3532:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3141:34:1",
=======
                    "src": "3532:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3141:34:1"
=======
                  "src": "3532:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 873,
                                "name": "_specialty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 841,
                                "src": "3199:10:1",
=======
                                "referencedDeclaration": 845,
                                "src": "3591:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3193:5:1",
=======
                              "src": "3585:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3193:17:1",
=======
                            "src": "3585:17:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3193:24:1",
=======
                          "src": "3585:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3220:2:1",
=======
                          "src": "3612:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3193:29:1",
=======
                        "src": "3585:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3185:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3577:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3185:38:1",
=======
                    "src": "3577:38:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3185:38:1"
=======
                  "src": "3577:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 882,
                                "name": "_cedula",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 843,
                                "src": "3247:7:1",
=======
                                "referencedDeclaration": 847,
                                "src": "3640:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3241:5:1",
=======
                              "src": "3634:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3241:14:1",
=======
                            "src": "3634:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3241:21:1",
=======
                          "src": "3634:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3265:2:1",
=======
                          "src": "3658:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3241:26:1",
=======
                        "src": "3634:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3233:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3626:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3233:35:1",
=======
                    "src": "3626:35:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3233:35:1"
=======
                  "src": "3626:35:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 891,
                                "name": "_email",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 845,
                                "src": "3292:6:1",
=======
                                "referencedDeclaration": 849,
                                "src": "3686:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3286:5:1",
=======
                              "src": "3680:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3286:13:1",
=======
                            "src": "3680:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3286:20:1",
=======
                          "src": "3680:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3309:2:1",
=======
                          "src": "3703:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3286:25:1",
=======
                        "src": "3680:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3278:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3672:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3278:34:1",
=======
                    "src": "3672:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3278:34:1"
=======
                  "src": "3672:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 900,
                                "name": "_hashPicture",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 847,
                                "src": "3336:12:1",
=======
                                "referencedDeclaration": 851,
                                "src": "3731:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3330:5:1",
=======
                              "src": "3725:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3330:19:1",
=======
                            "src": "3725:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3330:26:1",
=======
                          "src": "3725:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3359:2:1",
=======
                          "src": "3754:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "3330:31:1",
=======
                        "src": "3725:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "3322:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "3717:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3322:40:1",
=======
                    "src": "3717:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3322:40:1"
=======
                  "src": "3717:40:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 908,
                      "name": "_date",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 945,
                      "src": "3373:13:1",
=======
                      "scope": 949,
                      "src": "3770:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "3373:7:1",
=======
                        "src": "3770:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 910,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 909,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "3389:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "3786:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3373:19:1"
=======
                  "src": "3770:19:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 912,
                      "name": "medico",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 945,
                      "src": "3402:20:1",
=======
                      "scope": 949,
                      "src": "3800:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                        "typeString": "struct MedicsRegister.Medico"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 911,
                        "name": "Medico",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 726,
<<<<<<< HEAD
                        "src": "3402:6:1",
=======
                        "src": "3800:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                          "typeString": "struct MedicsRegister.Medico"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 921,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 914,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 839,
                        "src": "3445:5:1",
=======
                        "referencedDeclaration": 843,
                        "src": "3844:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 915,
                        "name": "_specialty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 841,
                        "src": "3464:10:1",
=======
                        "referencedDeclaration": 845,
                        "src": "3864:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 916,
                        "name": "_cedula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 843,
                        "src": "3488:7:1",
=======
                        "referencedDeclaration": 847,
                        "src": "3889:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 845,
                        "src": "3509:6:1",
=======
                        "referencedDeclaration": 849,
                        "src": "3911:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 918,
                        "name": "_hashPicture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 847,
                        "src": "3529:12:1",
=======
                        "referencedDeclaration": 851,
                        "src": "3932:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 919,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 908,
                        "src": "3555:5:1",
=======
                        "referencedDeclaration": 912,
                        "src": "3959:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 913,
                      "name": "Medico",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
<<<<<<< HEAD
                      "src": "3425:6:1",
=======
                      "src": "3823:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Medico_$726_storage_ptr_$",
                        "typeString": "type(struct MedicsRegister.Medico storage pointer)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3425:145:1",
=======
                    "src": "3823:152:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Medico_$726_memory",
                      "typeString": "struct MedicsRegister.Medico memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3402:168:1"
=======
                  "src": "3800:175:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 926,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 912,
                        "src": "3608:6:1",
=======
                        "referencedDeclaration": 916,
                        "src": "4015:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "fileToMedic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
<<<<<<< HEAD
                          "src": "3581:11:1",
=======
                          "src": "3988:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                          }
                        },
                        "id": 924,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 923,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 837,
                          "src": "3593:8:1",
=======
                          "referencedDeclaration": 841,
                          "src": "4000:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "3581:21:1",
=======
                        "src": "3988:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                          "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "3581:26:1",
=======
                      "src": "3988:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Medico_$726_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct MedicsRegister.Medico storage ref) returns (uint256)"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3581:34:1",
=======
                    "src": "3988:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3581:34:1"
=======
                  "src": "3988:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 930,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 837,
                        "src": "3656:8:1",
=======
                        "referencedDeclaration": 841,
                        "src": "4066:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 931,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "3678:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "4089:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "3678:10:1",
=======
                        "src": "4089:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 933,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 839,
                        "src": "3702:5:1",
=======
                        "referencedDeclaration": 843,
                        "src": "4114:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "_specialty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 841,
                        "src": "3721:10:1",
=======
                        "referencedDeclaration": 845,
                        "src": "4134:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 935,
                        "name": "_cedula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 843,
                        "src": "3745:7:1",
=======
                        "referencedDeclaration": 847,
                        "src": "4159:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 936,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 845,
                        "src": "3766:6:1",
=======
                        "referencedDeclaration": 849,
                        "src": "4181:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 937,
                        "name": "_hashPicture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 847,
                        "src": "3786:12:1",
=======
                        "referencedDeclaration": 851,
                        "src": "4202:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 938,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 908,
                        "src": "3812:5:1",
=======
                        "referencedDeclaration": 912,
                        "src": "4229:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 929,
                      "name": "MedicsAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
<<<<<<< HEAD
                      "src": "3631:11:1",
=======
                      "src": "4040:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,string memory,uint256)"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3631:196:1",
=======
                    "src": "4040:205:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "3626:201:1"
=======
                  "src": "4035:210:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 941,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 854,
                      "src": "3837:8:1",
=======
                      "referencedDeclaration": 858,
                      "src": "4256:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3848:4:1",
=======
                      "src": "4267:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "3837:15:1",
=======
                    "src": "4256:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3837:15:1"
=======
                  "src": "4256:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@dev Función para agregar un médico. Esta función es realizada por un administrador.\n@param _account a\n@param _name a\n@param _specialty a\n@param _cedula a\n@param _email a\n@param _hashPicture a\n@return _success a",
            "id": 946,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 850,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 849,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "3011:12:1",
=======
                  "src": "3400:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3011:12:1"
=======
                "src": "3400:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 852,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 851,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "3024:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "3413:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3024:9:1"
=======
                "src": "3413:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "addMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2822:16:1",
=======
                  "scope": 950,
                  "src": "3205:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2822:7:1",
=======
                    "src": "3205:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2848:19:1",
=======
                  "scope": 950,
                  "src": "3232:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2848:6:1",
=======
                    "src": "3232:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2877:24:1",
=======
                  "scope": 950,
                  "src": "3262:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2877:6:1",
=======
                    "src": "3262:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2911:21:1",
=======
                  "scope": 950,
                  "src": "3297:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2911:6:1",
=======
                    "src": "3297:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2942:20:1",
=======
                  "scope": 950,
                  "src": "3329:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2942:6:1",
=======
                    "src": "3329:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "2972:26:1",
=======
                  "scope": 950,
                  "src": "3360:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2972:6:1",
=======
                    "src": "3360:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2812:187:1"
=======
              "src": "3194:193:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 946,
                  "src": "3043:13:1",
=======
                  "scope": 950,
                  "src": "3432:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3043:4:1",
=======
                    "src": "3432:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3042:15:1"
            },
            "scope": 1413,
            "src": "2794:1065:1",
=======
              "src": "3431:15:1"
            },
            "scope": 1417,
            "src": "3176:1103:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1142,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "4343:1208:1",
=======
              "src": "4779:1247:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 970,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 948,
                          "src": "4361:8:1",
=======
                          "referencedDeclaration": 952,
                          "src": "4798:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4373:42:1",
=======
                          "src": "4810:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "4361:54:1",
=======
                        "src": "4798:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4353:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4790:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4353:63:1",
=======
                    "src": "4790:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4353:63:1"
=======
                  "src": "4790:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 977,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 950,
                                "src": "4440:5:1",
=======
                                "referencedDeclaration": 954,
                                "src": "4878:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4434:5:1",
=======
                              "src": "4872:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4434:12:1",
=======
                            "src": "4872:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4434:19:1",
=======
                          "src": "4872:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313238",
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4456:3:1",
=======
                          "src": "4894:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_128_by_1",
                            "typeString": "int_const 128"
                          },
                          "value": "128"
                        },
<<<<<<< HEAD
                        "src": "4434:25:1",
=======
                        "src": "4872:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4426:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4864:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4426:34:1",
=======
                    "src": "4864:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4426:34:1"
=======
                  "src": "4864:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 986,
                                "name": "_specialty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 952,
                                "src": "4484:10:1",
=======
                                "referencedDeclaration": 956,
                                "src": "4923:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4478:5:1",
=======
                              "src": "4917:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4478:17:1",
=======
                            "src": "4917:17:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4478:24:1",
=======
                          "src": "4917:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4505:2:1",
=======
                          "src": "4944:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4478:29:1",
=======
                        "src": "4917:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4470:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4909:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4470:38:1",
=======
                    "src": "4909:38:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4470:38:1"
=======
                  "src": "4909:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 995,
                                "name": "_cedula",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 954,
                                "src": "4532:7:1",
=======
                                "referencedDeclaration": 958,
                                "src": "4972:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4526:5:1",
=======
                              "src": "4966:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4526:14:1",
=======
                            "src": "4966:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4526:21:1",
=======
                          "src": "4966:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4550:2:1",
=======
                          "src": "4990:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4526:26:1",
=======
                        "src": "4966:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4518:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "4958:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4518:35:1",
=======
                    "src": "4958:35:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4518:35:1"
=======
                  "src": "4958:35:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1004,
                                "name": "_email",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 956,
                                "src": "4577:6:1",
=======
                                "referencedDeclaration": 960,
                                "src": "5018:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4571:5:1",
=======
                              "src": "5012:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4571:13:1",
=======
                            "src": "5012:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4571:20:1",
=======
                          "src": "5012:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4594:2:1",
=======
                          "src": "5035:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4571:25:1",
=======
                        "src": "5012:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4563:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5004:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4563:34:1",
=======
                    "src": "5004:34:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4563:34:1"
=======
                  "src": "5004:34:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1013,
                                "name": "_hashPicture",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 958,
                                "src": "4621:12:1",
=======
                                "referencedDeclaration": 962,
                                "src": "5063:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4615:5:1",
=======
                              "src": "5057:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4615:19:1",
=======
                            "src": "5057:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4615:26:1",
=======
                          "src": "5057:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4644:2:1",
=======
                          "src": "5086:2:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
<<<<<<< HEAD
                        "src": "4615:31:1",
=======
                        "src": "5057:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4607:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5049:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4607:40:1",
=======
                    "src": "5049:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4607:40:1"
=======
                  "src": "5049:40:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1021,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 960,
                            "src": "4665:5:1",
=======
                            "referencedDeclaration": 964,
                            "src": "5108:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4674:1:1",
=======
                            "src": "5117:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "4665:10:1",
=======
                          "src": "5108:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1024,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 960,
                            "src": "4679:5:1",
=======
                            "referencedDeclaration": 964,
                            "src": "5122:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "4688:1:1",
=======
                                "src": "5131:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323536",
                                "id": 1026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "4691:3:1",
=======
                                "src": "5134:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
<<<<<<< HEAD
                              "src": "4688:6:1",
=======
                              "src": "5131:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4697:1:1",
=======
                              "src": "5140:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "4688:10:1",
=======
                            "src": "5131:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            }
                          },
<<<<<<< HEAD
                          "src": "4679:19:1",
=======
                          "src": "5122:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "4665:33:1",
=======
                        "src": "5108:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4657:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5100:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4657:42:1",
=======
                    "src": "5100:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4657:42:1"
=======
                  "src": "5100:42:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1035,
                              "name": "fileToMedic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
<<<<<<< HEAD
                              "src": "4717:11:1",
=======
                              "src": "5161:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                              }
                            },
                            "id": 1037,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1036,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 948,
                              "src": "4729:8:1",
=======
                              "referencedDeclaration": 952,
                              "src": "5173:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "4717:21:1",
=======
                            "src": "5161:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "4717:28:1",
=======
                          "src": "5161:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4748:1:1",
=======
                          "src": "5192:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "4717:32:1",
=======
                        "src": "5161:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "4709:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "5153:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4709:41:1",
=======
                    "src": "5153:41:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "4709:41:1"
=======
                  "src": "5153:41:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1044,
                      "name": "_queryDate",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1142,
                      "src": "4761:18:1",
=======
                      "scope": 1146,
                      "src": "5207:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1043,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "4761:7:1",
=======
                        "src": "5207:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1046,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1045,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "4782:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "5228:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4761:24:1"
=======
                  "src": "5207:24:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1048,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1142,
                      "src": "4795:11:1",
=======
                      "scope": 1146,
                      "src": "5242:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1047,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "4795:7:1",
=======
                        "src": "5242:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 948,
                        "src": "4824:8:1",
=======
                        "referencedDeclaration": 952,
                        "src": "5271:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1049,
                      "name": "getMedicsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1412,
                      "src": "4809:14:1",
=======
                      "referencedDeclaration": 1416,
                      "src": "5256:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4809:24:1",
=======
                    "src": "5256:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4795:38:1"
=======
                  "src": "5242:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1054,
                      "name": "medico",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1142,
                      "src": "4843:20:1",
=======
                      "scope": 1146,
                      "src": "5291:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                        "typeString": "struct MedicsRegister.Medico"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1053,
                        "name": "Medico",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 726,
<<<<<<< HEAD
                        "src": "4843:6:1",
=======
                        "src": "5291:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                          "typeString": "struct MedicsRegister.Medico"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1055,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4843:20:1"
=======
                  "src": "5291:20:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "body": {
                    "id": 1081,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "4907:135:1",
=======
                    "src": "5356:140:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1066,
                            "name": "medico",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1054,
                            "src": "4921:6:1",
=======
                            "referencedDeclaration": 1058,
                            "src": "5371:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                              "typeString": "struct MedicsRegister.Medico memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1067,
                                "name": "fileToMedic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
<<<<<<< HEAD
                                "src": "4930:11:1",
=======
                                "src": "5380:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                }
                              },
                              "id": 1069,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1068,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 948,
                                "src": "4942:8:1",
=======
                                "referencedDeclaration": 952,
                                "src": "5392:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "4930:21:1",
=======
                              "src": "5380:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                              }
                            },
                            "id": 1071,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1070,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1057,
                              "src": "4952:1:1",
=======
                              "referencedDeclaration": 1061,
                              "src": "5402:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "4930:24:1",
=======
                            "src": "5380:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref"
                            }
                          },
<<<<<<< HEAD
                          "src": "4921:33:1",
=======
                          "src": "5371:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1073,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "4921:33:1"
=======
                        "src": "5371:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1074,
                              "name": "medico",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1054,
                              "src": "4972:6:1",
=======
                              "referencedDeclaration": 1058,
                              "src": "5423:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                                "typeString": "struct MedicsRegister.Medico memory"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
<<<<<<< HEAD
                            "src": "4972:11:1",
=======
                            "src": "5423:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1076,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 960,
                            "src": "4987:5:1",
=======
                            "referencedDeclaration": 964,
                            "src": "5438:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "4972:20:1",
=======
                          "src": "5423:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1080,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "4968:64:1",
=======
                        "src": "5419:66:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "trueBody": {
                          "id": 1079,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "4994:38:1",
=======
                          "src": "5445:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "statements": [
                            {
                              "id": 1078,
                              "nodeType": "Break",
<<<<<<< HEAD
                              "src": "5012:5:1"
=======
                              "src": "5464:5:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1060,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1057,
                      "src": "4893:1:1",
=======
                      "referencedDeclaration": 1061,
                      "src": "5342:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1061,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1048,
                      "src": "4897:3:1",
=======
                      "referencedDeclaration": 1052,
                      "src": "5346:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "4893:7:1",
=======
                    "src": "5342:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1082,
                  "initializationExpression": {
                    "assignments": [
                      1057
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1057,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 1082,
                        "src": "4878:9:1",
=======
                        "scope": 1086,
                        "src": "5327:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "4878:7:1",
=======
                          "src": "5327:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1059,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4890:1:1",
=======
                      "src": "5339:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "4878:13:1"
=======
                    "src": "5327:13:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "4902:3:1",
=======
                      "src": "5351:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1057,
                        "src": "4902:1:1",
=======
                        "referencedDeclaration": 1061,
                        "src": "5351:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1065,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "4902:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4873:169:1"
=======
                    "src": "5351:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "5322:174:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5052:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5508:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 715,
<<<<<<< HEAD
                      "src": "5052:11:1",
=======
                      "src": "5508:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1086,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 950,
                      "src": "5066:5:1",
=======
                      "referencedDeclaration": 954,
                      "src": "5522:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5052:19:1",
=======
                    "src": "5508:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5052:19:1"
=======
                  "src": "5508:19:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1089,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5081:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5538:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "specialty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
<<<<<<< HEAD
                      "src": "5081:16:1",
=======
                      "src": "5538:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1092,
                      "name": "_specialty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 952,
                      "src": "5100:10:1",
=======
                      "referencedDeclaration": 956,
                      "src": "5557:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5081:29:1",
=======
                    "src": "5538:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5081:29:1"
=======
                  "src": "5538:29:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5120:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5578:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cedula",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
<<<<<<< HEAD
                      "src": "5120:13:1",
=======
                      "src": "5578:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1098,
                      "name": "_cedula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 954,
                      "src": "5136:7:1",
=======
                      "referencedDeclaration": 958,
                      "src": "5594:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5120:23:1",
=======
                    "src": "5578:23:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5120:23:1"
=======
                  "src": "5578:23:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1101,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5153:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5612:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
<<<<<<< HEAD
                      "src": "5153:12:1",
=======
                      "src": "5612:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1104,
                      "name": "_email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 956,
                      "src": "5168:6:1",
=======
                      "referencedDeclaration": 960,
                      "src": "5627:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5153:21:1",
=======
                    "src": "5612:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1106,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5153:21:1"
=======
                  "src": "5612:21:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5184:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5644:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hashPicture",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
<<<<<<< HEAD
                      "src": "5184:18:1",
=======
                      "src": "5644:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1110,
                      "name": "_hashPicture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 958,
                      "src": "5205:12:1",
=======
                      "referencedDeclaration": 962,
                      "src": "5665:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5184:33:1",
=======
                    "src": "5644:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5184:33:1"
=======
                  "src": "5644:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1113,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1054,
                        "src": "5227:6:1",
=======
                        "referencedDeclaration": 1058,
                        "src": "5688:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 725,
<<<<<<< HEAD
                      "src": "5227:11:1",
=======
                      "src": "5688:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1116,
                      "name": "_date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 960,
                      "src": "5241:5:1",
=======
                      "referencedDeclaration": 964,
                      "src": "5702:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "5227:19:1",
=======
                    "src": "5688:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5227:19:1"
=======
                  "src": "5688:19:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1120,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 948,
                        "src": "5288:8:1",
=======
                        "referencedDeclaration": 952,
                        "src": "5752:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "5310:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "5775:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "5310:10:1",
=======
                        "src": "5775:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1123,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5334:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5800:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 715,
<<<<<<< HEAD
                        "src": "5334:11:1",
=======
                        "src": "5800:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1125,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5359:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5826:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "specialty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 717,
<<<<<<< HEAD
                        "src": "5359:16:1",
=======
                        "src": "5826:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1127,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5389:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5857:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cedula",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 719,
<<<<<<< HEAD
                        "src": "5389:13:1",
=======
                        "src": "5857:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1129,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5416:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5885:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "email",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
<<<<<<< HEAD
                        "src": "5416:12:1",
=======
                        "src": "5885:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1131,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5442:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5912:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashPicture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
<<<<<<< HEAD
                        "src": "5442:18:1",
=======
                        "src": "5912:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1133,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1054,
                          "src": "5474:6:1",
=======
                          "referencedDeclaration": 1058,
                          "src": "5945:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
<<<<<<< HEAD
                        "src": "5474:11:1",
=======
                        "src": "5945:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "_queryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1044,
                        "src": "5499:10:1",
=======
                        "referencedDeclaration": 1048,
                        "src": "5971:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1119,
                      "name": "MedicsUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
<<<<<<< HEAD
                      "src": "5262:12:1",
=======
                      "src": "5725:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5262:257:1",
=======
                    "src": "5725:267:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "5257:262:1"
=======
                  "src": "5720:272:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1138,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 967,
                      "src": "5529:8:1",
=======
                      "referencedDeclaration": 971,
                      "src": "6003:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5540:4:1",
=======
                      "src": "6014:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "5529:15:1",
=======
                    "src": "6003:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5529:15:1"
=======
                  "src": "6003:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Returns el Medico en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account Cuenta del médico\n@return a",
            "id": 1143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 963,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 962,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "4296:12:1",
=======
                  "src": "4732:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4296:12:1"
=======
                "src": "4732:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 964,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "4309:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "4745:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "4309:9:1"
=======
                "src": "4745:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "updateMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4084:16:1",
=======
                  "scope": 1147,
                  "src": "4513:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4084:7:1",
=======
                    "src": "4513:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4110:19:1",
=======
                  "scope": 1147,
                  "src": "4540:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4110:6:1",
=======
                    "src": "4540:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 952,
                  "name": "_specialty",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4139:24:1",
=======
                  "scope": 1147,
                  "src": "4570:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4139:6:1",
=======
                    "src": "4570:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 954,
                  "name": "_cedula",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4173:21:1",
=======
                  "scope": 1147,
                  "src": "4605:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4173:6:1",
=======
                    "src": "4605:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4204:20:1",
=======
                  "scope": 1147,
                  "src": "4637:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4204:6:1",
=======
                    "src": "4637:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "name": "_hashPicture",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4234:26:1",
=======
                  "scope": 1147,
                  "src": "4668:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4234:6:1",
=======
                    "src": "4668:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 960,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4270:13:1",
=======
                  "scope": 1147,
                  "src": "4705:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4270:7:1",
=======
                    "src": "4705:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4074:210:1"
=======
              "src": "4502:217:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1143,
                  "src": "4328:13:1",
=======
                  "scope": 1147,
                  "src": "4764:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4328:4:1",
=======
                    "src": "4764:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4327:15:1"
            },
            "scope": 1413,
            "src": "4053:1498:1",
=======
              "src": "4763:15:1"
            },
            "scope": 1417,
            "src": "4481:1545:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1290,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "6019:1010:1",
=======
              "src": "6507:1045:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "6041:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "6530:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "6041:10:1",
=======
                        "src": "6530:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1164,
                      "name": "isAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 2690,
                      "src": "6033:7:1",
=======
                      "referencedDeclaration": 2809,
                      "src": "6522:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6033:19:1",
=======
                    "src": "6522:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1176,
                  "nodeType": "IfStatement",
<<<<<<< HEAD
                  "src": "6029:81:1",
=======
                  "src": "6518:83:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "trueBody": {
                    "id": 1175,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6054:56:1",
=======
                    "src": "6543:58:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1169,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 3088,
                                  "src": "6076:3:1",
=======
                                  "referencedDeclaration": 3207,
                                  "src": "6566:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
<<<<<<< HEAD
                                "src": "6076:10:1",
=======
                                "src": "6566:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1171,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1145,
                                "src": "6090:8:1",
=======
                                "referencedDeclaration": 1149,
                                "src": "6580:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
<<<<<<< HEAD
                              "src": "6076:22:1",
=======
                              "src": "6566:22:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1168,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
<<<<<<< HEAD
                              3091,
                              3092
                            ],
                            "referencedDeclaration": 3091,
                            "src": "6068:7:1",
=======
                              3210,
                              3211
                            ],
                            "referencedDeclaration": 3210,
                            "src": "6558:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6068:31:1",
=======
                          "src": "6558:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6068:31:1"
=======
                        "src": "6558:31:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1178,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1145,
                          "src": "6127:8:1",
=======
                          "referencedDeclaration": 1149,
                          "src": "6619:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6139:42:1",
=======
                          "src": "6631:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "6127:54:1",
=======
                        "src": "6619:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "6119:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "6611:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6119:63:1",
=======
                    "src": "6611:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6119:63:1"
=======
                  "src": "6611:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1184,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1147,
                            "src": "6200:5:1",
=======
                            "referencedDeclaration": 1151,
                            "src": "6693:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "6209:1:1",
=======
                            "src": "6702:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "6200:10:1",
=======
                          "src": "6693:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1187,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1147,
                            "src": "6214:5:1",
=======
                            "referencedDeclaration": 1151,
                            "src": "6707:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            },
                            "id": 1192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "6223:1:1",
=======
                                "src": "6716:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323536",
                                "id": 1189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "6226:3:1",
=======
                                "src": "6719:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
<<<<<<< HEAD
                              "src": "6223:6:1",
=======
                              "src": "6716:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "6232:1:1",
=======
                              "src": "6725:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "6223:10:1",
=======
                            "src": "6716:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            }
                          },
<<<<<<< HEAD
                          "src": "6214:19:1",
=======
                          "src": "6707:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "6200:33:1",
=======
                        "src": "6693:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "6192:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "6685:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6192:42:1",
=======
                    "src": "6685:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6192:42:1"
=======
                  "src": "6685:42:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1198,
                              "name": "fileToMedic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
<<<<<<< HEAD
                              "src": "6252:11:1",
=======
                              "src": "6746:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                              }
                            },
                            "id": 1200,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1199,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1145,
                              "src": "6264:8:1",
=======
                              "referencedDeclaration": 1149,
                              "src": "6758:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "6252:21:1",
=======
                            "src": "6746:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                            }
                          },
                          "id": 1201,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "6252:28:1",
=======
                          "src": "6746:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6283:1:1",
=======
                          "src": "6777:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "6252:32:1",
=======
                        "src": "6746:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "6244:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "6738:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6244:41:1",
=======
                    "src": "6738:41:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1205,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6244:41:1"
=======
                  "src": "6738:41:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "name": "_queryDate",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1290,
                      "src": "6296:18:1",
=======
                      "scope": 1294,
                      "src": "6792:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6296:7:1",
=======
                        "src": "6792:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1209,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1208,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "6317:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "6813:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6296:24:1"
=======
                  "src": "6792:24:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1211,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1290,
                      "src": "6330:11:1",
=======
                      "scope": 1294,
                      "src": "6827:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6330:7:1",
=======
                        "src": "6827:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1215,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1213,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1145,
                        "src": "6359:8:1",
=======
                        "referencedDeclaration": 1149,
                        "src": "6856:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1212,
                      "name": "getMedicsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1412,
                      "src": "6344:14:1",
=======
                      "referencedDeclaration": 1416,
                      "src": "6841:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6344:24:1",
=======
                    "src": "6841:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6330:38:1"
=======
                  "src": "6827:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1217,
                      "name": "medico",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1290,
                      "src": "6378:20:1",
=======
                      "scope": 1294,
                      "src": "6876:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                        "typeString": "struct MedicsRegister.Medico"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1216,
                        "name": "Medico",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 726,
<<<<<<< HEAD
                        "src": "6378:6:1",
=======
                        "src": "6876:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_storage_ptr",
                          "typeString": "struct MedicsRegister.Medico"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6378:20:1"
=======
                  "src": "6876:20:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "body": {
                    "id": 1244,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6443:135:1",
=======
                    "src": "6943:140:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1229,
                            "name": "medico",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1217,
                            "src": "6457:6:1",
=======
                            "referencedDeclaration": 1221,
                            "src": "6958:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                              "typeString": "struct MedicsRegister.Medico memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1230,
                                "name": "fileToMedic",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
<<<<<<< HEAD
                                "src": "6466:11:1",
=======
                                "src": "6967:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                }
                              },
                              "id": 1232,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1231,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1145,
                                "src": "6478:8:1",
=======
                                "referencedDeclaration": 1149,
                                "src": "6979:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "6466:21:1",
=======
                              "src": "6967:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                              }
                            },
                            "id": 1234,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1220,
                              "src": "6488:1:1",
=======
                              "referencedDeclaration": 1224,
                              "src": "6989:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "6466:24:1",
=======
                            "src": "6967:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Medico_$726_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref"
                            }
                          },
<<<<<<< HEAD
                          "src": "6457:33:1",
=======
                          "src": "6958:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6457:33:1"
=======
                        "src": "6958:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1237,
                              "name": "medico",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1217,
                              "src": "6508:6:1",
=======
                              "referencedDeclaration": 1221,
                              "src": "7010:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                                "typeString": "struct MedicsRegister.Medico memory"
                              }
                            },
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
<<<<<<< HEAD
                            "src": "6508:11:1",
=======
                            "src": "7010:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1239,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1147,
                            "src": "6523:5:1",
=======
                            "referencedDeclaration": 1151,
                            "src": "7025:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "6508:20:1",
=======
                          "src": "7010:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1243,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "6504:64:1",
=======
                        "src": "7006:66:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "trueBody": {
                          "id": 1242,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "6530:38:1",
=======
                          "src": "7032:40:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "statements": [
                            {
                              "id": 1241,
                              "nodeType": "Break",
<<<<<<< HEAD
                              "src": "6548:5:1"
=======
                              "src": "7051:5:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1220,
                      "src": "6429:1:1",
=======
                      "referencedDeclaration": 1224,
                      "src": "6929:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1224,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1211,
                      "src": "6433:3:1",
=======
                      "referencedDeclaration": 1215,
                      "src": "6933:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6429:7:1",
=======
                    "src": "6929:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1245,
                  "initializationExpression": {
                    "assignments": [
                      1220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1220,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 1245,
                        "src": "6414:9:1",
=======
                        "scope": 1249,
                        "src": "6914:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "6414:7:1",
=======
                          "src": "6914:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1222,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6426:1:1",
=======
                      "src": "6926:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6414:13:1"
=======
                    "src": "6914:13:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "6438:3:1",
=======
                      "src": "6938:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1226,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1220,
                        "src": "6438:1:1",
=======
                        "referencedDeclaration": 1224,
                        "src": "6938:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1228,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "6438:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6409:169:1"
=======
                    "src": "6938:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6909:174:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1247,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1145,
                        "src": "6621:8:1",
=======
                        "referencedDeclaration": 1149,
                        "src": "7129:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 3088,
                          "src": "6643:3:1",
=======
                          "referencedDeclaration": 3207,
                          "src": "7152:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
<<<<<<< HEAD
                        "src": "6643:10:1",
=======
                        "src": "7152:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1250,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6667:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7177:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 715,
<<<<<<< HEAD
                        "src": "6667:11:1",
=======
                        "src": "7177:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1252,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6692:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7203:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "specialty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 717,
<<<<<<< HEAD
                        "src": "6692:16:1",
=======
                        "src": "7203:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1254,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6722:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7234:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cedula",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 719,
<<<<<<< HEAD
                        "src": "6722:13:1",
=======
                        "src": "7234:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1256,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6749:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7262:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "email",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
<<<<<<< HEAD
                        "src": "6749:12:1",
=======
                        "src": "7262:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1258,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6775:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7289:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashPicture",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
<<<<<<< HEAD
                        "src": "6775:18:1",
=======
                        "src": "7289:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1260,
                          "name": "medico",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1217,
                          "src": "6807:6:1",
=======
                          "referencedDeclaration": 1221,
                          "src": "7322:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                            "typeString": "struct MedicsRegister.Medico memory"
                          }
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
<<<<<<< HEAD
                        "src": "6807:11:1",
=======
                        "src": "7322:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "_queryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1207,
                        "src": "6832:10:1",
=======
                        "referencedDeclaration": 1211,
                        "src": "7348:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1246,
                      "name": "MedicsRetrieve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
<<<<<<< HEAD
                      "src": "6593:14:1",
=======
                      "src": "7100:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,string memory,string memory,string memory,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6593:259:1",
=======
                    "src": "7100:269:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "6588:264:1"
=======
                  "src": "7095:274:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1265,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1154,
                      "src": "6862:4:1",
=======
                      "referencedDeclaration": 1158,
                      "src": "7380:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6869:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7387:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 715,
<<<<<<< HEAD
                      "src": "6869:11:1",
=======
                      "src": "7387:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6862:18:1",
=======
                    "src": "7380:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6862:18:1"
=======
                  "src": "7380:18:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1270,
                      "name": "specialty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1156,
                      "src": "6890:9:1",
=======
                      "referencedDeclaration": 1160,
                      "src": "7409:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1271,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6902:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7421:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "specialty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
<<<<<<< HEAD
                      "src": "6902:16:1",
=======
                      "src": "7421:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6890:28:1",
=======
                    "src": "7409:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1274,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6890:28:1"
=======
                  "src": "7409:28:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1275,
                      "name": "cedula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1158,
                      "src": "6928:6:1",
=======
                      "referencedDeclaration": 1162,
                      "src": "7448:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1276,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6937:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7457:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cedula",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
<<<<<<< HEAD
                      "src": "6937:13:1",
=======
                      "src": "7457:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6928:22:1",
=======
                    "src": "7448:22:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6928:22:1"
=======
                  "src": "7448:22:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1280,
                      "name": "email",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1160,
                      "src": "6960:5:1",
=======
                      "referencedDeclaration": 1164,
                      "src": "7481:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1281,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "6968:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7489:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "email",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
<<<<<<< HEAD
                      "src": "6968:12:1",
=======
                      "src": "7489:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6960:20:1",
=======
                    "src": "7481:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6960:20:1"
=======
                  "src": "7481:20:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1285,
                      "name": "hashPicture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1162,
                      "src": "6990:11:1",
=======
                      "referencedDeclaration": 1166,
                      "src": "7512:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1286,
                        "name": "medico",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1217,
                        "src": "7004:6:1",
=======
                        "referencedDeclaration": 1221,
                        "src": "7526:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Medico_$726_memory_ptr",
                          "typeString": "struct MedicsRegister.Medico memory"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashPicture",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 723,
<<<<<<< HEAD
                      "src": "7004:18:1",
=======
                      "src": "7526:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6990:32:1",
=======
                    "src": "7512:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6990:32:1"
=======
                  "src": "7512:32:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Returns el Medico en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account The owner address\n@return _date The uploaded timestamp",
            "id": 1291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1149,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "5831:12:1",
=======
                  "src": "6314:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5831:12:1"
=======
                "src": "6314:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 1152,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1151,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "5844:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "6327:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "5844:9:1"
=======
                "src": "6327:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "viewMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1145,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5791:16:1",
=======
                  "scope": 1295,
                  "src": "6274:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5791:7:1",
=======
                    "src": "6274:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5809:13:1",
=======
                  "scope": 1295,
                  "src": "6292:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5809:7:1",
=======
                    "src": "6292:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5790:33:1"
=======
              "src": "6273:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5872:18:1",
=======
                  "scope": 1295,
                  "src": "6356:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5872:6:1",
=======
                    "src": "6356:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "name": "specialty",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5900:23:1",
=======
                  "scope": 1295,
                  "src": "6385:23:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5900:6:1",
=======
                    "src": "6385:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "name": "cedula",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5933:20:1",
=======
                  "scope": 1295,
                  "src": "6419:20:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5933:6:1",
=======
                    "src": "6419:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "name": "email",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5963:19:1",
=======
                  "scope": 1295,
                  "src": "6450:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5963:6:1",
=======
                    "src": "6450:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "hashPicture",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1291,
                  "src": "5992:25:1",
=======
                  "scope": 1295,
                  "src": "6480:25:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5992:6:1",
=======
                    "src": "6480:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5862:156:1"
            },
            "scope": 1413,
            "src": "5771:1258:1",
=======
              "src": "6345:161:1"
            },
            "scope": 1417,
            "src": "6254:1298:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1390,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "7358:695:1",
=======
              "src": "7889:716:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1305,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1293,
                          "src": "7376:8:1",
=======
                          "referencedDeclaration": 1297,
                          "src": "7908:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7388:42:1",
=======
                          "src": "7920:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "7376:54:1",
=======
                        "src": "7908:54:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7368:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "7900:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7368:63:1",
=======
                    "src": "7900:63:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "7368:63:1"
=======
                  "src": "7900:63:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1311,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1295,
                            "src": "7449:5:1",
=======
                            "referencedDeclaration": 1299,
                            "src": "7982:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "7458:1:1",
=======
                            "src": "7991:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "7449:10:1",
=======
                          "src": "7982:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1314,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1295,
                            "src": "7463:5:1",
=======
                            "referencedDeclaration": 1299,
                            "src": "7996:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              },
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "7472:1:1",
=======
                                "src": "8005:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323536",
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "7475:3:1",
=======
                                "src": "8008:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_256_by_1",
                                  "typeString": "int_const 256"
                                },
                                "value": "256"
                              },
<<<<<<< HEAD
                              "src": "7472:6:1",
=======
                              "src": "8005:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                                "typeString": "int_const 1157...(70 digits omitted)...9936"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "7481:1:1",
=======
                              "src": "8014:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "7472:10:1",
=======
                            "src": "8005:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                              "typeString": "int_const 1157...(70 digits omitted)...9935"
                            }
                          },
<<<<<<< HEAD
                          "src": "7463:19:1",
=======
                          "src": "7996:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "7449:33:1",
=======
                        "src": "7982:33:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7441:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "7974:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7441:42:1",
=======
                    "src": "7974:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "7441:42:1"
=======
                  "src": "7974:42:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1325,
                              "name": "fileToMedic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
<<<<<<< HEAD
                              "src": "7501:11:1",
=======
                              "src": "8035:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                              }
                            },
                            "id": 1327,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1326,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1293,
                              "src": "7513:8:1",
=======
                              "referencedDeclaration": 1297,
                              "src": "8047:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "7501:21:1",
=======
                            "src": "8035:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                              "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "7501:28:1",
=======
                          "src": "8035:28:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7532:1:1",
=======
                          "src": "8066:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "7501:32:1",
=======
                        "src": "8035:32:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "7493:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "8027:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7493:41:1",
=======
                    "src": "8027:41:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "7493:41:1"
=======
                  "src": "8027:41:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1334,
                      "name": "_queryDate",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1390,
                      "src": "7545:18:1",
=======
                      "scope": 1394,
                      "src": "8081:18:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "7545:7:1",
=======
                        "src": "8081:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1336,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1335,
                    "name": "now",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 3090,
                    "src": "7566:3:1",
=======
                    "referencedDeclaration": 3209,
                    "src": "8102:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "7545:24:1"
=======
                  "src": "8081:24:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "assignments": [
                    1338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1338,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1390,
                      "src": "7579:11:1",
=======
                      "scope": 1394,
                      "src": "8116:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "7579:7:1",
=======
                        "src": "8116:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1342,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1293,
                        "src": "7608:8:1",
=======
                        "referencedDeclaration": 1297,
                        "src": "8145:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1339,
                      "name": "getMedicsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1412,
                      "src": "7593:14:1",
=======
                      "referencedDeclaration": 1416,
                      "src": "8130:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7593:24:1",
=======
                    "src": "8130:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "7579:38:1"
=======
                  "src": "8116:38:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "body": {
                    "id": 1384,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "7662:360:1",
=======
                    "src": "8201:371:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1353,
                                  "name": "fileToMedic",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
<<<<<<< HEAD
                                  "src": "7680:11:1",
=======
                                  "src": "8220:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                  }
                                },
                                "id": 1355,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1354,
                                  "name": "_account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 1293,
                                  "src": "7692:8:1",
=======
                                  "referencedDeclaration": 1297,
                                  "src": "8232:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
<<<<<<< HEAD
                                "src": "7680:21:1",
=======
                                "src": "8220:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                  "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                                }
                              },
                              "id": 1357,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1356,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1344,
                                "src": "7702:1:1",
=======
                                "referencedDeclaration": 1348,
                                "src": "8242:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "7680:24:1",
=======
                              "src": "8220:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Medico_$726_storage",
                                "typeString": "struct MedicsRegister.Medico storage ref"
                              }
                            },
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "date",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
<<<<<<< HEAD
                            "src": "7680:29:1",
=======
                            "src": "8220:29:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1359,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1295,
                            "src": "7713:5:1",
=======
                            "referencedDeclaration": 1299,
                            "src": "8253:5:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "7680:38:1",
=======
                          "src": "8220:38:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1383,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "7676:336:1",
=======
                        "src": "8216:345:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "trueBody": {
                          "id": 1382,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "7720:292:1",
=======
                          "src": "8260:301:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "statements": [
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1362,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                    "referencedDeclaration": 1293,
                                    "src": "7777:8:1",
=======
                                    "referencedDeclaration": 1297,
                                    "src": "8319:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1363,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
<<<<<<< HEAD
                                      "referencedDeclaration": 3088,
                                      "src": "7807:3:1",
=======
                                      "referencedDeclaration": 3207,
                                      "src": "8350:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                    "src": "7807:10:1",
=======
                                    "src": "8350:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1365,
                                          "name": "fileToMedic",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 731,
<<<<<<< HEAD
                                          "src": "7839:11:1",
=======
                                          "src": "8383:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1367,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1366,
                                          "name": "_account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
<<<<<<< HEAD
                                          "referencedDeclaration": 1293,
                                          "src": "7851:8:1",
=======
                                          "referencedDeclaration": 1297,
                                          "src": "8395:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "7839:21:1",
=======
                                        "src": "8383:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                          "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1369,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1368,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
<<<<<<< HEAD
                                        "referencedDeclaration": 1344,
                                        "src": "7861:1:1",
=======
                                        "referencedDeclaration": 1348,
                                        "src": "8405:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                                      "src": "7839:24:1",
=======
                                      "src": "8383:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Medico_$726_storage",
                                        "typeString": "struct MedicsRegister.Medico storage ref"
                                      }
                                    },
                                    "id": 1370,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hashPicture",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 723,
<<<<<<< HEAD
                                    "src": "7839:36:1",
=======
                                    "src": "8383:36:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1371,
                                    "name": "_queryDate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                    "referencedDeclaration": 1334,
                                    "src": "7897:10:1",
=======
                                    "referencedDeclaration": 1338,
                                    "src": "8442:10:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1361,
                                  "name": "MedicsDelete",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
<<<<<<< HEAD
                                  "src": "7743:12:1",
=======
                                  "src": "8284:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,string memory,uint256)"
                                  }
                                },
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "7743:182:1",
=======
                                "src": "8284:187:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1373,
                              "nodeType": "EmitStatement",
<<<<<<< HEAD
                              "src": "7738:187:1"
=======
                              "src": "8279:192:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "7943:31:1",
=======
                                "src": "8490:31:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1374,
                                      "name": "fileToMedic",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 731,
<<<<<<< HEAD
                                      "src": "7950:11:1",
=======
                                      "src": "8497:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 1376,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1375,
                                      "name": "_account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
<<<<<<< HEAD
                                      "referencedDeclaration": 1293,
                                      "src": "7962:8:1",
=======
                                      "referencedDeclaration": 1297,
                                      "src": "8509:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "7950:21:1",
=======
                                    "src": "8497:21:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                                      "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1378,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1377,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                    "referencedDeclaration": 1344,
                                    "src": "7972:1:1",
=======
                                    "referencedDeclaration": 1348,
                                    "src": "8519:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "7950:24:1",
=======
                                  "src": "8497:24:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Medico_$726_storage",
                                    "typeString": "struct MedicsRegister.Medico storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1380,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "7943:31:1"
=======
                              "src": "8490:31:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            },
                            {
                              "id": 1381,
                              "nodeType": "Break",
<<<<<<< HEAD
                              "src": "7992:5:1"
=======
                              "src": "8540:5:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1347,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1344,
                      "src": "7648:1:1",
=======
                      "referencedDeclaration": 1348,
                      "src": "8187:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1348,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1338,
                      "src": "7652:3:1",
=======
                      "referencedDeclaration": 1342,
                      "src": "8191:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "7648:7:1",
=======
                    "src": "8187:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1385,
                  "initializationExpression": {
                    "assignments": [
                      1344
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1344,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 1385,
                        "src": "7633:9:1",
=======
                        "scope": 1389,
                        "src": "8172:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "7633:7:1",
=======
                          "src": "8172:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1346,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "7645:1:1",
=======
                      "src": "8184:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "7633:13:1"
=======
                    "src": "8172:13:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "7657:3:1",
=======
                      "src": "8196:3:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1350,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1344,
                        "src": "7657:1:1",
=======
                        "referencedDeclaration": 1348,
                        "src": "8196:1:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1352,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "7657:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "7628:394:1"
=======
                    "src": "8196:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "8167:405:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1386,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1302,
                      "src": "8031:8:1",
=======
                      "referencedDeclaration": 1306,
                      "src": "8582:8:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "8042:4:1",
=======
                      "src": "8593:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "8031:15:1",
=======
                    "src": "8582:15:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "8031:15:1"
=======
                  "src": "8582:15:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Returns el medico en el índice del propietario de la dirección.\n@dev Controlado por el switch\n@param _account The owner address\n@return _date The uploaded timestamp",
            "id": 1391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1298,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1297,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "7311:12:1",
=======
                  "src": "7842:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "7311:12:1"
=======
                "src": "7842:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              },
              {
                "arguments": null,
                "id": 1300,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1299,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
<<<<<<< HEAD
                  "referencedDeclaration": 2631,
                  "src": "7324:9:1",
=======
                  "referencedDeclaration": 2746,
                  "src": "7855:9:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "7324:9:1"
=======
                "src": "7855:9:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "deleteMedics",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1293,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1391,
                  "src": "7271:16:1",
=======
                  "scope": 1395,
                  "src": "7802:16:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "7271:7:1",
=======
                    "src": "7802:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1391,
                  "src": "7289:13:1",
=======
                  "scope": 1395,
                  "src": "7820:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "7289:7:1",
=======
                    "src": "7820:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7270:33:1"
=======
              "src": "7801:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1391,
                  "src": "7343:13:1",
=======
                  "scope": 1395,
                  "src": "7874:13:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "7343:4:1",
=======
                    "src": "7874:4:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7342:15:1"
            },
            "scope": 1413,
            "src": "7249:804:1",
=======
              "src": "7873:15:1"
            },
            "scope": 1417,
            "src": "7780:825:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1411,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "8335:121:1",
=======
              "src": "8895:124:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1401,
                          "name": "_medic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 1393,
                          "src": "8353:6:1",
=======
                          "referencedDeclaration": 1397,
                          "src": "8914:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "8363:42:1",
=======
                          "src": "8924:42:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
<<<<<<< HEAD
                        "src": "8353:52:1",
=======
                        "src": "8914:52:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
<<<<<<< HEAD
                        3091,
                        3092
                      ],
                      "referencedDeclaration": 3091,
                      "src": "8345:7:1",
=======
                        3210,
                        3211
                      ],
                      "referencedDeclaration": 3210,
                      "src": "8906:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8345:61:1",
=======
                    "src": "8906:61:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "8345:61:1"
=======
                  "src": "8906:61:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1406,
                        "name": "fileToMedic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
<<<<<<< HEAD
                        "src": "8423:11:1",
=======
                        "src": "8985:11:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Medico_$726_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct MedicsRegister.Medico storage ref[] storage ref)"
                        }
                      },
                      "id": 1408,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1407,
                        "name": "_medic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1393,
                        "src": "8435:6:1",
=======
                        "referencedDeclaration": 1397,
                        "src": "8997:6:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "8423:19:1",
=======
                      "src": "8985:19:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Medico_$726_storage_$dyn_storage",
                        "typeString": "struct MedicsRegister.Medico storage ref[] storage ref"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "8423:26:1",
=======
                    "src": "8985:26:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1399,
                  "id": 1410,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "8416:33:1"
=======
                  "src": "8978:33:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                }
              ]
            },
            "documentation": "@notice Retorna el numero de medicos de esa direccion\n@dev Controlado por el switch\n@param _medic El dueño de la dirección\n@return Retorna el médico",
            "id": 1412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1395,
                  "name": "nonlyStopped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
<<<<<<< HEAD
                  "src": "8304:12:1",
=======
                  "src": "8864:12:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "8304:12:1"
=======
                "src": "8864:12:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
              }
            ],
            "name": "getMedicsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "name": "_medic",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1412,
                  "src": "8274:14:1",
=======
                  "scope": 1416,
                  "src": "8834:14:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "8274:7:1",
=======
                    "src": "8834:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8273:16:1"
=======
              "src": "8833:16:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            },
            "returnParameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1398,
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1412,
                  "src": "8326:7:1",
=======
                  "scope": 1416,
                  "src": "8886:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "8326:7:1",
=======
                    "src": "8886:7:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8325:9:1"
            },
            "scope": 1413,
            "src": "8250:206:1",
=======
              "src": "8885:9:1"
            },
            "scope": 1417,
            "src": "8810:209:1",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 1414,
        "src": "274:8184:1"
      }
    ],
    "src": "0:8459:1"
=======
        "scope": 1418,
        "src": "284:8738:1"
      }
    ],
    "src": "0:9024:1"
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xbf3f493c772c8c283fd124432c2d0f539ab343faa04258fe88e52912d36b102b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAdm",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoAddedAdm",
              "type": "address"
            }
          ],
          "name": "AdminAdded",
          "type": "event"
        },
        "0x583e7032182b053f2bcd5e3ac78021a3c8d321735043ee84032742c9a6528afd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "accountRen",
              "type": "address"
            }
          ],
          "name": "AdminRenounce",
          "type": "event"
        },
        "0x7fef988ea6e2f03c1f9fb16df333b2a7911dfb096f5c563866713c1c9517ec70": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAssistant",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoAddedAssistant",
              "type": "address"
            }
          ],
          "name": "AssistantAdded",
          "type": "event"
        },
        "0x83bb2e314d2b42b828b2082c5f08a3b9162d6322fe9b8bdaa47dc3d26ce183af": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldAssistant",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoRemovedAssistant",
              "type": "address"
            }
          ],
          "name": "AssistantRemoved",
          "type": "event"
        },
        "0x58b15338e6499b2b2827d169f60332c3b4b476fcd06b9a3c7e37afa77c49228e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "_stop",
              "type": "bool"
            }
          ],
          "name": "LogSwitchStop",
          "type": "event"
        },
        "0x93b0ab94930bbad064296971ea5e731f84ae511662781bcaf28543ab9042368a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newMed",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoAddedMed",
              "type": "address"
            }
          ],
          "name": "MedicAdded",
          "type": "event"
        },
        "0xb35968fdda9034197de288afbe8a2947dedade83d7dbc0de3e340d4f62ce64dc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldMed",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoRemovedMed",
              "type": "address"
            }
          ],
          "name": "MedicRemoved",
          "type": "event"
        },
        "0x6aba037ef704ffdfdde88e8ef5781d7a050dc66297aab7581397415e46239ea6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "medRen",
              "type": "address"
            }
          ],
          "name": "MedicRenounce",
          "type": "event"
        },
        "0x99ef3acfa68b13c01a6a7e6717e2224b4157940e6a56be5bd957d13c059fe3a0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_medic",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_specialty",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_cedula",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_email",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_hashPicture",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_date",
              "type": "uint256"
            }
          ],
          "name": "MedicsAdded",
          "type": "event"
        },
        "0x1977237b5f2ef5422b52998d1f30b1e788c1c890c07a074c7856db9bc6d2ccc2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_medic",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_hashPicture",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_date",
              "type": "uint256"
            }
          ],
          "name": "MedicsDelete",
          "type": "event"
        },
        "0xec95aa37f5ff4f1e52a5333f61229ce376a04a63d4ccdfae6678ef305b97f232": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_medic",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_specialty",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_cedula",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_email",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_hashPicture",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_date",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_queryDate",
              "type": "uint256"
            }
          ],
          "name": "MedicsRetrieve",
          "type": "event"
        },
        "0x30990cdc5872ccbf411335c8ed18c1622ddeafe254b87f4ab281a8536fdc105d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_medic",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_specialty",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_cedula",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_email",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_hashPicture",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_date",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_queryDate",
              "type": "uint256"
            }
          ],
          "name": "MedicsUpdate",
          "type": "event"
        },
        "0xf6dfb9f71429364456283a1521c30cc400d799d7b381d7ce164687f11c18dbaf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newPat",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoAddedPat",
              "type": "address"
            }
          ],
          "name": "PatientAdded",
          "type": "event"
        },
        "0xd00481c3fc5867ec74704c9c99334b8d53c7735c947bdcb6cbebcae6740ed940": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldPat",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "whoRemovedPat",
              "type": "address"
            }
          ],
          "name": "PatientRemoved",
          "type": "event"
        }
      },
      "links": {},
<<<<<<< HEAD
      "address": "0xCb3393ac1fc01E8Fe7d0fAD369A945E12dAb56Af",
      "transactionHash": "0x6938911c0d6142c457fbdd0d9bd62cc35d59437f07805d85bc906e9af170abdd"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-27T05:52:26.313Z",
=======
      "address": "0x88C0985cB03E5C73AC91537a4b2C4e56d1AecBCf",
      "transactionHash": "0x166449107b13739eced207a08329937f1c70d1dd2797bcfc0ff67a481a671353"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-27T00:53:09.233Z",
  "networkType": "ethereum",
>>>>>>> dbb4894bb395413df9972d12775c55153e72b9e9
  "devdoc": {
    "author": "Francisco Alemán",
    "details": "El contrato hereda las funciones del contrato de roles",
    "methods": {
      "addAdmin(address)": {
        "details": "Función pública para asignar admin",
        "params": {
          "account": "Cuenta que será asignada como admin"
        }
      },
      "addAssistant(address)": {
        "details": "Función pública para asignar asistente",
        "params": {
          "account": "Cuenta que será asignada como asistente"
        }
      },
      "addMedic(address)": {
        "details": "Función pública para asignar médico",
        "params": {
          "account": "Cuenta que será asignada como médico"
        }
      },
      "addMedics(address,string,string,string,string,string)": {
        "details": "Función para agregar un médico. Esta función es realizada por un administrador.",
        "params": {
          "_account": "a",
          "_cedula": "a",
          "_email": "a",
          "_hashPicture": "a",
          "_name": "a",
          "_specialty": "a"
        },
        "return": "_success a"
      },
      "addPatient(address)": {
        "details": "Función pública para asignar paciente",
        "params": {
          "account": "Cuenta que será asignada como paciente"
        }
      },
      "deleteMedics(address,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "The owner address"
        },
        "return": "_date The uploaded timestamp"
      },
      "emergencyStop(bool)": {
        "params": {
          "_stop": "Switch del contrado de encendido/apagado"
        }
      },
      "isAdmin(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de admin"
      },
      "isAssistant(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de asistente"
      },
      "isMedic(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de médico"
      },
      "isPatient(address)": {
        "params": {
          "account": "Cuenta donde se validará el rol."
        },
        "return": "true si la cuenta tiene rol de paciente"
      },
      "removeAssistant(address)": {
        "details": "Remover a rol de asistente. Quien invoque al contrato no volverá a ser asistente."
      },
      "removeMedic(address)": {
        "details": "Función pública para remover médico",
        "params": {
          "account": "Cuenta que será removida de médico"
        }
      },
      "removePatient(address)": {
        "details": "Remover a rol de paciente. Quien invoque al contrato no volverá a ser paciente."
      },
      "renounceAdmin()": {
        "details": "Renunciar a rol de administrador. Quien inque al contrato no volverá a ser admin."
      },
      "renounceMedic()": {
        "details": "Renunciar a rol de personal médico. Quien invoque al contrato no volverá a ser médico."
      },
      "updateMedics(address,string,string,string,string,string,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "Cuenta del médico"
        },
        "return": "a"
      },
      "viewMedics(address,uint256)": {
        "details": "Controlado por el switch",
        "params": {
          "_account": "The owner address"
        },
        "return": "_date The uploaded timestamp"
      }
    },
    "title": "Smart Contract de Registro de médicos."
  },
  "userdoc": {
    "methods": {
      "deleteMedics(address,uint256)": {
        "notice": "Returns el medico en el índice del propietario de la dirección."
      },
      "emergencyStop(bool)": {
        "notice": "Pausar el contrato Se detiene el contrato bajo ciertas condiciones. Sera útil cuando nuevos errores sean descubiertos."
      },
      "updateMedics(address,string,string,string,string,string,uint256)": {
        "notice": "Returns el Medico en el índice del propietario de la dirección."
      },
      "viewMedics(address,uint256)": {
        "notice": "Returns el Medico en el índice del propietario de la dirección."
      }
    },
    "notice": "Este contrato representa el registro de los médicos."
  }
}